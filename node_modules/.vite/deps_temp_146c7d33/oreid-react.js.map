{
  "version": 3,
  "sources": ["../../oreid-react/src/OreIdContext/OreIdContext.tsx", "../../oreid-react/src/components/Observables/Observables.tsx", "../../oreid-react/src/components/OreidProvider/OreIdProvider.tsx", "../../oreid-react/src/hooks/useIsLoggedIn/useIsLoggedIn.ts", "../../oreid-react/src/hooks/useOreId/useOreId.ts", "../../oreid-react/src/hooks/useUser/useUser.ts"],
  "sourcesContent": ["import { createContext } from \"react\";\nimport { OreId, UserData } from \"oreid-js\";\n\nexport const OreIdContext = createContext<{\n\toreId: OreId;\n\tuser: UserData | undefined;\n\tsetUser: (user: UserData | undefined) => void;\n\tisLoggedIn: boolean;\n\tsetIsLoggedIn: (isLoggedIn: boolean) => void;\n\taccessToken: string | undefined;\n\tsetAccessToken: (accessToken: string | undefined) => void;\n}>({\n\t//@ts-ignore\n\toreId: undefined,\n\tuser: undefined,\n\tsetUser: () => undefined,\n\tisLoggedIn: false,\n\tsetIsLoggedIn: () => undefined,\n\taccessToken: undefined,\n\tsetAccessToken: () => undefined,\n});\n", "// @ts-nocheck\n\nimport { Auth, User } from \"oreid-js\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { OreIdContext } from \"src/OreIdContext\";\n\ninterface Props {}\nexport const Observables: React.FC<Props> = () => {\n\tconst { oreId, setUser, setAccessToken, setIsLoggedIn } =\n\t\tuseContext(OreIdContext);\n\tconst [authUser, setAuthUser] = useState<User | undefined>(oreId.auth.user);\n\n\tconst updateUserState = useCallback(\n\t\t(newUser: User) => {\n\t\t\ttry {\n\t\t\t\tsetUser(newUser?.data);\n\t\t\t} catch (err) {\n\t\t\t\tsetUser(undefined);\n\t\t\t}\n\t\t},\n\t\t[setUser]\n\t);\n\n\tconst updateOreIdState = useCallback(\n\t\t(auth: Auth) => {\n\t\t\tsetAuthUser(auth?.user);\n\t\t\tsetIsLoggedIn(auth.isLoggedIn);\n\t\t\tsetAccessToken(auth.accessToken);\n\t\t},\n\t\t[setAuthUser, setIsLoggedIn, setAccessToken]\n\t);\n\n\tuseEffect(() => {\n\t\toreId.auth.subscribe(updateOreIdState);\n\t\treturn () => {\n\t\t\toreId.auth.unsubscribe(updateOreIdState);\n\t\t};\n\t}, [oreId, updateOreIdState]);\n\n\tuseEffect(() => {\n\t\tif (!authUser) return;\n\t\tauthUser.subscribe(updateUserState);\n\t\tauthUser.getData().catch(() => {\n\t\t\t// ! If it fails, nothing needs to be done.\n\t\t\t// ! This function should stay here to prevent the error alert from appearing in the console\n\t\t});\n\t\treturn () => {\n\t\t\tauthUser.unsubscribe(updateUserState);\n\t\t};\n\t}, [authUser]);\n\n\treturn null;\n};\n", "import React, { useEffect } from \"react\";\nimport { OreId, UserData } from \"oreid-js\";\nimport { OreIdContext } from \"src/OreIdContext\";\nimport { useState } from \"react\";\nimport { Observables } from \"../Observables\";\n\ninterface Props {\n\toreId: OreId;\n\tchildren: React.ReactNode;\n}\nexport const OreidProvider: React.FC<Props> = ({ children, oreId }) => {\n\tconst [user, setUser] = useState<UserData | undefined>(undefined);\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [accessToken, setAccessToken] = useState<string | undefined>(undefined);\n\n\tuseEffect(() => {\n\t\tif (typeof window === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\t\tif (!oreId.isInitialized) {\n\t\t\toreId.init();\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<OreIdContext.Provider\n\t\t\tvalue={{\n\t\t\t\toreId,\n\t\t\t\tuser,\n\t\t\t\tsetUser,\n\t\t\t\tisLoggedIn,\n\t\t\t\tsetIsLoggedIn,\n\t\t\t\taccessToken,\n\t\t\t\tsetAccessToken,\n\t\t\t}}\n\t\t>\n\t\t\t<Observables />\n\t\t\t{children}\n\t\t</OreIdContext.Provider>\n\t);\n};\n", "import { useContext } from \"react\";\nimport { OreIdContext } from \"src/OreIdContext\";\n\nexport const useIsLoggedIn = () => {\n\tconst { isLoggedIn } = useContext(OreIdContext);\n\treturn isLoggedIn;\n};\n", "import { useContext } from \"react\";\nimport { OreIdContext } from \"src/OreIdContext\";\n\nexport const useOreId = () => {\n\tconst { oreId } = useContext(OreIdContext);\n\treturn oreId;\n};\n", "import { useContext } from \"react\";\nimport { OreIdContext } from \"src/OreIdContext\";\n\nexport const useUser = () => {\n\tconst { user } = useContext(OreIdContext);\n\treturn user;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAGO,UAAM,eAAeA,MAAAA,cAQzB;;QAEF,OAAO;QACP,MAAM;QACN,SAAS,WAAA;AAAM,iBAAA;QAAS;QACxB,YAAY;QACZ,eAAe,WAAA;AAAM,iBAAA;QAAS;QAC9B,aAAa;QACb,gBAAgB,WAAA;AAAM,iBAAA;QAAS;MAC/B,CAAA;ACbM,UAAM,cAA+B,WAAA;AACrC,YAAA,KACLC,MAAAA,WAAW,YAAY,GADhB,QAAK,GAAA,OAAE,UAAO,GAAA,SAAE,iBAAc,GAAA,gBAAE,gBAAa,GAAA;AAE/C,YAAA,KAA0BC,MAAAA,SAA2B,MAAM,KAAK,IAAI,GAAnE,WAAQ,GAAA,CAAA,GAAE,cAAW,GAAA,CAAA;AAE5B,YAAM,kBAAkBC,MAAAA,YACvB,SAAC,SAAa;AACb,cAAI;AACH,oBAAQ,YAAA,QAAA,YAAO,SAAA,SAAP,QAAS,IAAI;UACrB,SAAQ,KAAK;AACb,oBAAQ,MAAS;UACjB;QACF,GACA,CAAC,OAAO,CAAC;AAGV,YAAM,mBAAmBA,MAAAA,YACxB,SAAC,MAAU;AACV,sBAAY,SAAA,QAAA,SAAI,SAAA,SAAJ,KAAM,IAAI;AACtB,wBAAc,KAAK,UAAU;AAC7B,yBAAe,KAAK,WAAW;WAEhC,CAAC,aAAa,eAAe,cAAc,CAAC;AAG7CC,cAAAA,UAAU,WAAA;AACT,gBAAM,KAAK,UAAU,gBAAgB;AACrC,iBAAO,WAAA;AACN,kBAAM,KAAK,YAAY,gBAAgB;UACxC;QACD,GAAG,CAAC,OAAO,gBAAgB,CAAC;AAE5BA,cAAAA,UAAU,WAAA;AACT,cAAI,CAAC;AAAU;AACf,mBAAS,UAAU,eAAe;AAClC,mBAAS,QAAO,EAAG,MAAM,WAAA;UAGzB,CAAC;AACD,iBAAO,WAAA;AACN,qBAAS,YAAY,eAAe;UACrC;QACD,GAAG,CAAC,QAAQ,CAAC;AAEb,eAAO;MACR;AC1CO,UAAM,gBAAiC,SAAC,IAAmB;YAAjB,WAAQ,GAAA,UAAE,QAAK,GAAA;AACzD,YAAA,KAAkBF,MAAAA,SAA+B,MAAS,GAAzD,OAAI,GAAA,CAAA,GAAE,UAAO,GAAA,CAAA;AACd,YAAA,KAA8BA,MAAAA,SAAS,KAAK,GAA3C,aAAU,GAAA,CAAA,GAAE,gBAAa,GAAA,CAAA;AAC1B,YAAA,KAAgCA,MAAAA,SAA6B,MAAS,GAArE,cAAW,GAAA,CAAA,GAAE,iBAAc,GAAA,CAAA;AAElCE,cAAAA,UAAU,WAAA;AACT,cAAI,OAAO,WAAW,aAAa;AAClC;UACA;AACD,cAAI,CAAC,MAAM,eAAe;AACzB,kBAAM,KAAI;UACV;WACC,CAAA,CAAE;AAEL,eACCC,eAAAA,SAAAA,EAAC;UAAA,aAAa;UAAQ,EACrB,OAAO;YACN;YACA;YACA;YACA;YACA;YACA;YACA;UACA,EAAA;UAEDA,eAAAA,SAAAA,EAAA,cAAC,aAAc,IAAA;UACd;QAAQ;MAGZ;ACrCa,UAAA,gBAAgB,WAAA;AACpB,YAAA,aAAeJ,MAAAA,WAAW,YAAY,EAAC;AAC/C,eAAO;MACR;ACHa,UAAA,WAAW,WAAA;AACf,YAAA,QAAUA,MAAAA,WAAW,YAAY,EAAC;AAC1C,eAAO;MACR;ACHa,UAAA,UAAU,WAAA;AACd,YAAA,OAASA,MAAAA,WAAW,YAAY,EAAC;AACzC,eAAO;MACR;;;;;;;;;",
  "names": ["createContext", "useContext", "useState", "useCallback", "useEffect", "React"]
}
