{
  "version": 3,
  "sources": ["../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/bytesToUuid.js", "../../uuid/dist/esm-browser/v1.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/v4.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../uuid/dist/esm-browser/index.js", "../../canonicalize/lib/canonicalize.js", "../../jwt-decode/lib/atob.js", "../../jwt-decode/lib/base64_url_decode.js", "../../jwt-decode/lib/index.js", "../../js-base64/base64.js", "../../eosjs/dist/ripemd.js", "../../eosjs/src/eosjs-numeric.ts", "../../eosjs/src/eosjs-serialize.ts", "../../eosjs/src/abi.abi.json", "../../eosjs/src/transaction.abi.json", "../../eosjs/src/eosjs-api.ts", "../../eosjs/src/eosjs-rpcerror.ts", "../../eosjs/src/eosjs-jsonrpc.ts", "../../eosjs/src/index.ts", "../../@aikon/eos-transit/src/stateContainer.ts", "../../@aikon/eos-transit/node_modules/uuid/lib/rng-browser.js", "../../@aikon/eos-transit/node_modules/uuid/lib/bytesToUuid.js", "../../@aikon/eos-transit/node_modules/uuid/v4.js", "../../@aikon/eos-transit/src/util.ts", "../../@aikon/eos-transit/src/wallet.ts", "../../@aikon/eos-transit/src/walletAccessContext.ts", "../../@aikon/eos-transit/src/index.ts", "../../@msgpack/msgpack/src/utils/int.ts", "../../@msgpack/msgpack/src/utils/utf8.ts", "../../@msgpack/msgpack/src/ExtData.ts", "../../@msgpack/msgpack/src/DecodeError.ts", "../../@msgpack/msgpack/src/timestamp.ts", "../../@msgpack/msgpack/src/ExtensionCodec.ts", "../../@msgpack/msgpack/src/utils/typedArrays.ts", "../../@msgpack/msgpack/src/Encoder.ts", "../../@msgpack/msgpack/src/encode.ts", "../../@msgpack/msgpack/src/utils/prettyByte.ts", "../../@msgpack/msgpack/src/CachedKeyDecoder.ts", "../../@msgpack/msgpack/src/Decoder.ts", "../../@msgpack/msgpack/src/decode.ts", "../../@msgpack/msgpack/src/utils/stream.ts", "../../@msgpack/msgpack/src/decodeAsync.ts", "../../@msgpack/msgpack/src/index.ts", "../../axios/lib/helpers/bind.js", "../../axios/lib/utils.js", "../../axios/lib/helpers/buildURL.js", "../../axios/lib/core/InterceptorManager.js", "../../axios/lib/helpers/normalizeHeaderName.js", "../../axios/lib/core/enhanceError.js", "../../axios/lib/defaults/transitional.js", "../../axios/lib/core/createError.js", "../../axios/lib/core/settle.js", "../../axios/lib/helpers/cookies.js", "../../axios/lib/helpers/isAbsoluteURL.js", "../../axios/lib/helpers/combineURLs.js", "../../axios/lib/core/buildFullPath.js", "../../axios/lib/helpers/parseHeaders.js", "../../axios/lib/helpers/isURLSameOrigin.js", "../../axios/lib/cancel/Cancel.js", "../../axios/lib/adapters/xhr.js", "../../axios/lib/defaults/index.js", "../../axios/lib/core/transformData.js", "../../axios/lib/cancel/isCancel.js", "../../axios/lib/core/dispatchRequest.js", "../../axios/lib/core/mergeConfig.js", "../../axios/lib/env/data.js", "../../axios/lib/helpers/validator.js", "../../axios/lib/core/Axios.js", "../../axios/lib/cancel/CancelToken.js", "../../axios/lib/helpers/spread.js", "../../axios/lib/helpers/isAxiosError.js", "../../axios/lib/axios.js", "../../axios/index.js", "browser-external:crypto", "../../crypto-js/core.js", "../../crypto-js/sha256.js", "../../crypto-js/hmac.js", "../../crypto-js/hmac-sha256.js", "../../js-cookie/src/js.cookie.js", "../../oreid-js/src/api/models.ts", "../../oreid-js/src/common/models.ts", "../../oreid-js/src/wallets/models.ts", "../../oreid-js/src/core/models.ts", "../../oreid-js/src/webWidget/models.ts", "../../oreid-js/src/utils/helpers.ts", "../../oreid-js/src/api/helpers.ts", "../../oreid-js/src/api/endpoints/addPermission.ts", "../../oreid-js/src/api/endpoints/appToken.ts", "../../oreid-js/src/api/endpoints/canAutoSign.ts", "../../oreid-js/src/api/endpoints/convertOauth.ts", "../../oreid-js/src/api/endpoints/custodialMigrateAccount.ts", "../../oreid-js/src/api/endpoints/custodialNewAccount.ts", "../../oreid-js/src/api/endpoints/custodialSignString.ts", "../../oreid-js/src/api/endpoints/deleteTestUser.ts", "../../oreid-js/src/api/endpoints/getConfig.ts", "../../oreid-js/src/api/endpoints/getUser.ts", "../../oreid-js/src/api/endpoints/loginUserWithToken.ts", "../../oreid-js/src/api/endpoints/newUserWithToken.ts", "../../oreid-js/src/api/endpoints/passwordLessSendCode.ts", "../../oreid-js/src/api/endpoints/passwordLessVerifyCode.ts", "../../oreid-js/src/api/endpoints/signTransaction.ts", "../../oreid-js/src/core/urlGenerators.ts", "../../oreid-js/src/utils/chainUtils.ts", "../../oreid-js/src/transit/transitProviders.ts", "../../oreid-js/src/transit/TransitHelper.ts", "../../oreid-js/src/ual/ualProviders.ts", "../../oreid-js/src/ual/UalHelper.ts", "../../oreid-js/src/utils/observable.ts", "../../oreid-js/src/api/endpoints/updateDelayWalletSetup.ts", "../../oreid-js/src/user/user.ts", "../../oreid-js/src/auth/accessTokenHelper.ts", "../../oreid-js/src/auth/auth.ts", "../../oreid-js/src/constants.ts", "../../oreid-js/src/transaction/transaction.ts", "../../oreid-js/src/utils/hmac.ts", "../../oreid-js/src/utils/localState.ts", "../../oreid-js/src/utils/storage.ts", "../../oreid-js/src/core/Settings.ts", "../../oreid-js/src/wallets/WalletHelper.ts", "../../oreid-js/src/core/oreId.ts", "../../oreid-js/src/plugins/models.ts"],
  "sourcesContent": ["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}", "/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;", "import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nexport default v1;", "import bytesToUuid from './bytesToUuid.js';\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = new Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  var generateUUID = function generateUUID(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n    if (typeof value == 'string') value = stringToBytes(value);\n    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3\n\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  }; // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name;\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var i;\n  var x;\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  var hex;\n\n  for (i = 0; i < length32; i += 8) {\n    x = input[i >> 5] >>> i % 32 & 0xff;\n    hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(len + 64 >>> 9 << 4) + 14] = len;\n  var i;\n  var olda;\n  var oldb;\n  var oldc;\n  var oldd;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  var i;\n  var output = [];\n  output[(input.length >> 2) - 1] = undefined;\n\n  for (i = 0; i < output.length; i += 1) {\n    output[i] = 0;\n  }\n\n  var length8 = input.length * 8;\n\n  for (i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var i = 0; i < N; i++) {\n    M[i] = new Array(16);\n\n    for (var j = 0; j < 16; j++) {\n      M[i][j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var i = 0; i < N; i++) {\n    var W = new Array(80);\n\n    for (var t = 0; t < 16; t++) {\n      W[t] = M[i][t];\n    }\n\n    for (var t = 16; t < 80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t = 0; t < 80; t++) {\n      var s = Math.floor(t / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';", "/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (object === null || typeof object !== 'object' || object.toJSON != null) {\n    return JSON.stringify(object);\n  }\n\n  if (Array.isArray(object)) {\n    return '[' + object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return t + comma + serialize(value);\n    }, '') + ']';\n  }\n\n  return '{' + Object.keys(object).sort().reduce((t, cv, ci) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return t + comma + serialize(cv) + ':' + serialize(object[cv]);\n  }, '') + '}';\n};\n", "/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n", "var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n", "'use strict';\n\nvar base64_url_decode = require('./base64_url_decode');\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n", "//\n// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!\n//\n;\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory()\n        : typeof define === 'function' && define.amd\n            ? define(factory) :\n            // cf. https://github.com/dankogai/js-base64/issues/119\n            (function () {\n                // existing version for noConflict()\n                var _Base64 = global.Base64;\n                var gBase64 = factory();\n                gBase64.noConflict = function () {\n                    global.Base64 = _Base64;\n                    return gBase64;\n                };\n                if (global.Meteor) { // Meteor.js\n                    Base64 = gBase64;\n                }\n                global.Base64 = gBase64;\n            })();\n}((typeof self !== 'undefined' ? self\n    : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n            : this), function () {\n    'use strict';\n    /**\n     *  base64.ts\n     *\n     *  Licensed under the BSD 3-Clause License.\n     *    http://opensource.org/licenses/BSD-3-Clause\n     *\n     *  References:\n     *    http://en.wikipedia.org/wiki/Base64\n     *\n     * @author Dan Kogai (https://github.com/dankogai)\n     */\n    var version = '3.7.5';\n    /**\n     * @deprecated use lowercase `version`.\n     */\n    var VERSION = version;\n    var _hasatob = typeof atob === 'function';\n    var _hasbtoa = typeof btoa === 'function';\n    var _hasBuffer = typeof Buffer === 'function';\n    var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\n    var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\n    var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var b64chs = Array.prototype.slice.call(b64ch);\n    var b64tab = (function (a) {\n        var tab = {};\n        a.forEach(function (c, i) { return tab[c] = i; });\n        return tab;\n    })(b64chs);\n    var b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n    var _fromCC = String.fromCharCode.bind(String);\n    var _U8Afrom = typeof Uint8Array.from === 'function'\n        ? Uint8Array.from.bind(Uint8Array)\n        : function (it) { return new Uint8Array(Array.prototype.slice.call(it, 0)); };\n    var _mkUriSafe = function (src) { return src\n        .replace(/=/g, '').replace(/[+\\/]/g, function (m0) { return m0 == '+' ? '-' : '_'; }); };\n    var _tidyB64 = function (s) { return s.replace(/[^A-Za-z0-9\\+\\/]/g, ''); };\n    /**\n     * polyfill version of `btoa`\n     */\n    var btoaPolyfill = function (bin) {\n        // console.log('polyfilled');\n        var u32, c0, c1, c2, asc = '';\n        var pad = bin.length % 3;\n        for (var i = 0; i < bin.length;) {\n            if ((c0 = bin.charCodeAt(i++)) > 255 ||\n                (c1 = bin.charCodeAt(i++)) > 255 ||\n                (c2 = bin.charCodeAt(i++)) > 255)\n                throw new TypeError('invalid character found');\n            u32 = (c0 << 16) | (c1 << 8) | c2;\n            asc += b64chs[u32 >> 18 & 63]\n                + b64chs[u32 >> 12 & 63]\n                + b64chs[u32 >> 6 & 63]\n                + b64chs[u32 & 63];\n        }\n        return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n    };\n    /**\n     * does what `window.btoa` of web browsers do.\n     * @param {String} bin binary string\n     * @returns {string} Base64-encoded string\n     */\n    var _btoa = _hasbtoa ? function (bin) { return btoa(bin); }\n        : _hasBuffer ? function (bin) { return Buffer.from(bin, 'binary').toString('base64'); }\n            : btoaPolyfill;\n    var _fromUint8Array = _hasBuffer\n        ? function (u8a) { return Buffer.from(u8a).toString('base64'); }\n        : function (u8a) {\n            // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n            var maxargs = 0x1000;\n            var strs = [];\n            for (var i = 0, l = u8a.length; i < l; i += maxargs) {\n                strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n            }\n            return _btoa(strs.join(''));\n        };\n    /**\n     * converts a Uint8Array to a Base64 string.\n     * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n     * @returns {string} Base64 string\n     */\n    var fromUint8Array = function (u8a, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n    };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const utob = (src: string) => unescape(encodeURIComponent(src));\n    // reverting good old fationed regexp\n    var cb_utob = function (c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                    + _fromCC(0x80 | (cc & 0x3f)))\n                    : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                        + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                        + _fromCC(0x80 | (cc & 0x3f)));\n        }\n        else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n                + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n                + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                + _fromCC(0x80 | (cc & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-8 string\n     * @returns {string} UTF-16 string\n     */\n    var utob = function (u) { return u.replace(re_utob, cb_utob); };\n    //\n    var _encode = _hasBuffer\n        ? function (s) { return Buffer.from(s, 'utf8').toString('base64'); }\n        : _TE\n            ? function (s) { return _fromUint8Array(_TE.encode(s)); }\n            : function (s) { return _btoa(utob(s)); };\n    /**\n     * converts a UTF-8-encoded string to a Base64 string.\n     * @param {boolean} [urlsafe] if `true` make the result URL-safe\n     * @returns {string} Base64 string\n     */\n    var encode = function (src, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe\n            ? _mkUriSafe(_encode(src))\n            : _encode(src);\n    };\n    /**\n     * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n     * @returns {string} Base64 string\n     */\n    var encodeURI = function (src) { return encode(src, true); };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const btou = (src: string) => decodeURIComponent(escape(src));\n    // reverting good old fationed regexp\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function (cccc) {\n        switch (cccc.length) {\n            case 4:\n                var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                    | ((0x3f & cccc.charCodeAt(1)) << 12)\n                    | ((0x3f & cccc.charCodeAt(2)) << 6)\n                    | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n                return (_fromCC((offset >>> 10) + 0xD800)\n                    + _fromCC((offset & 0x3FF) + 0xDC00));\n            case 3:\n                return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    | (0x3f & cccc.charCodeAt(2)));\n            default:\n                return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                    | (0x3f & cccc.charCodeAt(1)));\n        }\n    };\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-16 string\n     * @returns {string} UTF-8 string\n     */\n    var btou = function (b) { return b.replace(re_btou, cb_btou); };\n    /**\n     * polyfill version of `atob`\n     */\n    var atobPolyfill = function (asc) {\n        // console.log('polyfilled');\n        asc = asc.replace(/\\s+/g, '');\n        if (!b64re.test(asc))\n            throw new TypeError('malformed base64.');\n        asc += '=='.slice(2 - (asc.length & 3));\n        var u24, bin = '', r1, r2;\n        for (var i = 0; i < asc.length;) {\n            u24 = b64tab[asc.charAt(i++)] << 18\n                | b64tab[asc.charAt(i++)] << 12\n                | (r1 = b64tab[asc.charAt(i++)]) << 6\n                | (r2 = b64tab[asc.charAt(i++)]);\n            bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n                : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                    : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n        }\n        return bin;\n    };\n    /**\n     * does what `window.atob` of web browsers do.\n     * @param {String} asc Base64-encoded string\n     * @returns {string} binary string\n     */\n    var _atob = _hasatob ? function (asc) { return atob(_tidyB64(asc)); }\n        : _hasBuffer ? function (asc) { return Buffer.from(asc, 'base64').toString('binary'); }\n            : atobPolyfill;\n    //\n    var _toUint8Array = _hasBuffer\n        ? function (a) { return _U8Afrom(Buffer.from(a, 'base64')); }\n        : function (a) { return _U8Afrom(_atob(a).split('').map(function (c) { return c.charCodeAt(0); })); };\n    /**\n     * converts a Base64 string to a Uint8Array.\n     */\n    var toUint8Array = function (a) { return _toUint8Array(_unURI(a)); };\n    //\n    var _decode = _hasBuffer\n        ? function (a) { return Buffer.from(a, 'base64').toString('utf8'); }\n        : _TD\n            ? function (a) { return _TD.decode(_toUint8Array(a)); }\n            : function (a) { return btou(_atob(a)); };\n    var _unURI = function (a) { return _tidyB64(a.replace(/[-_]/g, function (m0) { return m0 == '-' ? '+' : '/'; })); };\n    /**\n     * converts a Base64 string to a UTF-8 string.\n     * @param {String} src Base64 string.  Both normal and URL-safe are supported\n     * @returns {string} UTF-8 string\n     */\n    var decode = function (src) { return _decode(_unURI(src)); };\n    /**\n     * check if a value is a valid Base64 string\n     * @param {String} src a value to check\n      */\n    var isValid = function (src) {\n        if (typeof src !== 'string')\n            return false;\n        var s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n        return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n    };\n    //\n    var _noEnum = function (v) {\n        return {\n            value: v, enumerable: false, writable: true, configurable: true\n        };\n    };\n    /**\n     * extend String.prototype with relevant methods\n     */\n    var extendString = function () {\n        var _add = function (name, body) { return Object.defineProperty(String.prototype, name, _noEnum(body)); };\n        _add('fromBase64', function () { return decode(this); });\n        _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n        _add('toBase64URI', function () { return encode(this, true); });\n        _add('toBase64URL', function () { return encode(this, true); });\n        _add('toUint8Array', function () { return toUint8Array(this); });\n    };\n    /**\n     * extend Uint8Array.prototype with relevant methods\n     */\n    var extendUint8Array = function () {\n        var _add = function (name, body) { return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body)); };\n        _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n        _add('toBase64URI', function () { return fromUint8Array(this, true); });\n        _add('toBase64URL', function () { return fromUint8Array(this, true); });\n    };\n    /**\n     * extend Builtin prototypes with relevant methods\n     */\n    var extendBuiltins = function () {\n        extendString();\n        extendUint8Array();\n    };\n    var gBase64 = {\n        version: version,\n        VERSION: VERSION,\n        atob: _atob,\n        atobPolyfill: atobPolyfill,\n        btoa: _btoa,\n        btoaPolyfill: btoaPolyfill,\n        fromBase64: decode,\n        toBase64: encode,\n        encode: encode,\n        encodeURI: encodeURI,\n        encodeURL: encodeURI,\n        utob: utob,\n        btou: btou,\n        decode: decode,\n        isValid: isValid,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array,\n        extendString: extendString,\n        extendUint8Array: extendUint8Array,\n        extendBuiltins: extendBuiltins\n    };\n    //\n    // export Base64 to the namespace\n    //\n    // ES5 is yet to have Object.assign() that may make transpilers unhappy.\n    // gBase64.Base64 = Object.assign({}, gBase64);\n    gBase64.Base64 = {};\n    Object.keys(gBase64).forEach(function (k) { return gBase64.Base64[k] = gBase64[k]; });\n    return gBase64;\n}));\n", "// https://gist.githubusercontent.com/wlzla000/bac83df6d3c51916c4dd0bc947e46947/raw/7ee3462b095ab22580ddaf191f44a590da6fe33b/RIPEMD-160.js\n\n/*\n\tRIPEMD-160.js\n\n\t\tdeveloped\n\t\t\tby K. (https://github.com/wlzla000)\n\t\t\ton December 27-29, 2017,\n\n\t\tlicensed under\n\n\n\t\tthe MIT license\n\n\t\tCopyright (c) 2017 K.\n\n\t\t Permission is hereby granted, free of charge, to any person\n\t\tobtaining a copy of this software and associated documentation\n\t\tfiles (the \"Software\"), to deal in the Software without\n\t\trestriction, including without limitation the rights to use,\n\t\tcopy, modify, merge, publish, distribute, sublicense, and/or\n\t\tsell copies of the Software, and to permit persons to whom the\n\t\tSoftware is furnished to do so, subject to the following\n\t\tconditions:\n\n\t\t The above copyright notice and this permission notice shall be\n\t\tincluded in all copies or substantial portions of the Software.\n\n\t\t THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t\tOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\tNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t\tHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t\tWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t\tFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t\tOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RIPEMD160 = function () {\n\tfunction RIPEMD160() {\n\t\t// https://webcache.googleusercontent.com/search?q=cache:CnLOgolTHYEJ:https://www.cosic.esat.kuleuven.be/publications/article-317.pdf\n\t\t// http://shodhganga.inflibnet.ac.in/bitstream/10603/22978/13/13_appendix.pdf\n\n\t\t_classCallCheck(this, RIPEMD160);\n\t}\n\n\t_createClass(RIPEMD160, null, [{\n\t\tkey: \"get_n_pad_bytes\",\n\t\tvalue: function get_n_pad_bytes(message_size /* in bytes, 1 byte is 8 bits. */) {\n\t\t\t//  Obtain the number of bytes needed to pad the message.\n\t\t\t// It does not contain the size of the message size information.\n\t\t\t/*\n   \thttps://webcache.googleusercontent.com/search?q=cache:CnLOgolTHYEJ:https://www.cosic.esat.kuleuven.be/publications/article-317.pdf\n   \t\tThe Cryptographic Hash Function RIPEMD-160\n   \t\twritten by\n   \t\tBart Preneel,\n   \t\tHans Dobbertin,\n   \t\tAntoon Bosselaers\n   \tin\n   \t\t1997.\n   \t\t--------------------------------------------------\n   \t\t§5     Description of RIPEMD-160\n   \t\t......\n   \t\t In order to guarantee that the total input size is a\n   \tmultiple of 512 bits, the input is padded in the same\n   \tway as for all the members of the MD4-family: one\n   \tappends a single 1 followed by a string of 0s (the\n   \tnumber of 0s lies between 0 and 511); the last 64 bits\n   \tof the extended input contain the binary representation\n   \tof the input size in bits, least significant byte first.\n   */\n\t\t\t/*\n   \thttps://tools.ietf.org/rfc/rfc1186.txt\n   \t\tRFC 1186: MD4 Message Digest Algorithm.\n   \t\twritten by\n   \t\tRonald Linn Rivest\n   \tin\n   \t\tOctober 1990.\n   \t\t--------------------------------------------------\n   \t\t§3     MD4 Algorithm Description\n   \t\t......\n   \t\tStep 1. Append padding bits\n   \t\t The message is \"padded\" (extended) so that its length\n   \t(in bits) is congruent to 448, modulo 512. That is, the\n   \tmessage is extended so that it is just 64 bits shy of\n   \tbeing a multiple of 512 bits long. Padding is always\n   \tperformed, even if the length of the message is already\n   \tcongruent to 448, modulo 512 (in which case 512 bits of\n   \tpadding are added).\n   \t\t Padding is performed as follows: a single \"1\" bit is\n   \tappended to the message, and then enough zero bits are\n   \tappended so that the length in bits of the padded\n   \tmessage becomes congruent to 448, modulo 512.\n   \t\tStep 2. Append length\n   \t\t A 64-bit representation of b (the length of the message\n   \tbefore the padding bits were added) is appended to the\n   \tresult of the previous step. In the unlikely event that\n   \tb is greater than 2^64, then only the low-order 64 bits\n   \tof b are used. (These bits are appended as two 32-bit\n   \twords and appended low-order word first in accordance\n   \twith the previous conventions.)\n   \t\t At this point the resulting message (after padding with\n   \tbits and with b) has a length that is an exact multiple\n   \tof 512 bits. Equivalently, this message has a length\n   \tthat is an exact multiple of 16 (32-bit) words. Let\n   \tM[0 ... N-1] denote the words of the resulting message,\n   \twhere N is a multiple of 16.\n   */\n\t\t\t// https://crypto.stackexchange.com/a/32407/54568\n\t\t\t/*\n   \tExample case  # 1\n   \t\t[0 bit: message.]\n   \t\t[1 bit: 1.]\n   \t\t[447 bits: 0.]\n   \t\t[64 bits: message size information.]\n   \t\tExample case  # 2\n   \t\t[512-bits: message]\n   \t\t[1 bit: 1.]\n   \t\t[447 bits: 0.]\n   \t\t[64 bits: message size information.]\n   \t\tExample case  # 3\n   \t\t[(512 - 64 = 448) bits: message.]\n   \t\t[1 bit: 1.]\n   \t\t[511 bits: 0.]\n   \t\t[64 bits: message size information.]\n   \t\tExample case  # 4\n   \t\t[(512 - 65 = 447) bits: message.]\n   \t\t[1 bit: 1.]\n   \t\t[0 bit: 0.]\n   \t\t[64 bits: message size information.]\n   */\n\t\t\t// The number of padding zero bits:\n\t\t\t//      511 - [{(message size in bits) + 64} (mod 512)]\n\t\t\treturn 64 - (message_size + 8 & 63 /* 63 */);\n\t\t}\n\t}, {\n\t\tkey: \"pad\",\n\t\tvalue: function pad(message /* An ArrayBuffer. */) {\n\t\t\tvar message_size = message.byteLength;\n\t\t\tvar n_pad = RIPEMD160.get_n_pad_bytes(message_size);\n\n\t\t\t//  `Number.MAX_SAFE_INTEGER` is ((2 ** 53) - 1) and\n\t\t\t// bitwise operation in Javascript is done on 32-bits operands.\n\t\t\tvar divmod = function divmod(dividend, divisor) {\n\t\t\t\treturn [Math.floor(dividend / divisor), dividend % divisor];\n\t\t\t};\n\t\t\t/*\n   To shift\n     00000000 000????? ???????? ???????? ???????? ???????? ???????? ????????\n                                      t o\n    00000000 ???????? ???????? ???????? ???????? ???????? ???????? ?????000\n   --------------------------------------------------------------------------------\n   Method #1\n      00000000 000????? ???????? ????????  ???????? ???????? ???????? ????????\n    [00000000 000AAAAA AAAAAAAA AAAAAAAA] (<A> captured)\n    [00000000 AAAAAAAA AAAAAAAA AAAAA000] (<A> shifted)\n                          (<B> captured) [BBBBBBBB BBBBBBBB BBBBBBBB BBBBBBBB]\n                      (<B> shifted) [BBB][BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]\n    [00000000 AAAAAAAA AAAAAAAA AAAAABBB] (<A> & <B_2> merged)\n    [00000000 AAAAAAAA AAAAAAAA AAAAABBB][BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]\n     00000000 ???????? ???????? ????????  ???????? ???????? ???????? ?????000\n   \tconst uint32_max_plus_1 = 0x100000000; // (2 ** 32)\n   const [\n   \tmsg_byte_size_most, // Value range [0, (2 ** 21) - 1].\n   \tmsg_byte_size_least // Value range [0, (2 ** 32) - 1].\n   ] = divmod(message_size, uint32_max_plus_1);\n   const [\n   \tcarry, // Value range [0, 7].\n   \tmsg_bit_size_least // Value range [0, (2 ** 32) - 8].\n   ] = divmod(message_byte_size_least * 8, uint32_max_plus_1);\n   const message_bit_size_most = message_byte_size_most * 8\n   \t+ carry; // Value range [0, (2 ** 24) - 1].\n   --------------------------------------------------------------------------------\n   Method #2\n     00000000 000????? ???????? ????????  ???????? ???????? ???????? ????????\n       [00000 000AAAAA AAAAAAAA AAAAAAAA  AAA] (<A> captured)\n                          (<B> captured) [000BBBBB BBBBBBBB BBBBBBBB BBBBBBBB]\n                           (<B> shifted) [BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]\n    [00000000 AAAAAAAA AAAAAAAA AAAAAAAA][BBBBBBBB BBBBBBBB BBBBBBBB BBBBB000]\n     00000000 ???????? ???????? ????????  ???????? ???????? ???????? ?????000\n   \t*/\n\n\t\t\tvar _divmod$map = divmod(message_size, 536870912 /* (2 ** 29) */).map(function (x, index) {\n\t\t\t\treturn index ? x * 8 : x;\n\t\t\t}),\n\t\t\t    _divmod$map2 = _slicedToArray(_divmod$map, 2),\n\t\t\t    msg_bit_size_most = _divmod$map2[0],\n\t\t\t    msg_bit_size_least = _divmod$map2[1];\n\n\t\t\t// `ArrayBuffer.transfer()` is not supported.\n\n\n\t\t\tvar padded = new Uint8Array(message_size + n_pad + 8);\n\t\t\tpadded.set(new Uint8Array(message), 0);\n\t\t\tvar data_view = new DataView(padded.buffer);\n\t\t\tdata_view.setUint8(message_size, 128);\n\t\t\tdata_view.setUint32(message_size + n_pad, msg_bit_size_least, true // Little-endian\n\t\t\t);\n\t\t\tdata_view.setUint32(message_size + n_pad + 4, msg_bit_size_most, true // Little-endian\n\t\t\t);\n\n\t\t\treturn padded.buffer;\n\t\t}\n\t}, {\n\t\tkey: \"f\",\n\t\tvalue: function f(j, x, y, z) {\n\t\t\tif (0 <= j && j <= 15) {\n\t\t\t\t// Exclusive-OR\n\t\t\t\treturn x ^ y ^ z;\n\t\t\t}\n\t\t\tif (16 <= j && j <= 31) {\n\t\t\t\t// Multiplexing (muxing)\n\t\t\t\treturn x & y | ~x & z;\n\t\t\t}\n\t\t\tif (32 <= j && j <= 47) {\n\t\t\t\treturn (x | ~y) ^ z;\n\t\t\t}\n\t\t\tif (48 <= j && j <= 63) {\n\t\t\t\t// Multiplexing (muxing)\n\t\t\t\treturn x & z | y & ~z;\n\t\t\t}\n\t\t\tif (64 <= j && j <= 79) {\n\t\t\t\treturn x ^ (y | ~z);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"K\",\n\t\tvalue: function K(j) {\n\t\t\tif (0 <= j && j <= 15) {\n\t\t\t\treturn 0x00000000;\n\t\t\t}\n\t\t\tif (16 <= j && j <= 31) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.SQRT2)\n\t\t\t\treturn 0x5A827999;\n\t\t\t}\n\t\t\tif (32 <= j && j <= 47) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.sqrt(3))\n\t\t\t\treturn 0x6ED9EBA1;\n\t\t\t}\n\t\t\tif (48 <= j && j <= 63) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.sqrt(5))\n\t\t\t\treturn 0x8F1BBCDC;\n\t\t\t}\n\t\t\tif (64 <= j && j <= 79) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.sqrt(7))\n\t\t\t\treturn 0xA953FD4E;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"KP\",\n\t\tvalue: function KP(j) // K'\n\t\t{\n\t\t\tif (0 <= j && j <= 15) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.cbrt(2))\n\t\t\t\treturn 0x50A28BE6;\n\t\t\t}\n\t\t\tif (16 <= j && j <= 31) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.cbrt(3))\n\t\t\t\treturn 0x5C4DD124;\n\t\t\t}\n\t\t\tif (32 <= j && j <= 47) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.cbrt(5))\n\t\t\t\treturn 0x6D703EF3;\n\t\t\t}\n\t\t\tif (48 <= j && j <= 63) {\n\t\t\t\t// Math.floor((2 ** 30) * Math.cbrt(7))\n\t\t\t\treturn 0x7A6D76E9;\n\t\t\t}\n\t\t\tif (64 <= j && j <= 79) {\n\t\t\t\treturn 0x00000000;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"add_modulo32\",\n\t\tvalue: function add_modulo32() /* ...... */{\n\t\t\t// 1.  Modulo addition (addition modulo) is associative.\n\t\t\t//    https://proofwiki.org/wiki/Modulo_Addition_is_Associative\n\t\t\t// 2.  Bitwise operation in Javascript\n\t\t\t//    is done on 32-bits operands\n\t\t\t//    and results in a 32-bits value.\n\t\t\treturn Array.from(arguments).reduce(function (a, b) {\n\t\t\t\treturn a + b;\n\t\t\t}, 0) | 0;\n\t\t}\n\t}, {\n\t\tkey: \"rol32\",\n\t\tvalue: function rol32(value, count) {\n\t\t\t// Cyclic left shift (rotate) on 32-bits value.\n\t\t\treturn value << count | value >>> 32 - count;\n\t\t}\n\t}, {\n\t\tkey: \"hash\",\n\t\tvalue: function hash(message /* An ArrayBuffer. */) {\n\t\t\t//////////       Padding       //////////\n\n\t\t\t// The padded message.\n\t\t\tvar padded = RIPEMD160.pad(message);\n\n\t\t\t//////////     Compression     //////////\n\n\t\t\t// Message word selectors.\n\t\t\tvar r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\n\t\t\tvar rP = [// r'\n\t\t\t5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\n\n\t\t\t// Amounts for 'rotate left' operation.\n\t\t\tvar s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\n\t\t\tvar sP = [// s'\n\t\t\t8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\n\n\t\t\t// The size, in bytes, of a word.\n\t\t\tvar word_size = 4;\n\n\t\t\t// The size, in bytes, of a 16-words block.\n\t\t\tvar block_size = 64;\n\n\t\t\t// The number of the 16-words blocks.\n\t\t\tvar t = padded.byteLength / block_size;\n\n\t\t\t//  The message after padding consists of t 16-word blocks that\n\t\t\t// are denoted with X_i[j], with 0≤i≤(t − 1) and 0≤j≤15.\n\t\t\tvar X = new Array(t).fill(undefined).map(function (_, i) {\n\t\t\t\treturn function (j) {\n\t\t\t\t\treturn new DataView(padded, i * block_size, block_size).getUint32(j * word_size, true // Little-endian\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t//  The result of RIPEMD-160 is contained in five 32-bit words,\n\t\t\t// which form the internal state of the algorithm. The final\n\t\t\t// content of these five 32-bit words is converted to a 160-bit\n\t\t\t// string, again using the little-endian convention.\n\t\t\tvar h = [0x67452301, // h_0\n\t\t\t0xEFCDAB89, // h_1\n\t\t\t0x98BADCFE, // h_2\n\t\t\t0x10325476, // h_3\n\t\t\t0xC3D2E1F0 // h_4\n\t\t\t];\n\n\t\t\tfor (var i = 0; i < t; ++i) {\n\t\t\t\tvar A = h[0],\n\t\t\t\t    B = h[1],\n\t\t\t\t    C = h[2],\n\t\t\t\t    D = h[3],\n\t\t\t\t    E = h[4];\n\t\t\t\tvar AP = A,\n\t\t\t\t    BP = B,\n\t\t\t\t    CP = C,\n\t\t\t\t    DP = D,\n\t\t\t\t    EP = E;\n\t\t\t\tfor (var j = 0; j < 80; ++j) {\n\t\t\t\t\t// Left rounds\n\t\t\t\t\tvar _T = RIPEMD160.add_modulo32(RIPEMD160.rol32(RIPEMD160.add_modulo32(A, RIPEMD160.f(j, B, C, D), X[i](r[j]), RIPEMD160.K(j)), s[j]), E);\n\t\t\t\t\tA = E;\n\t\t\t\t\tE = D;\n\t\t\t\t\tD = RIPEMD160.rol32(C, 10);\n\t\t\t\t\tC = B;\n\t\t\t\t\tB = _T;\n\n\t\t\t\t\t// Right rounds\n\t\t\t\t\t_T = RIPEMD160.add_modulo32(RIPEMD160.rol32(RIPEMD160.add_modulo32(AP, RIPEMD160.f(79 - j, BP, CP, DP), X[i](rP[j]), RIPEMD160.KP(j)), sP[j]), EP);\n\t\t\t\t\tAP = EP;\n\t\t\t\t\tEP = DP;\n\t\t\t\t\tDP = RIPEMD160.rol32(CP, 10);\n\t\t\t\t\tCP = BP;\n\t\t\t\t\tBP = _T;\n\t\t\t\t}\n\t\t\t\tvar T = RIPEMD160.add_modulo32(h[1], C, DP);\n\t\t\t\th[1] = RIPEMD160.add_modulo32(h[2], D, EP);\n\t\t\t\th[2] = RIPEMD160.add_modulo32(h[3], E, AP);\n\t\t\t\th[3] = RIPEMD160.add_modulo32(h[4], A, BP);\n\t\t\t\th[4] = RIPEMD160.add_modulo32(h[0], B, CP);\n\t\t\t\th[0] = T;\n\t\t\t}\n\n\t\t\t//  The final output string then consists of the concatenatation\n\t\t\t// of h_0, h_1, h_2, h_3, and h_4 after converting each h_i to a\n\t\t\t// 4-byte string using the little-endian convention.\n\t\t\tvar result = new ArrayBuffer(20);\n\t\t\tvar data_view = new DataView(result);\n\t\t\th.forEach(function (h_i, i) {\n\t\t\t\treturn data_view.setUint32(i * 4, h_i, true);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t}]);\n\n\treturn RIPEMD160;\n}();\n\nmodule.exports = {\n\tRIPEMD160: RIPEMD160\n};\n", null, null, "{\n    \"version\": \"eosio::abi/1.1\",\n    \"structs\": [\n        {\n            \"name\": \"extensions_entry\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"tag\",\n                    \"type\": \"uint16\"\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"bytes\"\n                }\n            ]\n        },\n        {\n            \"name\": \"type_def\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"new_type_name\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        {\n            \"name\": \"field_def\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"name\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        {\n            \"name\": \"struct_def\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"name\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"base\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"fields\",\n                    \"type\": \"field_def[]\"\n                }\n            ]\n        },\n        {\n            \"name\": \"action_def\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"name\",\n                    \"type\": \"name\"\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"ricardian_contract\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        {\n            \"name\": \"table_def\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"name\",\n                    \"type\": \"name\"\n                },\n                {\n                    \"name\": \"index_type\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"key_names\",\n                    \"type\": \"string[]\"\n                },\n                {\n                    \"name\": \"key_types\",\n                    \"type\": \"string[]\"\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        {\n            \"name\": \"clause_pair\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"id\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"body\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        {\n            \"name\": \"error_message\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"error_code\",\n                    \"type\": \"uint64\"\n                },\n                {\n                    \"name\": \"error_msg\",\n                    \"type\": \"string\"\n                }\n            ]\n        },\n        {\n            \"name\": \"variant_def\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"name\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"types\",\n                    \"type\": \"string[]\"\n                }\n            ]\n        },\n        {\n            \"name\": \"abi_def\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"version\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"name\": \"types\",\n                    \"type\": \"type_def[]\"\n                },\n                {\n                    \"name\": \"structs\",\n                    \"type\": \"struct_def[]\"\n                },\n                {\n                    \"name\": \"actions\",\n                    \"type\": \"action_def[]\"\n                },\n                {\n                    \"name\": \"tables\",\n                    \"type\": \"table_def[]\"\n                },\n                {\n                    \"name\": \"ricardian_clauses\",\n                    \"type\": \"clause_pair[]\"\n                },\n                {\n                    \"name\": \"error_messages\",\n                    \"type\": \"error_message[]\"\n                },\n                {\n                    \"name\": \"abi_extensions\",\n                    \"type\": \"extensions_entry[]\"\n                },\n                {\n                    \"name\": \"variants\",\n                    \"type\": \"variant_def[]$\"\n                }\n            ]\n        }\n    ]\n}\n", "{\n    \"version\": \"eosio::abi/1.0\",\n    \"types\": [\n        {\n            \"new_type_name\": \"account_name\",\n            \"type\": \"name\"\n        },\n        {\n            \"new_type_name\": \"action_name\",\n            \"type\": \"name\"\n        },\n        {\n            \"new_type_name\": \"permission_name\",\n            \"type\": \"name\"\n        }\n    ],\n    \"structs\": [\n        {\n            \"name\": \"permission_level\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"actor\",\n                    \"type\": \"account_name\"\n                },\n                {\n                    \"name\": \"permission\",\n                    \"type\": \"permission_name\"\n                }\n            ]\n        },\n        {\n            \"name\": \"action\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"account\",\n                    \"type\": \"account_name\"\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"action_name\"\n                },\n                {\n                    \"name\": \"authorization\",\n                    \"type\": \"permission_level[]\"\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                }\n            ]\n        },\n        {\n            \"name\": \"extension\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"type\",\n                    \"type\": \"uint16\"\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                }\n            ]\n        },\n        {\n            \"name\": \"transaction_header\",\n            \"base\": \"\",\n            \"fields\": [\n                {\n                    \"name\": \"expiration\",\n                    \"type\": \"time_point_sec\"\n                },\n                {\n                    \"name\": \"ref_block_num\",\n                    \"type\": \"uint16\"\n                },\n                {\n                    \"name\": \"ref_block_prefix\",\n                    \"type\": \"uint32\"\n                },\n                {\n                    \"name\": \"max_net_usage_words\",\n                    \"type\": \"varuint32\"\n                },\n                {\n                    \"name\": \"max_cpu_usage_ms\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"name\": \"delay_sec\",\n                    \"type\": \"varuint32\"\n                }\n            ]\n        },\n        {\n            \"name\": \"transaction\",\n            \"base\": \"transaction_header\",\n            \"fields\": [\n                {\n                    \"name\": \"context_free_actions\",\n                    \"type\": \"action[]\"\n                },\n                {\n                    \"name\": \"actions\",\n                    \"type\": \"action[]\"\n                },\n                {\n                    \"name\": \"transaction_extensions\",\n                    \"type\": \"extension[]\"\n                }\n            ]\n        }\n    ]\n}\n", null, null, null, null, null, "// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n", "/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n", "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n", null, null, null, null, "// Integer Utility\n\nexport const UINT32_MAX = 0xffff_ffff;\n\n// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number): number {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number): number {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n", "/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { UINT32_MAX } from \"./int\";\n\nconst TEXT_ENCODING_AVAILABLE =\n  (typeof process === \"undefined\" || process?.env?.[\"TEXT_ENCODING\"] !== \"never\") &&\n  typeof TextEncoder !== \"undefined\" &&\n  typeof TextDecoder !== \"undefined\";\n\nexport function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\nconst sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport const TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_ENCODING\"] !== \"force\"\n  ? 200\n  : 0;\n\nfunction utf8EncodeTEencode(str: string, output: Uint8Array, outputOffset: number): void {\n  output.set(sharedTextEncoder!.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str: string, output: Uint8Array, outputOffset: number): void {\n  sharedTextEncoder!.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport const utf8EncodeTE = sharedTextEncoder?.encodeInto ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++]!;\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      const byte4 = bytes[offset++]! & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport const TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_DECODER\"] !== \"force\"\n  ? 200\n  : 0;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder!.decode(stringBytes);\n}\n", "/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  constructor(readonly type: number, readonly data: Uint8Array) {}\n}\n", "export class DecodeError extends Error {\n  constructor(message: string) {\n    super(message);\n\n    // fix the prototype chain in a cross-platform way\n    const proto: typeof DecodeError.prototype = Object.create(DecodeError.prototype);\n    Object.setPrototypeOf(this, proto);\n\n    Object.defineProperty(this, \"name\", {\n      configurable: true,\n      enumerable: false,\n      value: DecodeError.name,\n    });\n  }\n}\n", "// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError\";\nimport { getInt64, setInt64 } from \"./utils/int\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4);\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n", "// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData\";\nimport { timestampExtension } from \"./timestamp\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (input: unknown, context: ContextType) => Uint8Array | null;\n\n// immutable interface to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = 1 + type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encodeExt = this.builtInEncoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encodeExt = this.encoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decodeExt) {\n      return decodeExt(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n", "export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer): Uint8Array {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n", "import { utf8EncodeJs, utf8Count, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { setInt64, setUint64 } from \"./utils/int\";\nimport { ensureUint8Array } from \"./utils/typedArrays\";\nimport type { ExtData } from \"./ExtData\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport class Encoder<ContextType = undefined> {\n  private pos = 0;\n  private view = new DataView(new ArrayBuffer(this.initialBufferSize));\n  private bytes = new Uint8Array(this.view.buffer);\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxDepth = DEFAULT_MAX_DEPTH,\n    private readonly initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE,\n    private readonly sortKeys = false,\n    private readonly forceFloat32 = false,\n    private readonly ignoreUndefined = false,\n    private readonly forceIntegerToFloat = false,\n  ) {}\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  /**\n   * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n   *\n   * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n   */\n  public encodeSharedRef(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.bytes.subarray(0, this.pos);\n  }\n\n  /**\n   * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n   */\n  public encode(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.bytes.slice(0, this.pos);\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      this.encodeNumber(object);\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n  private encodeNumber(object: number) {\n    if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // negative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        }\n      }\n    } else {\n      // non-integer numbers\n      if (this.forceFloat32) {\n        // float 32\n        this.writeU8(0xca);\n        this.writeF32(object);\n      } else {\n        // float 64\n        this.writeU8(0xcb);\n        this.writeF64(object);\n      }\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n    const strLength = object.length;\n\n    if (strLength > TEXT_ENCODER_THRESHOLD) {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeTE(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    } else {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeJs(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    }\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n}\n", "import { Encoder } from \"./Encoder\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec\";\nimport type { ContextOf, SplitUndefined } from \"./context\";\n\nexport type EncodeOptions<ContextType = undefined> = Partial<\n  Readonly<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * The maximum depth in nested objects and arrays.\n     *\n     * Defaults to 100.\n     */\n    maxDepth: number;\n\n    /**\n     * The initial size of the internal buffer.\n     *\n     * Defaults to 2048.\n     */\n    initialBufferSize: number;\n\n    /**\n     * If `true`, the keys of an object is sorted. In other words, the encoded\n     * binary is canonical and thus comparable to another encoded binary.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    sortKeys: boolean;\n    /**\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\n     *\n     * Only use it if precisions don't matter.\n     *\n     * Defaults to `false`.\n     */\n    forceFloat32: boolean;\n\n    /**\n     * If `true`, an object property with `undefined` value are ignored.\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    ignoreUndefined: boolean;\n\n    /**\n     * If `true`, integer numbers are encoded as floating point numbers,\n     * with the `forceFloat32` option taken into account.\n     *\n     * Defaults to `false`.\n     */\n    forceIntegerToFloat: boolean;\n  }>\n> &\n  ContextOf<ContextType>;\n\nconst defaultEncodeOptions: EncodeOptions = {};\n\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode<ContextType = undefined>(\n  value: unknown,\n  options: EncodeOptions<SplitUndefined<ContextType>> = defaultEncodeOptions as any,\n): Uint8Array {\n  const encoder = new Encoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxDepth,\n    options.initialBufferSize,\n    options.sortKeys,\n    options.forceFloat32,\n    options.ignoreUndefined,\n    options.forceIntegerToFloat,\n  );\n  return encoder.encodeSharedRef(value);\n}\n", "export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n", "import { utf8DecodeJs } from \"./utils/utf8\";\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly str: string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n\n  constructor(readonly maxKeyLength = DEFAULT_MAX_KEY_LENGTH, readonly maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    // avoid `new Array(N)`, which makes a sparse array,\n    // because a sparse array is typically slower than a non-sparse array.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number): boolean {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private find(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1]!;\n\n    FIND_CHUNK: for (const record of records) {\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.str;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1]!;\n    const record: KeyCacheRecord = { bytes, str: value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to an arbitrary position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.find(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const str = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, str);\n    return str;\n  }\n}\n", "import { prettyByte } from \"./utils/prettyByte\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int\";\nimport { utf8DecodeJs, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\nimport { DecodeError } from \"./DecodeError\";\n\nconst enum State {\n  ARRAY,\n  MAP_KEY,\n  MAP_VALUE,\n}\n\ntype MapKeyType = string | number;\n\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\n  const keyType = typeof key;\n\n  return keyType === \"string\" || keyType === \"number\";\n};\n\ntype StackMapState = {\n  type: State.MAP_KEY | State.MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: State.ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport const DataViewIndexOutOfBoundsError: typeof Error = (() => {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e: any) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n})();\n\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType = undefined> {\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack: Array<StackState> = [];\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxStrLength = UINT32_MAX,\n    private readonly maxBinLength = UINT32_MAX,\n    private readonly maxArrayLength = UINT32_MAX,\n    private readonly maxMapLength = UINT32_MAX,\n    private readonly maxExtLength = UINT32_MAX,\n    private readonly keyDecoder: KeyDecoder | null = sharedCachedKeyDecoder,\n  ) {}\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n    this.stack.length = 0;\n\n    // view, bytes, and pos will be re-initialized in setBuffer()\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | BufferSource): void {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number> | BufferSource) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n      this.setBuffer(buffer);\n    } else {\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n\n      // concat remainingData + newData\n      const newBuffer = new Uint8Array(remainingData.length + newData.length);\n      newBuffer.set(remainingData);\n      newBuffer.set(newData, remainingData.length);\n      this.setBuffer(newBuffer);\n    }\n  }\n\n  private hasRemaining(size: number) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createExtraByteError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  /**\n   * @throws {@link DecodeError}\n   * @throws {@link RangeError}\n   */\n  public decode(buffer: ArrayLike<number> | BufferSource): unknown {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    const object = this.doDecodeSync();\n    if (this.hasRemaining(1)) {\n      throw this.createExtraByteError(this.pos);\n    }\n    return object;\n  }\n\n  public *decodeMulti(buffer: ArrayLike<number> | BufferSource): Generator<unknown, void, unknown> {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    while (this.hasRemaining(1)) {\n      yield this.doDecodeSync();\n    }\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>): Promise<unknown> {\n    let decoded = false;\n    let object: unknown;\n    for await (const buffer of stream) {\n      if (decoded) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      try {\n        object = this.doDecodeSync();\n        decoded = true;\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n\n    if (decoded) {\n      if (this.hasRemaining(1)) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n      return object;\n    }\n\n    const { headByte, pos, totalPos } = this;\n    throw new RangeError(\n      `Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n    );\n  }\n\n  public decodeArrayStream(\n    stream: AsyncIterable<ArrayLike<number> | BufferSource>,\n  ): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number> | BufferSource>): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>, isArray: boolean) {\n    let isArrayHeaderRequired = isArray;\n    let arrayItemsLeft = -1;\n\n    for await (const buffer of stream) {\n      if (isArray && arrayItemsLeft === 0) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      if (isArrayHeaderRequired) {\n        arrayItemsLeft = this.readArraySize();\n        isArrayHeaderRequired = false;\n        this.complete();\n      }\n\n      try {\n        while (true) {\n          yield this.doDecodeSync();\n          if (--arrayItemsLeft === 0) {\n            break;\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack[stack.length - 1]!;\n        if (state.type === State.ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === State.MAP_KEY) {\n          if (!isValidMapKeyType(object)) {\n            throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\n          }\n          if (object === \"__proto__\") {\n            throw new DecodeError(\"The key __proto__ is not allowed\");\n          }\n\n          state.key = object;\n          state.type = State.MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = State.MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.push({\n      type: State.MAP_KEY,\n      size,\n      key: null,\n      readCount: 0,\n      map: {},\n    });\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.push({\n      type: State.ARRAY,\n      size,\n      array: new Array<unknown>(size),\n      position: 0,\n    });\n  }\n\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new DecodeError(\n        `Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`,\n      );\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack[this.stack.length - 1]!;\n      return state.type === State.MAP_KEY;\n    }\n    return false;\n  }\n\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n", "import { Decoder } from \"./Decoder\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec\";\nimport type { ContextOf, SplitUndefined } from \"./context\";\n\nexport type DecodeOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Maximum string length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport const defaultDecodeOptions: DecodeOptions = {};\n\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): unknown {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decode(buffer);\n}\n\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Generator<unknown, void, unknown> {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeMulti(buffer);\n}\n", "// utility for whatwg streams\n\n// The living standard of whatwg streams says\n// ReadableStream is also AsyncIterable, but\n// as of June 2019, no browser implements it.\n// See https://streams.spec.whatwg.org/ for details\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\n\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\n  return (object as any)[Symbol.asyncIterator] != null;\n}\n\nfunction assertNonNull<T>(value: T | null | undefined): asserts value is T {\n  if (value == null) {\n    throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n  }\n}\n\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n      assertNonNull(value);\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function ensureAsyncIterable<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\n  if (isAsyncIterable(streamLike)) {\n    return streamLike;\n  } else {\n    return asyncIterableFromStream(streamLike);\n  }\n}\n", "import { Decoder } from \"./Decoder\";\nimport { ensureAsyncIterable } from \"./utils/stream\";\nimport { defaultDecodeOptions } from \"./decode\";\nimport type { ReadableStreamLike } from \"./utils/stream\";\nimport type { DecodeOptions } from \"./decode\";\nimport type { SplitUndefined } from \"./context\";\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\n export async function decodeAsync<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Promise<unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeAsync(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\n export function decodeArrayStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeArrayStream(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMultiStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeStream(stream);\n}\n\n/**\n * @deprecated Use {@link decodeMultiStream()} instead.\n */\nexport function decodeStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  return decodeMultiStream(streamLike, options);\n}\n", "// Main Functions:\n\nimport { encode } from \"./encode\";\nexport { encode };\nimport type { EncodeOptions } from \"./encode\";\nexport type { EncodeOptions };\n\nimport { decode, decodeMulti } from \"./decode\";\nexport { decode, decodeMulti };\nimport type { DecodeOptions } from \"./decode\";\nexport { DecodeOptions };\n\nimport { decodeAsync, decodeArrayStream, decodeMultiStream, decodeStream } from \"./decodeAsync\";\nexport { decodeAsync, decodeArrayStream, decodeMultiStream, decodeStream };\n\nimport { Decoder, DataViewIndexOutOfBoundsError } from \"./Decoder\";\nimport { DecodeError } from \"./DecodeError\";\nexport { Decoder, DecodeError, DataViewIndexOutOfBoundsError };\n\nimport { Encoder } from \"./Encoder\";\nexport { Encoder };\n\n// Utilitiies for Extension Types:\n\nimport { ExtensionCodec } from \"./ExtensionCodec\";\nexport { ExtensionCodec };\nimport type { ExtensionCodecType, ExtensionDecoderType, ExtensionEncoderType } from \"./ExtensionCodec\";\nexport type { ExtensionCodecType, ExtensionDecoderType, ExtensionEncoderType };\nimport { ExtData } from \"./ExtData\";\nexport { ExtData };\n\nimport {\n  EXT_TIMESTAMP,\n  encodeDateToTimeSpec,\n  encodeTimeSpecToTimestamp,\n  decodeTimestampToTimeSpec,\n  encodeTimestampExtension,\n  decodeTimestampExtension,\n} from \"./timestamp\";\nexport {\n  EXT_TIMESTAMP,\n  encodeDateToTimeSpec,\n  encodeTimeSpecToTimestamp,\n  decodeTimestampToTimeSpec,\n  encodeTimestampExtension,\n  decodeTimestampExtension,\n};\n", "'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n", "'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n", "'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('./transitional');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.26.1\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.HmacSHA256;\n\n}));", "/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n", "import { AccountName, AccountType, ChainAccount, ChainNetwork } from '../common/models'\n\nexport enum RequestType {\n  Get = 'get',\n  Post = 'put',\n}\n\nexport enum ApiEndpoint {\n  AddPermission = 'account/add-permission',\n  AppToken = 'app-token',\n  CanAutoSign = 'transaction/can-auto-sign',\n  ConvertOauthTokens = 'account/convert-oauth',\n  CustodialMigrateAccount = 'custodial/migrate-account',\n  CustodialNewAccount = 'custodial/new-user',\n  CustodialSignString = 'custodial/sign-string',\n  DeleteTestUser = 'account/delete-test-user',\n  CustodialSign = 'custodial/sign',\n  GetUser = 'account/user',\n  GetConfig = 'services/config',\n  LoginUserWithToken = 'account/login-user-with-token',\n  NewUserWithToken = 'account/new-user-with-token',\n  PasswordLessSendCode = 'account/login-passwordless-send-code',\n  PasswordLessVerifyCode = 'account/login-passwordless-verify-code',\n  TransactionSign = 'transaction/sign',\n  UpdateDelayWalletSetup = 'account/update-delay-wallet-setup',\n}\n\n/** Typical API Response (when no data returned) */\nexport type ApiMessageResult = {\n  message?: string\n  error?: string\n  processId?: string\n  success?: string\n}\n\nexport type ApiResultWithErrorCode = {\n  message?: string\n  processId?: string\n  errorCode?: string\n  errorMessage?: string\n}\n\n// API params\n\nexport type CustodialMigrateAccountParams = {\n  account: AccountName\n  chainAccount: ChainAccount\n  chainNetwork: ChainNetwork\n  toType: AccountType\n  userPassword: string\n}\n\nexport type CustodialMigrateAccountApiBodyParams = {\n  account: AccountName\n  chain_account: ChainAccount\n  chain_network: ChainNetwork\n  to_type: AccountType\n  user_password: string\n}\n", "export type ProcessId = string\nexport type AppAccessToken = string\nexport type AccountName = string\nexport type ChainAccount = string\nexport type PublicKey = string\nexport type PermissionName = string\nexport type Color = string\n\nexport enum ConfigType {\n  Chains = 'chains',\n}\n\n/** Flavor of chain network */\nexport enum ChainPlatformType {\n  algorand = 'algorand',\n  eos = 'eos',\n  ethereum = 'ethereum',\n  ore = 'ore',\n}\n\n/** Named chain network */\nexport enum ChainNetwork {\n  // Algo\n  AlgoMain = 'algo_main',\n  AlgoBeta = 'algo_beta',\n  AlgoTest = 'algo_test',\n  // AVALANCHE\n  AvalancheC_Main = 'avalanchec_main',\n  AvalancheC_Fuji = 'avalanchec_fuji',\n  // Dsp/EOS\n  DspEosKylin1 = 'kylin-dsp-1.liquidapps.io',\n  DspEosKylin2 = 'kylin-dsp-2.liquidapps.io',\n  DspMoonlighting = 'eos_moon_blockstartdsp_com',\n  DspMoonlightingTest = 'eos_moontest_blockstartdsp_com',\n  // DOS\n  DosMain = 'dos_main',\n  DosTest = 'dos_test',\n  // ETH\n  EthMain = 'eth_main',\n  EthRopsten = 'eth_ropsten',\n  EthRinkeby = 'eth_rinkeby',\n  EthGoerli = 'eth_goerli',\n  // EOS\n  EosMain = 'eos_main',\n  EosKylin = 'eos_kylin',\n  EosJungle = 'eos_jungle',\n  MigrateEosMain = 'migrate_eos_main',\n  // ORE\n  OreMain = 'ore_main',\n  OreTest = 'ore_test',\n  // Polygon\n  PolygonMain = 'polygon_main',\n  PolygonMumbai = 'polygon_mumbai',\n  // TELOS\n  TelosMain = 'telos_main',\n  TelosTest = 'telos_test',\n  // TELOS EVM\n  TelosEvmMain = 'telosevm_main',\n  TelosEvmTest = 'telosevm_test',\n  // UX\n  UxMain = 'ux_main',\n  // UxTest = 'ux_test', (there is no test network) - this is left here as a placeholder\n  // WAX\n  WaxMain = 'wax_main',\n  WaxTest = 'wax_test',\n}\n\n/** Physical structure of account */\nexport enum AccountType {\n  Native = 'native',\n  Pending = 'pending',\n  VirtualLiquid = 'liquid',\n  VirtualNested = 'nested',\n}\n\nexport enum LoginProvider {\n  Custodial = 'custodial',\n  Apple = 'apple',\n  Email = 'email',\n  Facebook = 'facebook',\n  Github = 'github',\n  Google = 'google',\n  Instagram = 'instagram',\n  Kakao = 'kakao',\n  Line = 'line',\n  LinkedIn = 'linkedin',\n  Phone = 'phone',\n  Twitch = 'twitch',\n  Twitter = 'twitter',\n}\n\nexport enum ExternalWalletType {\n  AlgoSigner = 'algosigner',\n  Anchor = 'anchor',\n  Keycat = 'keycat',\n  Ledger = 'ledger',\n  Lynx = 'lynx',\n  Meetone = 'meetone',\n  Metro = 'metro',\n  Portis = 'portis',\n  Scatter = 'scatter',\n  SimpleEos = 'simpleos',\n  TokenPocket = 'tokenpocket',\n  WalletConnect = 'walletconnect',\n  Web3 = 'web3',\n  WhaleVault = 'whalevault',\n  Wombat = 'wombat',\n}\n\n/** All auth providers - including OreId login types (eg 'Facebook') and wallets (eg 'Scatter') */\nexport enum AuthProvider {\n  // ORE ID LoginProvider\n  Custodial = 'custodial',\n  Apple = 'apple',\n  Email = 'email',\n  Facebook = 'facebook',\n  Github = 'github',\n  Google = 'google',\n  Instagram = 'instagram',\n  Kakao = 'kakao',\n  Line = 'line',\n  LinkedIn = 'linkedin',\n  Phone = 'phone',\n  Twitch = 'twitch',\n  Twitter = 'twitter',\n  // ExternalWalletType\n  AlgoSigner = 'algosigner',\n  Anchor = 'anchor',\n  Keycat = 'keycat',\n  Ledger = 'ledger',\n  Lynx = 'lynx',\n  Meetone = 'meetone',\n  Metro = 'metro',\n  Portis = 'portis',\n  Scatter = 'scatter',\n  SimpleEos = 'simpleos',\n  TokenPocket = 'tokenpocket',\n  WalletConnect = 'walletconnect',\n  Web3 = 'web3',\n  WhaleVault = 'whalevault',\n  Wombat = 'wombat',\n  // placeholder for signing - meaning non an external wallet\n  OreId = 'oreid',\n}\n\nexport enum ApiKeyUsedFor {\n  AccountMigration = 'accountMigration',\n  Airdrop = 'airdrop',\n  AdminAccess = 'adminAccess',\n  AutoSigning = 'autoSigning',\n  ChangePassword = 'changePassword',\n  CreateUser = 'createUser',\n  ProxySigning = 'proxySigning',\n  TokenFunding = 'tokenFunding',\n}\n\n/** type returned by oreid sevice config endpoint for chains */\nexport type SettingChainNetwork = {\n  blockExplorerAccountUrl: string\n  blockExplorerTxUrl: string\n  chainCommunicationSettings: any\n  createBridgeContract: string\n  defaultTransactionSettings?: any\n  /** Url of monitor */\n  dfuseNetwork?: string\n  hosts: SettingChainNetworkHost[]\n  isTestNetwork: boolean\n  monitorConfig?: {\n    dfuseSupported: boolean\n    endpoint: string\n  }\n  name: string\n  logoUrl: string\n  network: ChainNetwork\n  type: ChainPlatformType\n}\n\nexport type SettingChainNetworkHost = {\n  chainId: string\n  /** fork name used to designate a major version */\n  forkName?: string\n  host: string\n  port: number\n  protocol: 'https' | 'http'\n}\n\n// Chain specific\n\nexport type AlgorandMultiSigOptions = {\n  version: number\n  threshold: number\n  addrs: string[]\n}\n\n/** helper type to index a JSON object */\nexport interface Lookup {\n  [key: string]: any\n}\n\nexport type JSONArray = Array<JSONValue>\n\nexport type JSONValue = string | number | boolean | Function | JSONObject | JSONArray\n\nexport interface JSONObject {\n  [x: string]: JSONValue\n}\n", "import { ExternalWalletType, ChainPlatformType } from '../common/models'\n\nexport enum ExternalWalletInterface {\n  Transit = 'transit',\n  Ual = 'ual',\n}\n\nexport type WalletProviderAttributes = {\n  providerName: ExternalWalletType\n  chainType: ChainPlatformType\n  providerId: string\n  requiresLogin: boolean\n  supportsDiscovery: boolean\n  supportsSignArbitrary: boolean\n  requiresLogoutLoginToDiscover: boolean\n  requiresDiscoverToLogin: boolean\n  defaultDiscoveryPathIndexList?: number[]\n  helpText: {\n    login: string\n    sign: string\n    discover: string\n    versionsRequired: string\n  }\n  logoUrl: string\n}\n", "import { Request, Response } from 'express' // NOTE: We are only using types here - Express library won't be emitted in the build here\nimport { LoginOptions } from '../auth/models'\nimport {\n  AccountName,\n  AccountType,\n  AlgorandMultiSigOptions,\n  AppAccessToken,\n  AuthProvider,\n  ChainAccount,\n  ChainNetwork,\n  ExternalWalletType,\n  ProcessId,\n  PublicKey,\n} from '../common/models'\nimport { UserData } from '../user/models'\n\nexport enum RecoverAccountAction {\n  Republic = 'republic',\n}\n\n/** For creating a new chainAccount in an existing wallet */\nexport type NewAccountOptions = {\n  account: AccountName // existing wallet account name (ore account)\n  accountOptions?: CreateOnChainAccountsOptions\n  accountType: AccountType\n  chainNetwork?: ChainNetwork\n  provider?: AuthProvider // TODO: confirm if we need this\n  state?: string\n}\n\nexport type DiscoverOptions = {\n  walletType: ExternalWalletType\n  chainNetwork?: ChainNetwork\n  oreAccount?: ChainAccount\n  discoveryPathIndexList?: number[]\n}\n\nexport type AuthResult = {\n  account?: AccountName\n  accessToken?: string\n  idToken?: string\n  errors?: string[]\n  processId?: ProcessId\n  state?: string\n}\n\nexport type NewAccountResult = {\n  chainAccount?: string\n  errors?: string[]\n  processId?: ProcessId\n  state?: string\n}\n\nexport type SignResult = {\n  signedTransaction?: string\n  transactionId: string\n  errors?: string[]\n  processId?: ProcessId\n  state?: string\n}\n\n// Todo: implement passwordReset flow/url\nexport type PasswordResetOptions = {\n  provider: AuthProvider\n  chainAccount?: ChainAccount\n  chainNetwork?: ChainNetwork\n  state?: string\n  currentAccountPassword?: string // if the user's current password is known, it can be passed in to appAccessToken request\n}\n\nexport type GetRecoverAccountUrlResult = string\n\nexport type LoginWithOreIdResult = {\n  accessToken?: string\n  loginUrl?: string\n  errors?: string\n  processId?: ProcessId\n}\n\nexport type NewAccountWithOreIdResult = {\n  newAccountUrl: string\n  errors?: string\n}\n\nexport type SignWithOreIdResult = {\n  processId?: ProcessId\n  signedTransaction?: string\n  transactionId?: string\n  signUrl?: string\n  errors?: string\n}\n\nexport type SignStringParams = {\n  account: AccountName\n  walletType: ExternalWalletType\n  chainAccount?: ChainAccount\n  chainNetwork: ChainNetwork\n  string: string\n  message: string\n  metadata?: any\n}\n\nexport type SignStringResult = {\n  signedString: string\n}\n\n// Function Params\n\nexport type GetOreIdNewChainAccountUrlParams = NewAccountOptions & {\n  callbackUrl: string\n  backgroundColor?: string\n}\n\nexport type GetOreIdAuthUrlParams = LoginOptions & {\n  callbackUrl: string\n  backgroundColor?: string\n}\n\nexport type GetOreIdRecoverAccountUrlParams = LoginOptions & {\n  account: AccountName\n  backgroundColor?: string\n  callbackUrl: string\n  recoverAction?: RecoverAccountAction\n  overrideAppAccessToken?: AppAccessToken\n}\n\nexport type AppAccessTokenMetadata = {\n  paramsNewAccount?: NewAccountAppTokenParams\n  newAccountPassword?: string\n  currentAccountPassword?: string\n  secrets?: {\n    type: string\n    value: string\n  }[]\n}\n\n/** params for calling new-account service web endpoint (sent via AppAccessToken request) */\nexport type NewAccountAppTokenParams = {\n  account: AccountName // wallet account (ore account name)\n  accountType: AccountType\n  chainNetwork?: ChainNetwork // chainNetwork to create new account on\n  accountOptions: CreateOnChainAccountsOptions\n}\n\nexport type CreateOnChainAccountsOptions = {\n  keys?: {\n    publicKeys: {\n      owner?: PublicKey\n      active: PublicKey\n    }\n  }\n  multisigOptions?: AlgorandMultiSigOptions // || future multisig option types\n}\n\ntype ParamsForRequest = {\n  appId?: string\n  accessToken?: string\n  chainAccount?: string\n  idToken?: string\n  processId?: ProcessId\n  state?: string\n  signedTransaction?: string\n  transactionId?: string\n  user?: UserData\n}\n\ntype ParamsForResponse = {\n  myField?: string\n}\n\nexport type RequestWithParams = Request & ParamsForRequest\nexport type ResponseWithParams = Response & ParamsForResponse\n\n/** Generic SignatureProvider interface */\nexport interface SignatureProvider {\n  /** Public keys associated with the private keys that the `SignatureProvider` holds */\n  getAvailableKeys: () => Promise<string[]>\n  /** Sign a transaction */\n  sign: (args: SignatureProviderArgs) => Promise<SignatureProviderSignResult>\n}\n\n/** SignatureProvider params for sign() function */\nexport interface SignatureProviderArgs {\n  /** Chain transaction is for */\n  chainId: string\n  /** Public keys associated with the private keys needed to sign the transaction */\n  requiredKeys: string[]\n  /** Transaction to sign */\n  serializedTransaction: Uint8Array\n  /** ABIs for all contracts with actions included in `serializedTransaction` */\n  abis: BinaryAbi[]\n}\n\n/** Results from external wallet signTransction() - e.g. via Transit or UAL */\nexport interface SignatureProviderSignResult {\n  signatures: string[]\n  serializedTransaction: Uint8Array\n}\n\n/** Structure for the raw form of ABIs */\nexport interface BinaryAbi {\n  /** account which has deployed the ABI */\n  accountName: string\n  /** abi in binary form */\n  abi: Uint8Array\n}\n", "/* eslint-disable @typescript-eslint/indent */\n\nimport { AuthProvider } from '../common/models'\n\n// IMPORTANT: These types are copied from oreid-service webwidget code\n\n/** version of widget served by server that matches these types */\nexport const WidgetVersion = '1'\n\n/** Subset of OreIdOptions used by widget */\nexport type WebWidgetOreIdOptions = {\n  accessToken?: string\n  appId: string\n  backgroundColor?: string\n  oreIdUrl?: string\n  setBusyCallback?: (isBusy: boolean) => void\n  eosTransitWalletProviders?: any[] // TODO: remove these from being passed to webwidget\n}\n\nexport type WebWidgetOnSuccess = ({ data }: { data?: any }) => void\nexport type WebWidgetOnError = (error: Error) => void\n\nexport type WebWidgetProps = {\n  oreIdOptions: WebWidgetOreIdOptions\n  action: {\n    name: WebWidgetAction | string\n    params: WebWidgetActionParams\n  } | null\n  /** callback on success */\n  onSuccess: WebWidgetOnSuccess\n  /** callback if error - error message is a delimited string of error codes and/or an error message */\n  onError: WebWidgetOnError\n  /** source url for request (e.g. https://yourapp.com) */\n  origin: string\n  timeout?: number\n  /** the time of the request (Epoch time) */\n  timestamp?: number\n  /** the signture of the request body */\n  signature?: string\n}\n\n/** Actions supported by widget */\nexport enum WebWidgetAction {\n  Auth = 'auth',\n  Logout = 'logout',\n  NewChainAccount = 'newChainAccount',\n  RecoverAccount = 'recoverAccount',\n  Sign = 'sign',\n  Buy = 'buy',\n  KeyExport = 'keyExport',\n}\n\n/** Alternative method to sign a transaction or string (chain specific) */\nexport enum SignStringMethod {\n  // Sign String methods\n  EthereumPersonalSign = 'ethereum.personal-sign',\n  EthereumSignTypedData = 'ethereum.sign-typed-data',\n  EthereumSign = 'ethereum.eth-sign',\n}\n\n/** params for Logout action */\nexport type WebWidgetLogoutParams = {\n  /** comma seperated list of login providers e.g. 'google, facebook' or 'all' */\n  providers?: string\n}\n\n/** valid action param types */\nexport type WebWidgetActionParams =\n  | WebWidgetAuthParams\n  | WebWidgetLogoutParams\n  | WebWidgetNewChainAccountParams\n  | WebWidgetRecoverAccountParams\n  | WebWidgetSignParams\n  | any\n\n/** params for Auth action */\nexport type WebWidgetAuthParams = {\n  /** Login provider (e.g. google, email) */\n  provider?: AuthProvider\n  /** user's idToken - can be from a 3rd-party (e.g. Google) - can be used to create a new user account */\n  idToken?: string\n  /** passwordless login - email to login with (and to send a verification code to) */\n  email?: string\n  /** passwordless login - phone to login with (and to send a verification code to) */\n  phone?: string\n  /** whether we should link this login attempt to an existing user */\n  linkToAccount?: boolean\n  /** whether we should skip creation of blockchain accounts for a new user */\n  delayWalletSetup?: boolean\n}\n\nexport type WebWidgetBuyParams = {\n  /** Blockchain account (usually the account signing the transaction) */\n  chainAccount: string\n  /** A valid chain network name (e.g. eth_main) */\n  chainNetwork: string\n  /** allowed chain networks for buying */\n  limitToChains?: string[]\n  /** allowed symbols to be bought */\n  limitToSymbols?: string[]\n  /** when true, accepts test credit card number  */\n  useTestMode?: boolean\n}\n\n/** params for New Account action - to create a new blockchain account 'within' a user's OreID account */\nexport type WebWidgetNewChainAccountParams = {\n  /** User's OreID account (aka wallet account name) */\n  account: string\n  /** Optional JSON object of account creation options (blockchain-specific) */\n  accountOptions?: any\n  /** Type of blockchain account to create - usually 'native' */\n  accountType: string\n  /** A valid chain network name (e.g. eth_main) */\n  chainNetwork: string\n}\n\n/** params for Recover Account action */\nexport type WebWidgetRecoverAccountParams = {\n  /** User's OreID account (aka wallet account name) */\n  account: string\n  /** Login provider (e.g. email) - forces user to haved logged-in using this provider before recovery */\n  provider?: string\n  /** Type of account recovery requested */\n  recoverAction?: string\n}\n\n/** params for Sign action */\nexport type WebWidgetSignParams = {\n  /** User's OreID account (aka wallet account name) */\n  account: string\n  /** Blockchain account (usually the account signing the transaction) */\n  chainAccount?: string\n  /** A valid chain network name (e.g. eth_main) */\n  chainNetwork: string\n  /** The maximum number of seconds for which the transaction will be valid (depends on blockchain-specific limits) */\n  expireSeconds?: number\n  /** A base64, stringified, JSON object of the transaction to sign - which already includes one or more signatures */\n  encodedSignedTransaction?: string\n  /** A base64, stringified, JSON object of the transaction to sign (format depends on blockchain type) */\n  encodedTransaction?: string\n  /** Optional - provided instead of transaction - OreID must have this transaction saved in its database (only applies to special situations) */\n  transactionRecordId?: string\n  /** Optional params for signing */\n  signOptions?: {\n    /** Whether an option is displayed to the user to sign with a key in an external wallet (e.g. Metamask) */\n    allowChainAccountSelection?: boolean\n    /** Whether signed transaction should be automatically sent to the chain */\n    broadcast?: boolean\n    /** Comma seperated string of accounts for which OreID should add signatures - only valid for accounts managed by OreId */\n    multisigChainAccounts?: string\n    /** Prevents the use of auto sign functionality while signing the transaction */\n    preventAutosign?: boolean\n    /** whether the complete signed transaction should be returned */\n    returnSignedTransaction?: boolean\n    /** optional signMethod - uses default method if not provided */\n    // signMethod?: SignTransactionMethod  // Expected to be used for ERC-712, etc.\n  }\n  /** populated if signing a string instead of a transaction */\n  stringToSign?: string\n  signStringMethod?: SignStringMethod\n}\n\nexport type WebWidgetKeyExportParams = {}\n\n/** Result for Auth action */\nexport type WebWidgetAuthResult = {\n  /** User's OreID account (aka wallet account name) */\n  account: string\n  /** user's accessToken signed by ORE ID (in JWT format) */\n  accessToken?: string\n  /** user's idToken signed by ORE ID (in JWT format) */\n  idToken?: string\n}\n\nexport type WebWidgetBuyResult = {\n  /** uid for tracking buy requested */\n  requesteId: string\n  /** operation success */\n  success: boolean\n  /** error code if any */\n  errorCode?: string\n  /** error message if any */\n  errorMessage?: string\n}\n\n/** Result for a server-side Logout action (Depricated) */\nexport type WebWidgetLogoutResult = {}\n\n/** Result for New Chain Account action */\nexport type WebWidgetNewChainAccountResult = {\n  /** User's new blockchain account name */\n  chainAccount: string\n}\n\n/** Result for a Recover Account action */\nexport type WebWidgetRecoverAccountResult = WebWidgetAuthResult\n\n/** Result for Sign transaction action */\nexport type WebWidgetSignResult = {\n  /** array of signatures created during sign flow - signatures might be stringified objects or pure strings */\n  signatures?: string[]\n  /** completed signed transaction (stringified) */\n  signedTransaction?: string\n  /** transactionId to identify transaction on blockchain (if returned) */\n  transactionId?: string\n}\n\n/** Result for Key Export action */\nexport type WebWidgetKeyExportResult = {\n  //  no result - just success or error\n}\n\nexport type WebWidgetActionResult =\n  | WebWidgetAuthResult\n  | WebWidgetLogoutResult\n  | WebWidgetNewChainAccountResult\n  | WebWidgetRecoverAccountResult\n  | WebWidgetSignResult\n  | WebWidgetKeyExportResult\n", "/*\n    helper functions\n */\nimport { AxiosError } from 'axios'\nimport { v4 as uuidv4 } from 'uuid'\nimport canonicalize from 'canonicalize'\nimport jwtDecode from 'jwt-decode'\nimport { Base64 } from 'js-base64'\nimport { JWTToken } from '../auth/models'\nimport { AuthProvider, ExternalWalletType, JSONObject, Lookup } from '../common/models'\n\nconst TRACING = false // enable when debugging to see detailed outputs\n\n// split a string or array at a given index position\nexport const splitAt = (index: number, dropChars: number) => (x: string) =>\n  [x.slice(0, index), x.slice(index + dropChars)]\n\nconst replaceAll = (inString: string, search: string, replacement: string) => {\n  return inString.replace(new RegExp(search, 'g'), replacement)\n}\n\nexport default class Helpers {\n  static isInBrowser = typeof window !== 'undefined'\n\n  static isNullOrEmpty(obj: any) {\n    if (obj === undefined) {\n      return true\n    }\n    if (obj === null) {\n      return true\n    }\n    // Check for an empty array too\n    if (Array.isArray(obj)) {\n      if (obj.length === 0) {\n        return true\n      }\n    }\n    return Object.keys(obj).length === 0 && obj.constructor === Object\n  }\n\n  // log data\n  static log(message: string, data?: any) {\n    if (TRACING) {\n      // eslint-disable-next-line no-console\n      console.log(message, data)\n    }\n  }\n\n  /** Decodes a JWT token string\n   *  If token can't be decoded (e.g. corrupted), returns null */\n  static jwtDecodeSafe(token: string): Partial<JWTToken> {\n    let decoded: JWTToken\n    if (this.isNullOrEmpty(token)) {\n      return null\n    }\n    try {\n      decoded = jwtDecode(token) as JWTToken\n    } catch (error) {\n      // throw Error(`Problem decoding or validating JWT token: ${token} error:${error}`)\n    }\n    return decoded\n  }\n\n  /**  Takes a url string and converts it to an object of {paramNane, paramValue}\n   * e.g input: https://xxx?enabled&name=value&name2=val2\n   *   returns: { 'enabled': true, 'name':'value', 'name2':'val2' }\n   * if the parameter only has a name and no value, then its value is set to 'true'\n   * */\n  static parseUrlParams(fullPath: string) {\n    const urlParamsObject: JSONObject = {}\n    let searchString\n    try {\n      const urlObject = new URL(fullPath)\n      if (urlObject.hash) {\n        searchString = urlObject.hash.slice(1) // remove #\n      } else {\n        searchString = urlObject.search\n      }\n    } catch (error) {\n      searchString = fullPath // treat as partial url string E.g. '?param1=value1...'\n    }\n\n    const urlParams = new URLSearchParams(searchString)\n    urlParams.forEach((value, key) => {\n      urlParamsObject[key] = decodeURIComponent(value) || 'true'\n    })\n\n    return urlParamsObject\n  }\n\n  /** Returns Null if parse fails\n   *  Reinflates a serialized object (e.g. UInt8Array) if found in JSON\n   */\n  static tryParseJSON(jsonString: any, unescape = false, replaceQuotes = false) {\n    let finalJsonString = ''\n    if (!jsonString || !Helpers.isAString(jsonString) || jsonString.trim() === '') return null\n    try {\n      if (unescape) {\n        // eslint-disable-next-line no-param-reassign\n        jsonString = decodeURI(jsonString)\n      }\n      finalJsonString = jsonString\n      if (replaceQuotes) {\n        // eslint-disable-next-line quotes\n        finalJsonString = replaceAll(jsonString, \"'\", '\"')\n        finalJsonString = replaceAll(finalJsonString, '`', '\"')\n      }\n      const o = JSON.parse(finalJsonString, Helpers.jsonParseComplexObjectReviver)\n      // Handle non-exception-throwing cases:\n      // Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n      // but... JSON.parse(null) returns null, and typeof null === \"object\",\n      // so we must check for that, too. Thankfully, null is falsey, so this suffices:\n      if (o && typeof o === 'object') {\n        return o\n      }\n    } catch (error) {\n      // TODO: should log trace this detail: ('error parsing JSON', { jsonString, doubleQuotes, error });\n    }\n\n    return null\n  }\n\n  /**\n   * The reviver function passed into JSON.parse to implement custom type conversions.\n   * If the value is a previously stringified buffer we convert it to a Buffer,\n   * If its an object of numbers, we convert to UInt8Array {\"0\":2,\"1\":209,\"2\":8 ...}\n   * otherwise return the value\n   */\n  static jsonParseComplexObjectReviver(key: string, value: any) {\n    // Convert Buffer\n    if (\n      value !== null &&\n      typeof value === 'object' &&\n      'type' in value &&\n      value.type === 'Buffer' &&\n      'data' in value &&\n      Array.isArray(value.data)\n    ) {\n      return Buffer.from(value.data)\n    }\n\n    // Convert number array to UInt8Array e.g. {\"0\":2,\"1\":209,\"2\":8 ...}\n    if (\n      value !== null &&\n      typeof value === 'object' &&\n      !Array.isArray(value) &&\n      '0' in value &&\n      Helpers.isANumber(value['0'])\n    ) {\n      const values = Object.entries(value).map(([, val]) => val)\n      // if array only has 8-bit numbers, convert it to UInt8Array\n      if (values.every(val => Helpers.isANumber(val) || val < 256)) {\n        return new Uint8Array(values as number[])\n      }\n    }\n\n    // Return parsed value without modifying\n    return value\n  }\n\n  static base64DecodeSafe(encodedString: string) {\n    let decoded: any = {}\n    if (this.isNullOrEmpty(encodedString)) {\n      return null\n    }\n    try {\n      decoded = Base64.decode(encodedString)\n      // if decoded value is a stringified JSON object, return the object\n      if (Helpers.tryParseJSON(decoded)) {\n        decoded = JSON.parse(decoded)\n      }\n    } catch (error) {\n      // logError('Problem decoding base64DecodeSafe:',error);\n      return null\n    }\n    return decoded\n  }\n\n  /**  Base64 encodes a string\n   * if value passed in is an Object or JSON, it will be stringified first\n   * if value is null, this function returns null */\n  static base64Encode(valueIn: any) {\n    if (!valueIn) return null\n    let value = valueIn\n    if (Helpers.isAnObject(value)) {\n      value = JSON.stringify(value)\n    }\n    return Base64.encode(value)\n  }\n\n  static sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  static createGuid() {\n    return uuidv4()\n  }\n\n  /** Typescript Typeguard to verify that the value is in the enumType specified  */\n  static isInEnum<T>(enumType: T, value: any): value is T[keyof T] {\n    return Object.values(enumType).includes(value as T[keyof T])\n  }\n\n  /** Typescript Typeguard helper to ensure that a string value can be assigned to an Enum type\n   *  If a value can't be matched to a valid option in the enum, returns null (or throws if throwIfInvalid = true) */\n  static toEnumValue<T>(e: T, value: any, throwIfInvalid = false): T[keyof T] {\n    if (this.isNullOrEmpty(value)) return null\n    if (this.isInEnum<T>(e, value)) {\n      return value\n    }\n    const errMsg = `Value ${JSON.stringify(value)} is not a valid member of enum ${JSON.stringify(e)}.`\n    if (throwIfInvalid) {\n      throw new Error(errMsg)\n    }\n    return null\n  }\n\n  /** Parses comma-seperated error_codes from url response\n   * Returns: array of error code strings\n   * Note: Params is a javascript object parsed from callback URL string */\n  static getErrorCodesFromParams(params: any) {\n    let errorCodes: string[]\n    const errorString = params.error_code || params.errorCode\n    const errorMessage = params.error_message || params.errorMessage\n    if (errorString) {\n      errorCodes = errorString.split(/[/?/$&]/)\n    }\n    if (errorCodes || errorMessage) {\n      errorCodes = errorCodes || []\n      errorCodes.push(errorMessage)\n    }\n    return errorCodes\n  }\n\n  /** Retrieve values from a url query string and returns an array of them\n   *  Also parses error codes returned into an array of errors codes/messages\n   */\n  static extractDataFromCallbackUrl(url: string) {\n    let params: { [key: string]: any } = {}\n    if (url) {\n      params = this.parseUrlParams(url)\n      const errors = this.getErrorCodesFromParams(params)\n      return { ...params, errors }\n    }\n    return params\n  }\n\n  /** Call the callback once for each item in the array and await for each to finish in turn */\n  static async asyncForEach(array: any[], callback: (item: any, index: number, array: any[]) => Promise<any>) {\n    if (Helpers.isNullOrEmpty(array)) return\n    for (let index = 0; index < array.length; index += 1) {\n      // eslint-disable-next-line @typescript-eslint/semi\n      // eslint-disable-next-line no-await-in-loop\n      await callback(array[index], index, array)\n    }\n  }\n\n  /** Return a value in a custom claim in a JWT token by using a partial claim name\n   *  e.g. function(token, 'appId') => value for claim https://oreid.io/appId */\n  static getClaimFromJwtTokenBySearchString(decodedToken: JWTToken, searchString: string) {\n    let value: string\n    if (!this.isAnObject(decodedToken)) return null\n    // loop through items in token to find matching string\n    Object.keys(decodedToken).forEach(item => {\n      if (item.includes(searchString)) {\n        value = (decodedToken as Lookup)[item]\n      }\n    })\n    return value\n  }\n\n  /** get error from inside a network request (Axios Error object) and return it */\n  static getErrorFromAxiosError(error: AxiosError) {\n    // Browser thre an error during CORS preflight post - See https://github.com/axios/axios/issues/1143\n    if (error?.message.toLowerCase() === 'network error') {\n      throw new Error(\n        'Browser threw a Network Error. This is likely because of CORS error. Make sure that you are not sending an api-key in the header of the request.',\n      )\n    }\n    if (error?.code === 'ECONNREFUSED') {\n      throw new Error(`Could not connect to ORE ID service. ${error.message}.`)\n    }\n\n    if (!Helpers.isAxiosError(error)) {\n      return error\n    }\n    // extract error message from Axios Error and return new Error\n    const { data = {} } = error?.response || {}\n    const { message } = data\n    const errorCodes = this.getErrorCodesFromParams(data)\n    // oreid apis pass back errorCode/errorMessages\n    // also handle when a standard error message is thrown\n    const errorCodesList = errorCodes && errorCodes?.length > 1 ? errorCodes.join(', ') : errorCodes\n    const errorString = errorCodesList || message || 'unknown error'\n    return Error(errorString)\n  }\n\n  static isAxiosError(error: any): error is AxiosError {\n    return (error as AxiosError).isAxiosError !== undefined\n  }\n\n  static isAString(value: any): boolean {\n    if (!value) {\n      return false\n    }\n    return typeof value === 'string' || value instanceof String\n  }\n\n  static isADate(value: any): boolean {\n    return value instanceof Date\n  }\n\n  static isABoolean(value: any): boolean {\n    return typeof value === 'boolean' || value instanceof Boolean\n  }\n\n  static isANumber(value: any): boolean {\n    if (Number.isNaN(value)) return false\n    return typeof value === 'number' || value instanceof Number\n  }\n\n  static isAnObject(obj: any): boolean {\n    return obj !== null && typeof obj === 'object'\n  }\n\n  /** throw error if invalid provider */\n  static assertValidProvider(provider: AuthProvider) {\n    if (Helpers.isInEnum(AuthProvider, provider)) {\n      return true\n    }\n    throw new Error(`Auth provider ${provider} is not a valid option`)\n  }\n\n  /** Convert an AuthProvider to the ExternalWalletType subset\n   *  Returns null if can't convert member */\n  static mapAuthProviderToWalletType(provider: AuthProvider | ExternalWalletType) {\n    if (!provider) return null\n    return Helpers.toEnumValue(ExternalWalletType, provider)\n  }\n\n  static isCustodial(provider: AuthProvider) {\n    return provider === AuthProvider.Custodial\n  }\n\n  static isValidEmail(email: any): boolean {\n    if (!email) return false\n    const emailRegex =\n      /^(([^<>()[]\\\\.,;:\\s@]+(\\.[^<>()[]\\\\.,;:\\s@]+)*)|(.+))@(([[0-9]{1,3}\\[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return emailRegex.test(email)\n  }\n\n  /** Sort JSON in a deterministic way */\n  static sortJson(value: any): any {\n    if (!value) return value\n    const stringified = canonicalize(value)\n    return JSON.parse(stringified)\n  }\n\n  /** filter complex values in array down to an array of a single, uniques values\n   * e.g. if array = [{value:'A', other}, {value:'B', something}, {value:'A', other}]\n   *       => [{value:'A', other}, {value:'B', something}] */\n  static getUniqueValues<T>(array: T[]) {\n    return Array.from(new Set(array.map(item => JSON.stringify(item)))).map(item => JSON.parse(item))\n  }\n\n  /** Execute a callback function at a given Unix Epoch time */\n  static runAtTime(callback: Function, executionEoochTime: number) {\n    const now = Date.now()\n    const runAtTime = Math.max(executionEoochTime, now) // if executionEoochTime is in the past, use the current time to run the function immediately\n    return setTimeout(callback, runAtTime - now)\n  }\n\n  /** whether objects are 'equal' by deep comparing all members */\n  static objectsAreEqual(a: any, b: any) {\n    if (a === b) return true\n    if (typeof a !== 'object' || typeof b !== 'object' || a == null || b == null) return false\n    const keysA = Object.keys(a)\n    const keysB = Object.keys(b)\n    if (keysA.length !== keysB.length) return false\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of keysA) {\n      if (!keysB.includes(key)) return false\n      if (typeof a[key] === 'function' || typeof b[key] === 'function') {\n        if (a[key].toString() !== b[key].toString()) return false\n      } else if (!Helpers.objectsAreEqual(a[key], b[key])) return false\n    }\n    return true\n  }\n}\n", "/* eslint-disable @typescript-eslint/default-param-last */\nimport Helpers from '../utils/helpers'\nimport { JSONObject, ApiKeyUsedFor } from '../models'\nimport OreIdContext from '../core/IOreidContext'\n\nconst { isNullOrEmpty } = Helpers\n\n// ---- API Helper functions\n\n/** check the header of the request for each required param in paramNames */\nexport function assertHeaderhasRequiredValues(params: JSONObject = {}, paramNames: any[], apiName: string) {\n  const missing: any[] = []\n  paramNames.forEach(p => {\n    if (isNullOrEmpty(params[p])) {\n      missing.push(p)\n    }\n  })\n  if (!isNullOrEmpty(missing)) {\n    throw new Error(`Missing required parameter(s) in request header for API ${apiName}: ${missing.join(', ')}`)\n  }\n}\n\n/** Check that we have an apiKey or accessToken */\nexport function assertHasApiKeyOrAccessToken(oreIdContext: OreIdContext, apiName: string) {\n  if (!oreIdContext.accessToken && !oreIdContext.options?.apiKey) {\n    throw new Error(`Missing required header for API ${apiName}: Must have a valid user accessToken or options.apiKey`)\n  }\n}\n\n/** Check that we have an accessToken */\nexport function assertHasAccessToken(oreIdContext: OreIdContext, apiName: string) {\n  if (!oreIdContext.accessToken) {\n    throw new Error(`Missing required header for API ${apiName}: Must have a valid user accessToken`)\n  }\n}\n\n/** Check that we have an apiKey */\nexport function assertHasApiKey(oreIdContext: OreIdContext, usedFor: ApiKeyUsedFor, apiName: string) {\n  if (!oreIdContext.options?.apiKey) {\n    const usedFprMsg = usedFor ? ` - with ${usedFor} right.` : '.'\n    throw new Error(`Missing required header for API ${apiName}: Must have an options.apiKey${usedFprMsg}`)\n  }\n}\n\n/** Check API params for each required param in paramNames */\nexport function assertParamsHaveRequiredValues(params: JSONObject = {}, paramNames: any[], apiName: string) {\n  const missing: any[] = []\n  paramNames.forEach(p => {\n    if (isNullOrEmpty(params[p])) {\n      missing.push(p)\n    }\n  })\n  if (!isNullOrEmpty(missing)) {\n    throw new Error(`Missing required parameter(s) for API ${apiName}: ${missing.join(', ')}`)\n  }\n}\n\n/** Check API params - must include at least one of the params in the list */\nexport function assertParamsHaveAtLeastOneOfValues(params: JSONObject = {}, paramNames: any[], apiName: string) {\n  const matches = paramNames.filter(p => {\n    return !isNullOrEmpty(params[p])\n  })\n  if (matches.length === 0) {\n    throw new Error(`Missing at least one of these parameter(s) for API ${apiName}: ${paramNames.join(', ')}`)\n  }\n}\n\n/** Check API params - must include one and only one of params in the list */\nexport function assertParamsHaveOnlyOneOfValues(params: JSONObject = {}, paramNames: any[], apiName: string) {\n  const matches = paramNames.filter(p => {\n    return !isNullOrEmpty(params[p])\n  })\n  if (matches.length > 1) {\n    throw new Error(`You can only provide one of these parameter(s) for API ${apiName}: ${paramNames.join(', ')}`)\n  }\n}\n\n/** remove processId from data */\nexport function extractProcessIdFromData(data: any) {\n  let processId\n  if (data?.processId) {\n    // eslint-disable-next-line prefer-destructuring\n    processId = data.processId\n    // eslint-disable-next-line no-param-reassign\n    delete data.processId\n  }\n  return { data, processId }\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport {\n  AccountName,\n  ApiEndpoint,\n  ChainAccount,\n  ChainNetwork,\n  ExternalWalletType,\n  PublicKey,\n  RequestType,\n} from '../../models'\nimport { assertHasApiKeyOrAccessToken, assertParamsHaveRequiredValues } from '../helpers'\nimport { ApiMessageResult } from '../models'\n\nexport type ApiAddPermissionParams = {\n  account: AccountName\n  chainAccount: ChainAccount\n  chainNetwork: ChainNetwork\n  parentPermission?: PermissionName\n  permission: PermissionName\n  provider?: ExternalWalletType\n  publicKey: PublicKey\n}\n\n/**\n *  Call api account/addPermission\n *  Adds a public key to a user account with a specific permission name\n * The permission name must be one defined in the App Registration record (Which defines its parent permission as well as preventing adding rougue permissions)\n * This feature allows your app to hold private keys locally (for certain actions enabled by the permission) while having the associated public key in the user's account\n * chainAccount = name of the account on the chain - 12/13-digit string on EOS and Ethereum Address on ETH - it may be the same as the account\n * chainNetwork = one of the valid options defined by the system - Ex: 'eos_main', 'eos_jungle', 'eos_kylin\", 'ore_main', 'eos_test', etc.\n * */\nexport async function callApiAddPermission(\n  oreIdContext: OreIdContext,\n  params: ApiAddPermissionParams,\n): Promise<ApiMessageResult> {\n  const apiName = ApiEndpoint.AddPermission\n\n  assertHasApiKeyOrAccessToken(oreIdContext, apiName)\n  assertParamsHaveRequiredValues(\n    params,\n    ['account', 'chainAccount', 'chainNetwork', 'permission', 'publicKey'],\n    apiName,\n  )\n\n  const { account, permission, provider, parentPermission } = params\n\n  const optionalParams: { [key: string]: any } = {}\n  if (provider) optionalParams['wallet-type'] = provider\n  if (parentPermission) optionalParams['parent-permission'] = parentPermission\n\n  const queryParams = {\n    account,\n    'chain-account': params.chainAccount,\n    'chain-network': params.chainNetwork,\n    'public-key': params.publicKey,\n    permission,\n    ...optionalParams,\n  }\n\n  const response = await oreIdContext.callOreIdApi(RequestType.Get, ApiEndpoint.AddPermission, queryParams, null)\n  return response as ApiMessageResult\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { ApiEndpoint, AppAccessTokenMetadata, RequestType, ApiKeyUsedFor } from '../../models'\nimport { assertHasApiKey } from '../helpers'\nimport Helpers from '../../utils/helpers'\n\nexport type ApiGetAppTokenParams = {\n  appAccessTokenMetadata?: AppAccessTokenMetadata\n}\n\n/**\n *  Call api app-token to get a new appAccessToken\n *  An apiKey is always required to call this endpoint\n *  Returns: appAccessToken\n * */\nexport async function callApiGetAppToken(oreIdContext: OreIdContext, params: ApiGetAppTokenParams): Promise<string> {\n  const apiName = ApiEndpoint.AppToken\n  const { appAccessTokenMetadata } = params\n\n  // to use appAccessTokenMetadata, we require a apiKey with 'createUser' right\n  if (!Helpers.isNullOrEmpty(appAccessTokenMetadata)) {\n    assertHasApiKey(oreIdContext, ApiKeyUsedFor.CreateUser, apiName)\n  } else {\n    assertHasApiKey(oreIdContext, null, apiName)\n  }\n  const { appAccessToken } = await oreIdContext.callOreIdApi(\n    RequestType.Post,\n    ApiEndpoint.AppToken,\n    appAccessTokenMetadata,\n    null,\n  )\n  return appAccessToken as string\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport {\n  AccountName,\n  ApiEndpoint,\n  ChainAccount,\n  ChainNetwork,\n  ProcessId,\n  RequestType,\n  ApiKeyUsedFor,\n  TransactionData,\n} from '../../models'\nimport { assertHasApiKey, assertParamsHaveOnlyOneOfValues, assertParamsHaveRequiredValues } from '../helpers'\nimport Helpers from '../../utils/helpers'\n\nexport type ApiCanAutosignTransactionBodyParams = {\n  account: AccountName\n  chain_account: ChainAccount\n  chain_network: ChainNetwork\n  signed_transaction?: string\n  transaction?: string\n  transaction_chain_acccount?: string\n}\n\nexport type ApiCanAutosignTransactionResult = {\n  autoSignCredentialsExist: boolean\n  canCreateAutoSignCredentials: boolean\n  maxAutoSignValidForInSeconds: number\n  processId: ProcessId\n}\n\n/** Call api transaction/can-auto-sign\n * Requires a apiKey with the autoSign right\n * Returns: true if transaction provided can be signed using the signTransaction(autosign:true)\n * */\nexport async function callApiCanAutosignTransaction(\n  oreIdContext: OreIdContext,\n  params: TransactionData,\n): Promise<ApiCanAutosignTransactionResult> {\n  const apiName = ApiEndpoint.CanAutoSign\n  const { account, chainAccount, chainNetwork, signedTransaction, transaction, transactionChainAccount } = params\n\n  assertHasApiKey(oreIdContext, ApiKeyUsedFor.AutoSigning, apiName)\n  assertParamsHaveRequiredValues(params, ['account', 'chainNetwork', 'chainAccount'], apiName)\n  assertParamsHaveOnlyOneOfValues(params, ['transaction', 'signedTransaction'], apiName)\n\n  const body: ApiCanAutosignTransactionBodyParams = {\n    account,\n    chain_account: chainAccount,\n    chain_network: chainNetwork,\n  }\n\n  if (transaction) body.transaction = Helpers.base64Encode(transaction)\n  if (signedTransaction) body.signed_transaction = Helpers.base64Encode(signedTransaction)\n  if (transaction) body.transaction_chain_acccount = transactionChainAccount\n\n  const results = await oreIdContext.callOreIdApi(RequestType.Post, ApiEndpoint.CanAutoSign, body, null)\n  return results\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { ApiEndpoint, ProcessId, RequestType } from '../../models'\nimport { assertHasApiKeyOrAccessToken, assertParamsHaveRequiredValues } from '../helpers'\n\nexport type ApiConvertOauthTokensParams = {\n  accessToken?: string\n  idToken?: string\n}\n\nexport type ApiConvertOauthTokensBodyParams = {\n  access_token?: string\n  id_token?: string\n}\n\nexport type CallApiConvertOauthTokensResult = {\n  accessToken: string\n  idToken: string\n  processId: ProcessId\n}\n\n/** Call the account/convert-oauth api\n * Converts OAuth tokens from some 3rd-party source to OREID Oauth tokens\n * The third-party (e.g. Auth0 or Google) must be registered in the AppRegistration.oauthSettings\n * Returns: OreId issued accessToken and idToken\n * */\nexport async function callApiConvertOauthTokens(\n  oreIdContext: OreIdContext,\n  params: ApiConvertOauthTokensParams,\n): Promise<CallApiConvertOauthTokensResult> {\n  const apiName = ApiEndpoint.ConvertOauthTokens\n  const { accessToken, idToken } = params\n\n  assertHasApiKeyOrAccessToken(oreIdContext, apiName)\n  // assertParamsHaveOnlyOneOfValues(params, ['accessToken', 'idToken'], apiName)\n  assertParamsHaveRequiredValues(params, ['idToken'], apiName)\n\n  const body: ApiConvertOauthTokensBodyParams = {}\n  if (accessToken) body.access_token = accessToken\n  if (idToken) body.id_token = idToken\n\n  const results = await oreIdContext.callOreIdApi(RequestType.Post, ApiEndpoint.ConvertOauthTokens, body, null)\n  return results // accessToken and idToken\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport {\n  AccountName,\n  AccountType,\n  ApiEndpoint,\n  ChainAccount,\n  ChainNetwork,\n  RequestType,\n  ApiKeyUsedFor,\n} from '../../models'\nimport { assertHasApiKey, assertParamsHaveOnlyOneOfValues, assertParamsHaveRequiredValues } from '../helpers'\nimport { ApiResultWithErrorCode } from '../models'\n\nexport type ApiCustodialMigrateAccountParams = {\n  account: AccountName\n  chainAccount: ChainAccount\n  chainNetwork: ChainNetwork\n  toType: AccountType\n  userPassword: string\n  userPasswordEncrypted: string\n}\n\nexport type ApiCustodialMigrateAccountBodyParams = {\n  account: AccountName\n  chain_account: ChainAccount\n  chain_network: ChainNetwork\n  to_type: AccountType\n  user_password?: string\n  user_password_encrypted?: string\n}\n\nexport type ApiCustodialMigrateAccountResult = {\n  account: AccountName\n} & ApiResultWithErrorCode\n\n/** Call the custodial/migrate-user api\n * Converts a user account to a new account type\n * Usually used to convert a virtal account to a native account (on-chain)\n * .. and expects the account to be a managed (custodial) account\n * Requires a wallet password (userPassword) on behalf of the user\n * Requires an apiKey with the accountMigration right\n * Returns: account name of migrated account\n *       OR errorCode, errorMessage, and message if any problems */\nexport async function callApiCustodialMigrateAccount(\n  oreIdContext: OreIdContext,\n  params: ApiCustodialMigrateAccountParams,\n): Promise<ApiCustodialMigrateAccountResult> {\n  const apiName = ApiEndpoint.CustodialMigrateAccount\n\n  const { account, chainAccount, chainNetwork, toType, userPassword, userPasswordEncrypted } = params\n  const body: ApiCustodialMigrateAccountBodyParams = {\n    account,\n    chain_account: chainAccount,\n    chain_network: chainNetwork,\n    to_type: toType,\n    user_password: userPassword,\n    user_password_encrypted: userPasswordEncrypted,\n  }\n\n  assertHasApiKey(oreIdContext, ApiKeyUsedFor.AccountMigration, apiName)\n  assertParamsHaveRequiredValues(params, ['account', 'chainAccount', 'chainNetwork', 'toType'], apiName)\n  assertParamsHaveOnlyOneOfValues(params, ['user_password', 'user_password_encrypted'], apiName)\n\n  const results = await oreIdContext.callOreIdApi(RequestType.Post, ApiEndpoint.CustodialMigrateAccount, body, null)\n  return results\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { AccountName, AccountType, ApiEndpoint, RequestType, ApiKeyUsedFor } from '../../models'\nimport { assertHasApiKey, assertParamsHaveOnlyOneOfValues, assertParamsHaveRequiredValues } from '../helpers'\nimport { ApiResultWithErrorCode } from '../models'\n\nexport type ApiCustodialNewAccountParams = {\n  accountType: AccountType\n  /** whether we should skip creation of blockchain accounts for a new user */\n  delayWalletSetup?: boolean\n  email?: string\n  emailVerified?: boolean\n  idToken?: string\n  isTestUser?: boolean\n  name?: string\n  picture?: string\n  phone?: string\n  phoneVerified?: boolean\n  userName?: string\n  userPassword?: string\n}\n\nexport type ApiCustodialNewAccountBodyParams = {\n  account_type: AccountType\n  /** whether we should skip creation of blockchain accounts for a new user */\n  delay_wallet_setup?: boolean\n  email?: string\n  email_verified?: boolean\n  id_token?: string\n  is_test_user?: boolean\n  name?: string\n  picture?: string\n  phone?: string\n  phone_verified?: boolean\n  user_name?: string\n  user_password?: string\n  user_password_encrypted?: string\n  user_password_encrypted_backup?: string\n}\n\nexport type ApiCustodialNewAccountResult = {\n  accountName: AccountName\n} & ApiResultWithErrorCode\n\n/** Call the custodial/new-user api\n * Create a new user account that is managed by your app\n * Requires a wallet password (userPassword) on behalf of the user\n * Requires an apiKey with the createUser right\n * Returns: accountName of newly created account\n *       OR errorCode, errorMessage, and message if any problems */\nexport async function callApiCustodialNewAccount(\n  oreIdContext: OreIdContext,\n  params: ApiCustodialNewAccountParams,\n): Promise<ApiCustodialNewAccountResult> {\n  const apiName = ApiEndpoint.CustodialNewAccount\n\n  const {\n    accountType,\n    delayWalletSetup,\n    email,\n    emailVerified,\n    idToken,\n    isTestUser,\n    name,\n    picture,\n    phone,\n    phoneVerified,\n    userName,\n    userPassword,\n  } = params\n  const body: ApiCustodialNewAccountBodyParams = {\n    account_type: accountType,\n    delay_wallet_setup: delayWalletSetup,\n    email,\n    email_verified: emailVerified,\n    id_token: idToken,\n    is_test_user: isTestUser,\n    name,\n    phone,\n    phone_verified: phoneVerified,\n    picture,\n    user_name: userName,\n    user_password: userPassword,\n  }\n\n  assertHasApiKey(oreIdContext, ApiKeyUsedFor.CreateUser, apiName)\n  assertParamsHaveRequiredValues(params, ['accountType'], apiName)\n  assertParamsHaveOnlyOneOfValues(\n    params,\n    ['user_password', 'user_password_encrypted', 'user_password_encrypted_backup'],\n    apiName,\n  )\n\n  if (!idToken && !(email && name)) {\n    throw new Error(`Missing required parameter(s) for API ${apiName}: Must include email AND name or an idToken`)\n  }\n\n  const results = await oreIdContext.callOreIdApi(RequestType.Post, ApiEndpoint.CustodialNewAccount, body, null)\n  return results // accessToken and idToken\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { ApiEndpoint, ApiKeyUsedFor, RequestType, SignStringMethod } from '../../models'\nimport { assertHasApiKey, assertParamsHaveOnlyOneOfValues, assertParamsHaveRequiredValues } from '../helpers'\nimport { ApiResultWithErrorCode } from '../models'\n\nexport type ApiCustodialSignStringParams = {\n  chainAccount: string\n  chainNetwork: string\n  permission?: string\n  stringToSign: string\n  /** optional - alternative method of signing (chain-specific) */\n  signMethod?: SignStringMethod\n  userPassword?: string\n  userPasswordEncrypted?: string\n}\n\nexport type ApiCustodialSignStringBodyParams = {\n  chain_account: string\n  chain_network: string\n  permission?: string\n  string_to_sign: string\n  sign_method?: SignStringMethod\n  user_password?: string\n  user_password_encrypted?: string\n}\n\nexport type ApiCustodialSignStringResult = {\n  signature: string\n} & ApiResultWithErrorCode\n\n/** Call the custoidal/sign-string api\n * Signs a string (aka message) using the user's private key\n * Requires a wallet password (userPassword) on behalf of the user\n * Requires an apiKey with the createUser right\n * Optional: options - designates the method of signing to perform (e.g. ethereum.eth_sign, ethereum.eth_signTypedData) and related metadata (e.g. ERC712 types)\n * Returns: signature\n *       OR errorCode, errorMessage, and message if any problems */\nexport async function callApiCustodialSignString(\n  oreIdContext: OreIdContext,\n  params: ApiCustodialSignStringParams,\n): Promise<ApiCustodialSignStringResult> {\n  const apiName = ApiEndpoint.CustodialSignString\n\n  const { chainAccount, chainNetwork, permission, stringToSign, signMethod, userPassword } = params\n  const body: ApiCustodialSignStringBodyParams = {\n    chain_account: chainAccount,\n    chain_network: chainNetwork,\n    permission,\n    string_to_sign: stringToSign,\n    user_password: userPassword,\n  }\n\n  if (signMethod) body.sign_method = signMethod\n\n  assertHasApiKey(oreIdContext, ApiKeyUsedFor.ProxySigning, apiName)\n  assertParamsHaveRequiredValues(params, ['chainAccount', 'chainNetwork', 'stringToSign'], apiName)\n  assertParamsHaveOnlyOneOfValues(params, ['user_password', 'user_password_encrypted'], apiName)\n\n  const results = await oreIdContext.callOreIdApi(RequestType.Post, ApiEndpoint.CustodialSignString, body, null)\n  return results\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { AccountName, ApiEndpoint, RequestType } from '../../models'\nimport { assertHasApiKeyOrAccessToken, assertParamsHaveRequiredValues, extractProcessIdFromData } from '../helpers'\nimport { ApiResultWithErrorCode } from '../models'\n\nexport type ApiDeleteTestUserParams = {\n  account: AccountName\n}\n\nexport type ApiDeleteTestUserResult = {\n  success: boolean\n} & ApiResultWithErrorCode\n\n/**\n *  Delete a user specifically created as a test user via api account/delete-test-user endpoint\n *  Returns: success or errorCode, errorMessage, if any problems\n */\nexport async function callApiDeleteTestUser(\n  oreIdContext: OreIdContext,\n  params: ApiDeleteTestUserParams,\n): Promise<ApiDeleteTestUserResult> {\n  const apiName = ApiEndpoint.DeleteTestUser\n  const { account } = params\n  assertHasApiKeyOrAccessToken(oreIdContext, apiName)\n  assertParamsHaveRequiredValues(params, ['account'], apiName)\n  const body = { account }\n\n  const response = await oreIdContext.callOreIdApi(RequestType.Post, ApiEndpoint.DeleteTestUser, body)\n  const { data } = extractProcessIdFromData(response)\n  return data as ApiDeleteTestUserResult\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { ApiEndpoint, ConfigType, RequestType } from '../../models'\nimport { assertHasApiKeyOrAccessToken, assertParamsHaveRequiredValues } from '../helpers'\n\nexport type ApiGetConfigParams = {\n  configType: ConfigType.Chains\n}\n\n/**\n *  Call api services/config to get configuration values of a specific type\n *  Returns: for configType:Config.Chains, returns array of SettingChainNetwork objects for all chains suported by the service\n * */\nexport async function callApiGetConfig(oreIdContext: OreIdContext, params: ApiGetConfigParams): Promise<any> {\n  const apiName = ApiEndpoint.GetConfig\n\n  assertHasApiKeyOrAccessToken(oreIdContext, apiName)\n  assertParamsHaveRequiredValues(params, ['configType'], apiName)\n\n  const { configType } = params\n  const queryParams = { type: configType }\n  const { values } = await oreIdContext.callOreIdApi(RequestType.Get, ApiEndpoint.GetConfig, queryParams, null)\n  return values\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { AccountName, ApiEndpoint, RequestType, UserSourceData } from '../../models'\nimport { assertHasApiKeyOrAccessToken, assertParamsHaveRequiredValues, extractProcessIdFromData } from '../helpers'\n\nexport type ApiGetUserParams = {\n  account: AccountName\n}\n\n/**\n *  Fetch user from api account/user endpoint\n *  Returns: UserSourceData for specified account\n */\nexport async function callApiGetUser(oreIdContext: OreIdContext, params: ApiGetUserParams): Promise<UserSourceData> {\n  const apiName = ApiEndpoint.GetUser\n  const { account } = params\n  assertHasApiKeyOrAccessToken(oreIdContext, apiName)\n  assertParamsHaveRequiredValues(params, ['account'], apiName)\n  const queryParams = { account }\n\n  const response = await oreIdContext.callOreIdApi(RequestType.Get, ApiEndpoint.GetUser, queryParams)\n  const { data } = extractProcessIdFromData(response)\n  return data as UserSourceData\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { ApiEndpoint, RequestType } from '../../models'\nimport { assertHasApiKey, assertParamsHaveOnlyOneOfValues, assertParamsHaveRequiredValues } from '../helpers'\nimport Helpers from '../../utils/helpers'\nimport { ApiResultWithErrorCode } from '../models'\n\nexport type ApiLoginUserWithTokenParams = {\n  accessToken?: string\n  idToken?: string\n  provider?: string\n}\n\nexport type ApiLoginUserWithTokenBodyParams = {\n  id_token?: string\n  access_token?: string\n  provider?: string\n}\n\n/** Call api account/login-user-with-token\n * Converts OAuth accesstoken or idToken from some 3rd-party source to OREID Oauth accessTokens\n * The third-party (e.g. Auth0 or Google) must be registered in the AppRegistration.oauthSettings\n * If a user does not curently exist that matches the info in the incoming idToken, a new OreID user and account is created\n * Requires either:\n *  1) a valid idToken (needs no accessToken or apiKey in header)\n *  2) an OreId issued JWT accessToken (needs no accessToken or apiKey in header)\n *  3) a 3rd-party accessToken (usually not a JWT) and provider param (e.g. 'google') - Requires api-key in header\n * Returns: OreId issued accessToken and user's account name (if new account created, this is a new account name)\n * */\nexport async function callApiLoginUserWithToken(\n  oreIdContext: OreIdContext,\n  params: ApiLoginUserWithTokenParams,\n): Promise<{ accessToken: string } & ApiResultWithErrorCode> {\n  const apiName = ApiEndpoint.LoginUserWithToken\n  const { accessToken, idToken, provider } = params\n\n  // This function does not require authentication (api-key or accessToken) in request header - when using a signed JWT accessToken or idToken\n  // It does require an api-key when using a non-JWT (third-party) accessToken\n\n  assertParamsHaveOnlyOneOfValues(params, ['accessToken', 'idToken'], apiName)\n  assertParamsHaveOnlyOneOfValues(params, ['idToken', 'provider'], apiName)\n  if (accessToken && !Helpers.jwtDecodeSafe(accessToken)) {\n    assertParamsHaveRequiredValues(params, ['provider'], apiName)\n    // if we have non-JWT access token, we must include an api-key\n    assertHasApiKey(oreIdContext, null, 'login-user-with-token')\n  }\n\n  const body: ApiLoginUserWithTokenBodyParams = {}\n\n  if (idToken) {\n    body.id_token = idToken\n  } else {\n    body.access_token = accessToken\n    body.provider = provider\n  }\n\n  const results = await oreIdContext.callOreIdApi(\n    RequestType.Post,\n    ApiEndpoint.LoginUserWithToken,\n    body,\n    null, // an api key is NOT required to call this api endpoint\n  )\n  return results // accessToken and idToken\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { ApiEndpoint, AuthProvider, RequestType } from '../../models'\nimport {\n  assertHasApiKey,\n  assertParamsHaveAtLeastOneOfValues,\n  assertParamsHaveOnlyOneOfValues,\n  assertParamsHaveRequiredValues,\n} from '../helpers'\nimport { ApiResultWithErrorCode } from '../models'\n\nexport type ApiNewUserWithTokenParams = {\n  accessToken?: string\n  /** whether we should skip creation of blockchain accounts for a new user */\n  delayWalletSetup?: boolean\n  isTestUser?: boolean\n  idToken?: string\n  provider?: AuthProvider\n}\n\nexport type ApiNewUserWithTokenBodyParams = {\n  access_token?: string\n  /** whether we should skip creation of blockchain accounts for a new user */\n  delay_wallet_setup?: boolean\n  is_test_user?: boolean\n  id_token?: string\n  provider?: string\n}\n\n/** Call api account/new-user-with-token\n * Converts OAuth accesstoken or idToken from some 3rd-party source to OREID Oauth accessTokens\n * The third-party (e.g. Auth0 or Google) must be registered in the AppRegistration.oauthSettings\n * If a user does not curently exist that matches the info in the incoming idToken, a new OreID user and account is created\n * Requires ether:\n *  1) a valid idToken (needs no accessToken or apiKey in header)\n *  2) a 3rd-party accessToken (usually not a JWT) and provider param (e.g. 'google') - Requires api-key in header\n * Set isTestUser to true to create a test user - a test user can be deleted using user.deleteTestUser() - this is helpful for testing\n * Returns: OreId issued accessToken and user's account name (if new account created, this is a new account name)\n * */\nexport async function callApiNewUserWithToken(\n  oreIdContext: OreIdContext,\n  params: ApiNewUserWithTokenParams,\n): Promise<{ accessToken: string } & ApiResultWithErrorCode> {\n  const apiName = ApiEndpoint.NewUserWithToken\n  const { accessToken, delayWalletSetup, isTestUser, idToken, provider } = params\n\n  // This function does not require authentication of any kind - since it allows auth by using any accessToken or idToken\n  assertParamsHaveAtLeastOneOfValues(params, ['idToken', 'accessToken'], apiName)\n  assertParamsHaveOnlyOneOfValues(params, ['idToken', 'provider'], apiName) // if idToken, then no provider should be given\n  if (accessToken) {\n    assertParamsHaveRequiredValues(params, ['accessToken', 'provider'], apiName)\n    // if we have a 3rd party access token, we must include an api-key\n    assertHasApiKey(oreIdContext, null, 'new-user-with-token')\n  }\n\n  const body: ApiNewUserWithTokenBodyParams = {}\n\n  if (idToken) {\n    body.id_token = idToken\n  } else {\n    body.access_token = accessToken\n    body.provider = provider\n  }\n\n  if (isTestUser === true) body.is_test_user = true\n  if (delayWalletSetup === true) body.delay_wallet_setup = true\n\n  const results = await oreIdContext.callOreIdApi(\n    RequestType.Post,\n    ApiEndpoint.NewUserWithToken,\n    body,\n    null, // an api key is NOT required to call this api endpoint\n  )\n  return results // accessToken and idToken\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { ApiEndpoint, AuthProvider, RequestType } from '../../models'\nimport {\n  assertHasApiKeyOrAccessToken,\n  assertParamsHaveOnlyOneOfValues,\n  assertParamsHaveRequiredValues,\n} from '../helpers'\nimport { ApiMessageResult } from '../models'\n\nexport type ApiPasswordLessSendCodeParams = {\n  email?: string\n  phone?: string\n  provider: AuthProvider\n}\n\n/**\n *  Call api account/login-passwordless-send-code\n *  Returns { success: true } if verification code is sent to email/phone\n * */\nexport async function callApiPasswordLessSendCode(\n  oreIdContext: OreIdContext,\n  params: ApiPasswordLessSendCodeParams,\n): Promise<ApiMessageResult> {\n  const apiName = ApiEndpoint.PasswordLessSendCode\n\n  assertHasApiKeyOrAccessToken(oreIdContext, apiName)\n  assertParamsHaveRequiredValues(params, ['provider'], apiName)\n  assertParamsHaveOnlyOneOfValues(params, ['email', 'phone'], apiName)\n\n  const { email, phone, provider } = params\n\n  const queryParams: Partial<ApiPasswordLessSendCodeParams> = {\n    provider,\n  }\n\n  if (email) queryParams.email = encodeURIComponent(email)\n  if (phone) queryParams.phone = encodeURIComponent(phone) // if user passes in +12103334444, the plus sign needs to be URL encoded\n\n  const response = await oreIdContext.callOreIdApi(RequestType.Get, ApiEndpoint.PasswordLessSendCode, queryParams, null)\n  return response as ApiMessageResult\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { ApiEndpoint, AuthProvider, RequestType } from '../../models'\nimport {\n  assertHasApiKeyOrAccessToken,\n  assertParamsHaveOnlyOneOfValues,\n  assertParamsHaveRequiredValues,\n} from '../helpers'\nimport { ApiMessageResult } from '../models'\n\nexport type ApiPasswordLessVerifyCodeParams = {\n  code?: string\n  email?: string\n  phone?: string\n  provider: AuthProvider\n}\n\n/**\n *  Call api account/login-passwordless-verify-code\n *  Returns { success: true } if code is verified, throws if code/verification fails\n * */\nexport async function callApiPasswordLessVerifyCode(\n  oreIdContext: OreIdContext,\n  params: ApiPasswordLessVerifyCodeParams,\n): Promise<ApiMessageResult> {\n  const apiName = ApiEndpoint.PasswordLessVerifyCode\n\n  assertHasApiKeyOrAccessToken(oreIdContext, apiName)\n  assertParamsHaveRequiredValues(params, ['code', 'provider'], apiName)\n  assertParamsHaveOnlyOneOfValues(params, ['email', 'phone'], apiName)\n\n  const { code, email, phone, provider } = params\n\n  const queryParams: Partial<ApiPasswordLessVerifyCodeParams> = {\n    code,\n    provider,\n  }\n\n  if (email) queryParams.email = encodeURIComponent(email)\n  if (phone) queryParams.phone = encodeURIComponent(phone) // if user passes in +12103334444, the plus sign needs to be URL encoded\n\n  const response = await oreIdContext.callOreIdApi(\n    RequestType.Get,\n    ApiEndpoint.PasswordLessVerifyCode,\n    queryParams,\n    null,\n  )\n  return response as ApiMessageResult\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport {\n  AccountName,\n  ApiEndpoint,\n  ChainAccount,\n  ChainNetwork,\n  RequestType,\n  ApiKeyUsedFor,\n  TransactionData,\n} from '../../models'\nimport { ApiResultWithErrorCode } from '../models'\nimport {\n  assertHasApiKey,\n  assertHasApiKeyOrAccessToken,\n  assertParamsHaveOnlyOneOfValues,\n  assertParamsHaveRequiredValues,\n} from '../helpers'\nimport Helpers from '../../utils/helpers'\n\nexport type ApiSignTransactionParams = {\n  autoSign?: boolean\n  transactionData: TransactionData\n}\n\nexport type ApiSignTransactionBodyParams = {\n  account: AccountName\n  allow_chain_account_selection?: boolean\n  auto_sign?: boolean\n  broadcast?: boolean\n  chain_account: ChainAccount\n  chain_network: ChainNetwork\n  expire_seconds?: number\n  generate_auto_sign_credential?: boolean\n  multisig_chain_accounts?: string\n  // provider?: AuthProvider\n  return_signed_transaction?: boolean\n  signed_transaction?: string\n  transaction?: string\n  transaction_chain_acccount?: ChainAccount\n  transaction_record_id?: string\n  user_password?: string\n  user_password_encrypted?: string\n}\n\nexport type ApiSignTransactionResult = {\n  signedTransaction?: string\n  transactionId?: string\n} & ApiResultWithErrorCode\n\n/** Compose the API body params for calling signTransaction */\nfunction composeSignBodyFromTransactionData(params: ApiSignTransactionParams): ApiSignTransactionBodyParams {\n  const {\n    account,\n    chainAccount,\n    chainNetwork,\n    expireSeconds,\n    signedTransaction: signedTransactionParam,\n    transaction: transactionParam,\n    transactionChainAccount,\n    transactionRecordId,\n  } = params.transactionData || {}\n\n  const {\n    allowChainAccountSelection,\n    broadcast,\n    generateAutoSignCredential,\n    multiSigChainAccounts,\n    returnSignedTransaction,\n    userPassword,\n    userPasswordEncrypted,\n  } = params.transactionData?.signOptions || {}\n\n  const { autoSign } = params\n\n  const body: ApiSignTransactionBodyParams = {\n    account,\n    broadcast,\n    chain_account: chainAccount,\n    chain_network: chainNetwork,\n  }\n\n  if (allowChainAccountSelection) body.allow_chain_account_selection = allowChainAccountSelection\n  if (autoSign) body.auto_sign = autoSign\n  if (expireSeconds) body.expire_seconds = expireSeconds\n  if (generateAutoSignCredential) body.generate_auto_sign_credential = generateAutoSignCredential\n  if (multiSigChainAccounts) body.multisig_chain_accounts = multiSigChainAccounts\n  // if (provider) body.provider = provider - no provider param for API call\n  if (returnSignedTransaction) body.return_signed_transaction = returnSignedTransaction\n  if (signedTransactionParam) body.signed_transaction = Helpers.base64Encode(signedTransactionParam)\n  // if (stateParam) body.state = Helpers.base64Encode(stateParam) - no state for an API call\n  if (transactionChainAccount) body.transaction_chain_acccount = transactionChainAccount\n  if (transactionParam) body.transaction = Helpers.base64Encode(transactionParam)\n  if (transactionRecordId) body.transaction_record_id = transactionRecordId\n  if (userPassword) body.user_password = userPassword // used for custodial sign\n  if (userPasswordEncrypted) body.user_password_encrypted = userPasswordEncrypted // used for custodial sign\n\n  return body\n}\n\n/** convert snake_case fields in response to camelCase */\nfunction mapSignResultFromApi(apiResult: any): ApiSignTransactionResult {\n  const { signed_transaction: signedTransaction, transaction_id: transactionId, ...rest } = apiResult\n  return {\n    signedTransaction,\n    transactionId,\n    ...rest,\n  }\n}\n\n/** Call api transaction/sign - to sign a transaction for a user\n * Can only sign a transaction if autoSign specified (and previously enabled by user)\n * OR if OreId is managing a private key it can sign with (e.g. most often an account in multiSigChainAccounts)\n * For autoSign param, requires an apiKey with the autoSign right\n * Returns: stringified signedTransaction (and transactionId if available)\n *          OR errorCode, errorDescription, message - if any issues\n * */\nexport async function callApiSignTransaction(\n  oreIdContext: OreIdContext,\n  params: ApiSignTransactionParams,\n): Promise<ApiSignTransactionResult> {\n  const apiName = ApiEndpoint.TransactionSign\n\n  if (params?.autoSign) {\n    assertHasApiKey(oreIdContext, ApiKeyUsedFor.AutoSigning, apiName)\n  } else {\n    assertHasApiKeyOrAccessToken(oreIdContext, apiName)\n  }\n  assertParamsHaveRequiredValues(params.transactionData, ['account', 'chainNetwork', 'chainAccount'], apiName)\n  assertParamsHaveOnlyOneOfValues(params.transactionData, ['transaction', 'signedTransaction'], apiName)\n\n  const body = composeSignBodyFromTransactionData(params)\n\n  const results = await oreIdContext.callOreIdApi(RequestType.Post, ApiEndpoint.TransactionSign, body, null)\n  return mapSignResultFromApi(results)\n}\n\n/** Call api custodial/sign - for signing a transaction on behalf of a user\n * Requires wallet password: either user_password or user_password_encrypted param (used to decrypt user's key)\n * Requires an apiKey with the proxySign right\n * Returns: stringified signedTransaction (and transactionId if available)\n *          OR errorCode, errorDescription, message - if any issues\n * */\nexport async function callApiCustodialSignTransaction(\n  oreIdContext: OreIdContext,\n  params: ApiSignTransactionParams,\n): Promise<ApiSignTransactionResult> {\n  const apiName = ApiEndpoint.CustodialSign\n  const { signOptions } = params.transactionData || {}\n\n  assertHasApiKey(oreIdContext, ApiKeyUsedFor.ProxySigning, apiName)\n  assertParamsHaveRequiredValues(params.transactionData, ['account', 'chainNetwork', 'chainAccount'], apiName)\n  assertParamsHaveOnlyOneOfValues(params.transactionData, ['transaction', 'signedTransaction'], apiName)\n  assertParamsHaveOnlyOneOfValues(signOptions, ['userPassword', 'userPasswordEncrypted'], apiName)\n\n  const body = composeSignBodyFromTransactionData(params)\n\n  const results = await oreIdContext.callOreIdApi(RequestType.Post, ApiEndpoint.CustodialSign, body, null)\n  return mapSignResultFromApi(results)\n}\n", "import {\n  AppAccessTokenMetadata,\n  GetOreIdAuthUrlParams,\n  GetOreIdNewChainAccountUrlParams,\n  GetOreIdRecoverAccountUrlParams,\n  GetRecoverAccountUrlResult,\n  TransactionData,\n} from '../models'\nimport Helpers from '../utils/helpers'\nimport OreIdContext from './IOreidContext'\n\nconst { isNullOrEmpty } = Helpers\n\n/** Returns a fully formed url to create a new chain account within a user's wallet account\n *  This function calls the /new-account web endpoint\n *  It requires an apiKey in order to add an appAccessToken with new account metadata\n *  Returns: Callback returns chainAccount - for the new account */\nexport async function getOreIdNewChainAccountUrl(oreIdContext: OreIdContext, args: GetOreIdNewChainAccountUrlParams) {\n  const { account, accountType, chainNetwork, accountOptions, provider, callbackUrl, backgroundColor, state } = args\n  const { oreIdUrl } = oreIdContext.options\n\n  // collect additional params embedded into appAccessToken\n  const appAccessTokenMetadata: AppAccessTokenMetadata = {\n    paramsNewAccount: {\n      account,\n      accountType,\n      chainNetwork,\n      accountOptions,\n    },\n  }\n\n  if (!account || !accountType || !chainNetwork || !provider || !callbackUrl) {\n    throw new Error('Missing a required parameter')\n  }\n\n  const accessTokenParam = `&oauth_access_token=${oreIdContext.accessToken}`\n\n  // optional params\n  const encodedStateParam = state ? `&state=${state}` : ''\n\n  const url =\n    `${oreIdUrl}/new-account#provider=${provider}&chain_network=${chainNetwork}` +\n    `&callback_url=${encodeURIComponent(callbackUrl)}&background_color=${encodeURIComponent(\n      backgroundColor,\n    )}${encodedStateParam}${accessTokenParam}`\n  return oreIdContext.addAccessTokenAndHmacToUrl(url, appAccessTokenMetadata)\n}\n\n/** Returns a fully formed url to login a user\n *  This function calls the /auth web endpoint\n *  Returns: Callback returns account, and optionally accessToken and/or idToken for user */\nexport async function getOreIdAuthUrl(oreIdContext: OreIdContext, args: GetOreIdAuthUrlParams) {\n  const {\n    code,\n    email,\n    phone,\n    provider,\n    callbackUrl,\n    backgroundColor,\n    state,\n    linkToAccount,\n    returnAccessToken,\n    returnIdToken,\n  } = args\n  const { oreIdUrl } = oreIdContext.options\n\n  if (!provider || !callbackUrl) {\n    throw new Error('Missing a required parameter')\n  }\n\n  // optional params\n  const encodedStateParam = state ? `&state=${state}` : ''\n  const linkToAccountParam = linkToAccount ? `&link_to_account=${linkToAccount}` : ''\n\n  // handle passwordless params\n  const codeParam = code ? `&code=${code}` : ''\n  const emailParam = email ? `&email=${encodeURIComponent(email)}` : ''\n  const phoneParam = phone ? `&phone=${encodeURIComponent(phone)}` : '' // if user passes in +12103334444, the plus sign needs to be URL encoded\n\n  const returnAccessTokenParam = returnAccessToken ? `&return_access_token=${returnAccessToken}` : ''\n  const returnIdTokenParam = returnIdToken ? `&return_id_token=${returnIdToken}` : ''\n\n  const url =\n    `${oreIdUrl}/auth#provider=${provider}` +\n    `${codeParam}${emailParam}${phoneParam}` +\n    `&callback_url=${encodeURIComponent(callbackUrl)}&background_color=${encodeURIComponent(\n      backgroundColor,\n    )}${linkToAccountParam}${encodedStateParam}${returnAccessTokenParam}${returnIdTokenParam}`\n\n  return oreIdContext.addAccessTokenAndHmacToUrl(url, null)\n}\n\n/** Returns a fully formed url to login a user\n *  This function calls the /sign web endpoint\n *  Returns: Callback returns transactionId (if available), and optionally signedTransaction */\nexport async function getOreIdSignUrl(oreIdContext: OreIdContext, transactionData: TransactionData) {\n  const { account, chainNetwork, expireSeconds, signedTransaction, transaction, transactionRecordId } = transactionData\n  const {\n    allowChainAccountSelection,\n    broadcast,\n    callbackUrl,\n    multiSigChainAccounts,\n    provider,\n    returnSignedTransaction,\n    state,\n    // userPassword,\n  } = transactionData?.signOptions || {}\n  let { chainAccount } = transactionData\n  const { oreIdUrl } = oreIdContext.options\n  // Now always appends accessToken to signUrl\n  if (!account || !callbackUrl || (!transaction && !signedTransaction)) {\n    throw new Error('Missing a required parameter')\n  }\n\n  // default chainAccount is the same as the user's account\n  if (!chainAccount) {\n    chainAccount = account\n  }\n\n  const encodedTransaction = Helpers.base64Encode(transaction)\n  const encodedSignedTransaction = Helpers.base64Encode(signedTransaction)\n  let optionalParams = state ? `&state=${state}` : ''\n  optionalParams += !isNullOrEmpty(transaction) ? `&transaction=${encodedTransaction}` : ''\n  optionalParams += !isNullOrEmpty(signedTransaction) ? `&signed_transaction=${encodedSignedTransaction}` : ''\n  optionalParams += !isNullOrEmpty(allowChainAccountSelection)\n    ? `&allow_chain_account_selection=${allowChainAccountSelection}`\n    : ''\n  optionalParams += !isNullOrEmpty(expireSeconds) ? `&expire_seconds=${expireSeconds}` : ''\n  optionalParams += !isNullOrEmpty(multiSigChainAccounts) ? `&multisig_chain_accounts=${multiSigChainAccounts}` : ''\n  optionalParams += !isNullOrEmpty(provider) ? `&provider=${provider}` : ''\n  optionalParams += !isNullOrEmpty(returnSignedTransaction)\n    ? `&return_signed_transaction=${returnSignedTransaction}`\n    : ''\n  optionalParams += !isNullOrEmpty(transactionRecordId) ? `&transaction_record_id=${transactionRecordId}` : ''\n  optionalParams += `&oauth_access_token=${oreIdContext.accessToken}`\n\n  // prettier-ignore\n  const url = `${oreIdUrl}/sign#account=${account}&broadcast=${broadcast}&callback_url=${encodeURIComponent(callbackUrl)}&chain_account=${chainAccount}&chain_network=${encodeURIComponent(chainNetwork)}${optionalParams}`\n  return oreIdContext.addAccessTokenAndHmacToUrl(url, null)\n}\n\n/** Returns a fully formed url to recover a user's account (e.g. change password)\n *  This function calls the /recover-account web endpoint\n *  Returns: Callback returns account updated */\nexport async function getRecoverAccountUrl(\n  oreIdContext: OreIdContext,\n  args: GetOreIdRecoverAccountUrlParams,\n): Promise<GetRecoverAccountUrlResult> {\n  const {\n    account,\n    code,\n    email,\n    phone,\n    provider,\n    callbackUrl,\n    backgroundColor,\n    state,\n    recoverAction,\n    overrideAppAccessToken,\n  } = args\n  const { oreIdUrl } = oreIdContext.options\n\n  if (!provider || !callbackUrl) {\n    throw new Error('Missing a required parameter')\n  }\n\n  const accessTokenParam = `&oauth_access_token=${oreIdContext.accessToken}`\n\n  // optional params\n  const encodedStateParam = state ? `&state=${state}` : ''\n  const actionTypeParam = recoverAction ? `&recover_action=${recoverAction}` : ''\n\n  // handle passwordless params\n  const codeParam = code ? `&code=${code}` : ''\n  const emailParam = email ? `&email=${encodeURIComponent(email)}` : ''\n  const phoneParam = phone ? `&phone=${encodeURIComponent(phone)}` : '' // if user passes in +12103334444, the plus sign needs to be URL encoded\n\n  const url =\n    `${oreIdUrl}/recover-account#provider=${provider}` +\n    `&account=${account}` +\n    `${codeParam}${emailParam}${phoneParam}` +\n    `&callback_url=${encodeURIComponent(callbackUrl)}&background_color=${encodeURIComponent(\n      backgroundColor,\n    )}${actionTypeParam}${encodedStateParam}${accessTokenParam}`\n\n  return oreIdContext.addAccessTokenAndHmacToUrl(url, null, overrideAppAccessToken)\n}\n", "/* eslint-disable no-prototype-builtins */\n/* eslint-disable prefer-const */\n\nimport { encode } from '@msgpack/msgpack'\n\n// This funciton copied from algoSdk - https://github.com/algorand/js-algorand-sdk/blob/dcec38cc7926de7f54328ce28e76290ffea9fe41/src/encoding/encoding.js#L24\n/**\n * containsEmpty returns true if any of the object's values are empty, false otherwise.\n * Empty arrays considered empty\n * @param obj\n * @returns {{firstEmptyKey: string, containsEmpty: boolean}} {true, empty key} if contains empty, {false, undefined} otherwise\n */\nfunction containsEmpty(obj: any): { firstEmptyKey: string; containsEmpty: boolean } {\n  // eslint-disable-next-line no-restricted-syntax\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (!obj[key] || obj[key].length === 0) {\n        return { containsEmpty: true, firstEmptyKey: key }\n      }\n    }\n  }\n  return { containsEmpty: false, firstEmptyKey: undefined }\n}\n\n// This funciton copied from algoSdk - https://github.com/algorand/js-algorand-sdk/blob/dcec38cc7926de7f54328ce28e76290ffea9fe41/src/encoding/encoding.js#L41\n/**\n * encode encodes objects using msgpack\n * @param obj a dictionary to be encoded. Must not contain empty or 0 values.\n * @returns {Uint8Array} msgpack representation of the object\n * @throws Error containing ERROR_CONTAINS_EMPTY_STRING if the object contains empty or zero values\n */\nexport function msgPackEncode(obj: any) {\n  const ERROR_CONTAINS_EMPTY_STRING =\n    'The object contains empty or 0 values. First empty or 0 value encountered during encoding: '\n  // Check for empty values\n  const emptyCheck = containsEmpty(obj)\n  if (emptyCheck.containsEmpty) {\n    throw new Error(ERROR_CONTAINS_EMPTY_STRING + emptyCheck.firstEmptyKey)\n  }\n\n  // enable the canonical option\n  const options = { sortKeys: true }\n  return encode(obj, options)\n}\n", "import { ExternalWalletType, ChainPlatformType } from '../common/models'\nimport {\n  TransitDiscoveryData,\n  TransitDiscoverKeyLookupCallback,\n  TransitDiscoveryAccount,\n  TransitDiscoverContinueCallback,\n  TransitProviderAttributes,\n} from './models'\n\n/** Function used within transit provider to transform a wallet's public key to a full account strucutre */\nconst AlgorandDiscoveryKeyLookupFunc: TransitDiscoverKeyLookupCallback = (\n  discoveryData: TransitDiscoveryData,\n  callback: TransitDiscoverContinueCallback,\n) => {\n  const accountInfoArray: TransitDiscoveryAccount[] = discoveryData.keys.map(key => {\n    // note holds a stringified JSON object - composed by Algosigner Transit plugin\n    const account = JSON.parse(key.note)\n    return {\n      index: key.index,\n      key: key.key,\n      accounts: [\n        {\n          account: account?.accountName,\n          authorization: account?.permission,\n        },\n      ],\n    }\n  })\n  callback(accountInfoArray)\n}\n\n/** Pass-through function used within eos-transit host - if not provided, wallet will try to use EOS to transform keys */\nconst NonEosDiscoveryKeyLookupFunc: TransitDiscoverKeyLookupCallback = (\n  discoveryData: TransitDiscoveryData,\n  callback: TransitDiscoverContinueCallback,\n) => {\n  callback(discoveryData.keyToAccountMap)\n}\n\nexport const transitProviderAttributesData: TransitProviderAttributes[] = [\n  {\n    providerName: ExternalWalletType.AlgoSigner,\n    chainType: ChainPlatformType.algorand,\n    providerId: 'algosigner',\n    requiresLogin: false,\n    supportsDiscovery: true,\n    supportsSignArbitrary: false,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    discoveryKeyLookupFunc: AlgorandDiscoveryKeyLookupFunc,\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-algosigner-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Keycat,\n    chainType: ChainPlatformType.eos,\n    providerId: 'Keycat',\n    requiresLogin: true,\n    supportsDiscovery: false,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: true,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'Keycat requires logging in through the Keycat app.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-keycat-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Ledger,\n    chainType: ChainPlatformType.eos,\n    providerId: 'ledger',\n    requiresLogin: true,\n    supportsDiscovery: true,\n    supportsSignArbitrary: false,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: true,\n    defaultDiscoveryPathIndexList: [0, 1, 2],\n    helpText: {\n      login: 'This wallet doesn’t require you to login',\n      sign: 'Connect and unlock your Ledger with your PIN code. Launch the EOS app on the device.',\n      discover: 'Connect and unlock your Ledger with your PIN code. Launch the EOS app on the device.',\n      versionsRequired:\n        'You need to have recent versions of your browser, Ledger firmware, and the Ledger EOS app. Click here for more details.',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-ledger-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Lynx,\n    chainType: ChainPlatformType.eos,\n    providerId: 'EOS Lynx',\n    requiresLogin: true,\n    supportsDiscovery: false,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: true,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'EOS Lynx requires logging in through the EOS Lynx app.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-lynx-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Meetone,\n    chainType: ChainPlatformType.eos,\n    providerId: 'meetone_provider',\n    requiresLogin: false,\n    supportsDiscovery: false,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: true,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-meetone-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Metro,\n    chainType: ChainPlatformType.eos,\n    providerId: 'metro',\n    requiresLogin: false,\n    supportsDiscovery: false,\n    supportsSignArbitrary: false,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-generic-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Portis,\n    chainType: ChainPlatformType.eos,\n    providerId: 'PortisProvider',\n    requiresLogin: true,\n    supportsDiscovery: false,\n    supportsSignArbitrary: false,\n    requiresLogoutLoginToDiscover: true,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'Portis requires logging in through the Portis app.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-portis-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Scatter,\n    chainType: ChainPlatformType.eos,\n    providerId: 'scatter',\n    requiresLogin: true,\n    supportsDiscovery: false,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: true,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'Scatter requires logging in through the Scatter app.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-scatter-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.SimpleEos,\n    chainType: ChainPlatformType.eos,\n    providerId: 'simpleos',\n    requiresLogin: true,\n    supportsDiscovery: false,\n    supportsSignArbitrary: false,\n    requiresLogoutLoginToDiscover: true,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'Simpleos requires logging in through the Simpleos app.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-simpleos-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.TokenPocket,\n    chainType: ChainPlatformType.eos,\n    providerId: 'TokenPocket',\n    requiresLogin: true,\n    supportsDiscovery: false,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: true,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-generic-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.WalletConnect,\n    chainType: ChainPlatformType.ethereum,\n    providerId: 'walletconnect',\n    requiresLogin: false,\n    supportsDiscovery: true,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    discoveryKeyLookupFunc: NonEosDiscoveryKeyLookupFunc,\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-walletconnect-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Web3,\n    chainType: ChainPlatformType.ethereum,\n    providerId: 'web3',\n    requiresLogin: false,\n    supportsDiscovery: true,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    discoveryKeyLookupFunc: NonEosDiscoveryKeyLookupFunc,\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-web3-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.WhaleVault,\n    chainType: ChainPlatformType.eos,\n    providerId: 'whalevault',\n    requiresLogin: true,\n    supportsDiscovery: false,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: true,\n    requiresDiscoverToLogin: false,\n    helpText: {\n      login: 'Whalevault requires logging in through the Whalevault app.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-whalevault-logo.png',\n  },\n]\n\n/** Get provider-specific settings and metadata */\nexport function getTransitProviderAttributes(walletType: ExternalWalletType): TransitProviderAttributes {\n  return transitProviderAttributesData.find(tp => tp.providerName === walletType.toString())\n}\n\n/** Get provider-specific settings and metadata */\nexport function getTransitProviderAttributesByProviderId(providerId: string): TransitProviderAttributes {\n  return transitProviderAttributesData.find(tp => tp.providerId === providerId)\n}\n\n/** Get the list of provider attributes for a given chain */\nexport function getTransitProviderAttributesByChain(chain: ChainPlatformType): TransitProviderAttributes[] {\n  return transitProviderAttributesData.filter(p => p.chainType === chain)\n}\n\nexport const supportedTransitProviders: ExternalWalletType[] = transitProviderAttributesData.map(tp => tp.providerName)\n", "import { initAccessContext, MakeWalletProviderFn, Wallet } from '@aikon/eos-transit'\nimport { msgPackEncode } from '../utils/chainUtils'\nimport {\n  getTransitProviderAttributes,\n  getTransitProviderAttributesByProviderId,\n  supportedTransitProviders,\n} from './transitProviders'\nimport OreIdContext from '../core/IOreidContext'\nimport Helpers from '../utils/helpers'\nimport {\n  AccountName,\n  AuthProvider,\n  ChainAccount,\n  ChainNetwork,\n  ChainPlatformType,\n  ConnectToTransitProviderParams,\n  DiscoverOptions,\n  ExternalWalletInterface,\n  ExternalWalletType,\n  LoginWithWalletOptions,\n  PermissionName,\n  PublicKey,\n  SetupTransitWalletParams,\n  SignatureProviderArgs,\n  SignatureProviderSignResult,\n  SignStringParams,\n  TransactionData,\n  TransitAccountInfo,\n  TransitWallet,\n  WalletPermission,\n} from '../models'\nimport { TransitDiscoveryOptions, TransitWalletAccessContext } from '.'\nimport { User } from '../user/user'\n\ntype ConnectToTransitProviderResult = {\n  isLoggedIn?: boolean\n  chainAccount?: ChainAccount\n  permissions?: [{ name: PermissionName; publicKey: PublicKey }]\n  transitWallet?: TransitWallet\n  provider?: ExternalWalletType\n}\n\nexport default class TransitHelper {\n  constructor(args: { oreIdContext: OreIdContext; user: User }) {\n    this._oreIdContext = args.oreIdContext\n    this._user = args.user\n    this.transitAccessContexts = {}\n  }\n\n  _oreIdContext: OreIdContext\n\n  _user: User\n\n  transitAccessContexts: { [key: string]: TransitWalletAccessContext }\n\n  /** Verifies that all plugins provided work (can be constructed)\n   *  Stores a list of the installed providerNames (mapped to ExternalWalletType) for all working plugins in transitProvidersInstalled\n   */\n  async installTransitProviders(eosTransitWalletProviders: MakeWalletProviderFn[]) {\n    // Executes each provider's contructor to verify it's working\n    // stores all the providerName's for all plugins into transitProvidersInstalled array\n    this._oreIdContext.transitProvidersInstalled = (eosTransitWalletProviders || [])\n      .map(makeWalletProvider => {\n        try {\n          // if there is an error while initiating a provider dont break the whole process.\n          return makeWalletProvider(null)\n        } catch (e) {\n          console.log(`Couldn't initiate a wallet provider. ${e}`)\n          return null\n        }\n      }) // instantiate the provider with null network so we can get the id\n      .filter(walletProvider => walletProvider && true)\n      .map(walletProvider => {\n        return getTransitProviderAttributesByProviderId(walletProvider.id).providerName\n      })\n  }\n\n  /** Inialize EOS Transit wallet provider and return TransitWallet instance */\n  async setupTransitWallet({ walletType, chainNetwork }: SetupTransitWalletParams): Promise<TransitWallet> {\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Transit)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    const { providerId } = getTransitProviderAttributes(walletType)\n    const chainContext = await this.getOrCreateTransitAccessContext(chainNetwork)\n    const transitProvider = chainContext.getWalletProviders().find(wp => wp.id === providerId)\n    const transitWallet = chainContext.initWallet(transitProvider)\n    await transitWallet.connect()\n    await this.waitWhileWalletIsBusy(transitWallet, walletType)\n    return transitWallet\n  }\n\n  /** Creates an EOS Transit WalletContent for the specified network and plugins\n   *  Caches the context for future calls to this function */\n  private async getOrCreateTransitAccessContext(chainNetwork: ChainNetwork) {\n    const { appName, eosTransitWalletProviders = [] } = this._oreIdContext.options\n    if (this.transitAccessContexts[chainNetwork]) {\n      return this.transitAccessContexts[chainNetwork]\n    }\n    const networkConfig = await this._oreIdContext.settings.getChainNetworkNextworkConfig(chainNetwork)\n    const isNotEosNetwork = await this._oreIdContext.settings.isNotEosNetwork(chainNetwork)\n    const walletContext = initAccessContext({\n      appName: appName || 'missing appName',\n      network: networkConfig,\n      walletProviders: eosTransitWalletProviders,\n      isNotEosNetwork, // Tells eos-transit to not use EOS specific rpc calls\n    })\n    // cache for future use\n    this.transitAccessContexts[chainNetwork] = walletContext\n    return walletContext\n  }\n\n  // For Scatter: chainAccount is needed since login will try to use the default account (in scatter\n  // and it wil fail to sign the transaction\n  /** Handles the call to connect() function on the Transit provider */\n  async connectToTransitProvider({\n    walletType,\n    chainNetwork,\n    chainAccount = null,\n  }: ConnectToTransitProviderParams): Promise<ConnectToTransitProviderResult> {\n    let response: ConnectToTransitProviderResult\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Transit)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    try {\n      const transitWallet: TransitWallet = await this.setupTransitWallet({ walletType, chainNetwork })\n      response = { transitWallet }\n      // some providers require login flow to connect (usually this means connect() does nothing but login selects an account)\n      if (getTransitProviderAttributes(walletType).requiresLogin) {\n        // if connected, but not authenticated, then login\n        if (!transitWallet.authenticated) {\n          await this.loginToTransitProvider(transitWallet, walletType, chainNetwork, chainAccount)\n        }\n      }\n\n      // If connecting also performs login\n      // return login results or throw error\n      if (transitWallet.connected) {\n        // if wallet has an account (by logging in), add it to OREID account add account info to response\n        if (transitWallet.authenticated && transitWallet.auth) {\n          await this.updateOreAccountPermissionsfromTransitWalletAuth(transitWallet, walletType)\n          const { accountName, permission, publicKey } = transitWallet.auth\n          response = {\n            isLoggedIn: true,\n            chainAccount: accountName,\n            permissions: [{ name: permission, publicKey }], // todo: add parent permission when available\n            transitWallet,\n            provider: walletType,\n          }\n        }\n      } else {\n        let errorString = `${walletType} not connected!`\n        const { hasError, errorMessage } = transitWallet\n        if (hasError) {\n          errorString += ` Error: ${errorMessage}`\n        }\n        throw new Error(errorString)\n      }\n    } catch (error) {\n      const errMsg = `Failed to connect to ${walletType} on ${chainNetwork}. ${error?.message || ''}`\n      console.log(`connectToTransitProvider:${errMsg}`, error)\n      throw new Error(errMsg)\n    } finally {\n      this._oreIdContext.setIsBusy(false)\n    }\n\n    return response\n  }\n\n  /** Handles the call to login() function on the Transit provider\n   *  If required by provider, calls discover() and/or logout() before calling login()\n   *  IMPORTANT: use loginToTransitProvider() instead of this function */\n  private async doTransitProviderLogin(\n    transitWallet: TransitWallet,\n    chainAccount: ChainAccount,\n    chainNetwork: ChainNetwork,\n    walletType: ExternalWalletType,\n    retryCount = 0,\n  ) {\n    let info: TransitAccountInfo\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Transit)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    // we should store the index for ledger in the db and pass it along\n    // but for now we need to discover the ledger index\n    const { requiresDiscoverToLogin } = getTransitProviderAttributes(walletType)\n    if (requiresDiscoverToLogin) {\n      // we have to discover on ledger since we don't know the index of the account\n      //\n      const discoveryData = await transitWallet.discover(this.discoverOptionsForProvider(walletType))\n      const foundData = this.findAccountInDiscoverData(discoveryData, chainAccount)\n      if (foundData) {\n        info = await transitWallet.login(chainAccount, foundData.authorization)\n      } else {\n        throw new Error(`Account ${chainAccount} not found in wallet`)\n      }\n    } else {\n      info = await transitWallet.login(chainAccount)\n    }\n\n    if (retryCount > 2) {\n      // don't get stuck in a loop, let the transaction fail so the user will figure it out\n      return null\n    }\n\n    const { accountName: transitAccountName } = transitWallet?.auth || {}\n\n    if (chainAccount && transitAccountName !== chainAccount) {\n      // keep trying until the user logs in with the correct wallet\n      // in scatter, it will ask you to choose an account if you logout and log back in\n      // we could also call discover and login to the matching account and that would avoid a step\n      await transitWallet.logout()\n      this.doTransitProviderLogin(transitWallet, chainAccount, chainNetwork, walletType, retryCount + 1)\n    }\n    return info\n  }\n\n  /** Login using the wallet provider */\n  async loginWithTransitProvider(loginOptions: LoginWithWalletOptions) {\n    const { walletType: provider, chainAccount, chainNetwork } = loginOptions\n    // Connect to Provider\n    const walletType = Helpers.mapAuthProviderToWalletType(provider)\n    const response = await this.connectToTransitProvider({ walletType, chainAccount, chainNetwork })\n    const wallet = response?.transitWallet\n    // Login if needed - if not logged-in by connectToTransitProvider, then call login explicitly\n    if (!wallet?.auth) {\n      await this.loginToTransitProvider(wallet, provider, chainNetwork, chainAccount)\n      await this.updateOreAccountPermissionsfromTransitWalletAuth(wallet, provider)\n    }\n    return response\n  }\n\n  /** Handles the call to login() function on the Transit provider */\n  private async loginToTransitProvider(\n    transitWallet: TransitWallet,\n    walletType: ExternalWalletType,\n    chainNetwork: ChainNetwork,\n    chainAccount: ChainAccount = null,\n  ) {\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Transit)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    try {\n      // if the default login is for a different account\n      await this.doTransitProviderLogin(transitWallet, chainAccount, chainNetwork, walletType)\n    } catch (error) {\n      const { message = '' } = error\n      if (message.includes('unknown key (boost::tuples::tuple')) {\n        throw new Error(`The account selected by the wallet for login isn't on the ${chainNetwork} chain`)\n      } else {\n        throw error\n      }\n    } finally {\n      await this.waitWhileWalletIsBusy(transitWallet, walletType)\n    }\n  }\n\n  /** Throw if the required plug-in is not installed */\n  assertHasProviderInstalled(provider: ExternalWalletType, providerType: ExternalWalletInterface) {\n    if (providerType === ExternalWalletInterface.Transit) {\n      if (!this.hasTransitProvider(provider)) {\n        throw Error(`Transit provider:\"${provider}\" not installed. Please pass it in via eosTransitWalletProviders.`)\n      }\n    }\n  }\n\n  /** Discovers keys in a wallet provider.\n   *  Any new keys discovered in wallet are added to user's ORE ID record.\n   *  If the provider doesnt support a discover() function, and requiresLogoutLoginToDiscover == true, attempts a logout then login instead.\n   */\n  async discoverWithTransit(discoverOptions: DiscoverOptions) {\n    const { walletType, chainNetwork = ChainNetwork.EosMain, oreAccount, discoveryPathIndexList } = discoverOptions\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    let result = null\n    if (this.canDiscover(walletType)) {\n      result = await this.discoverCredentialsInTransitWallet(\n        chainNetwork,\n        walletType,\n        oreAccount,\n        discoveryPathIndexList,\n      )\n    } else {\n      // if provider doesn't support a discover function, we can use login to retrieve a single account/key instead\n      const transitWallet = await this.setupTransitWallet({ walletType, chainNetwork })\n      if (this.requiresLogoutLoginToDiscover(walletType)) {\n        await transitWallet.logout()\n        await transitWallet.login()\n        this.updateOreAccountPermissionsfromTransitWalletAuth(transitWallet, walletType)\n      } else {\n        console.log('Discover not working for walletType: ', walletType)\n      }\n    }\n\n    return result\n  }\n\n  /** Discover all accounts (and related permissions) in the wallet and add them to ORE ID\n   * Note: Most wallets don't support discovery */\n  private async discoverCredentialsInTransitWallet(\n    chainNetwork: ChainNetwork,\n    walletType: ExternalWalletType,\n    oreAccount: AccountName,\n    discoveryPathIndexList: number[],\n  ) {\n    let accountsAndPermissions: WalletPermission[] = []\n\n    try {\n      const transitWallet = await this.setupTransitWallet({ walletType, chainNetwork })\n      this._oreIdContext.setIsBusy(true)\n      const discoveryData = await transitWallet.discover(\n        this.discoverOptionsForProvider(walletType, discoveryPathIndexList),\n      )\n      // this data looks like this: keyToAccountMap[accounts[{account,permission}]] - e.g. keyToAccountMap[accounts[{'myaccount':'owner','myaccount':'active'}]]\n      const credentials = discoveryData.keyToAccountMap\n      // for each entry in the array, add permission to ore account if not already present\n      await Helpers.asyncForEach(credentials, async credential => {\n        const { accounts = [], key: publicKey } = credential\n        // ethereum may not have a public key - dont save if missing\n        if (accounts.length > 0 && !!publicKey) {\n          const [{ account, authorization }] = accounts // get first item in array\n          const permissions: WalletPermission[] = [\n            {\n              account,\n              publicKey,\n              name: authorization,\n              parent: null,\n            },\n          ]\n          // Get the chainNetwork from the transitWallet - in case the wallet provider switches networks somehow\n          const transitChainNetwork = await this.getChainNetworkFromTransitWallet(transitWallet)\n          await this._user?.addWalletPermissionsToOreIdAccount({\n            chainAccount: account,\n            chainNetwork: transitChainNetwork,\n            permissions,\n            walletType,\n          })\n          accountsAndPermissions = accountsAndPermissions.concat(permissions)\n        }\n      })\n    } finally {\n      this._oreIdContext.setIsBusy(false)\n    }\n    // return a list of account names and related permissions found\n    return accountsAndPermissions\n  }\n\n  /** Discover options composed for specific provider */\n  private discoverOptionsForProvider(\n    provider: ExternalWalletType,\n    pathIndexListParam: number[] = null,\n  ): TransitDiscoveryOptions {\n    let pathIndexList\n    let keyLookupFunc\n    const walletProviderType = Helpers.mapAuthProviderToWalletType(provider)\n    if (this.hasTransitProvider(walletProviderType)) {\n      const walletProvider = Helpers.mapAuthProviderToWalletType(provider)\n      const { defaultDiscoveryPathIndexList, discoveryKeyLookupFunc } = getTransitProviderAttributes(walletProvider)\n      pathIndexList = pathIndexListParam || defaultDiscoveryPathIndexList || []\n      keyLookupFunc = discoveryKeyLookupFunc // optional\n    }\n\n    const response: TransitDiscoveryOptions = { pathIndexList }\n    if (keyLookupFunc) {\n      response.keyLookupFunc = keyLookupFunc\n    }\n\n    return response\n  }\n\n  private findAccountInDiscoverData(discoveryData: any, chainAccount: ChainAccount) {\n    const result = discoveryData.keyToAccountMap.find((data: any) => {\n      return data.accounts.find((acct: any) => {\n        return acct.account === chainAccount\n      })\n    })\n\n    if (result) {\n      let authorization = 'active'\n\n      // could active not exist?  If not, then just get first permission\n      // this may be completely unecessary. remove if so.\n      const active = result.accounts.find((acct: any) => {\n        return acct.authorization === 'active'\n      })\n\n      if (!active) {\n        const [first] = result.accounts\n\n        if (first) {\n          // eslint-disable-next-line prefer-destructuring\n          authorization = first.authorization\n        }\n      }\n\n      return { index: result.index, key: result.key, authorization }\n    }\n\n    return null\n  }\n\n  /** sign with a Transit wallet */\n  async signWithTransitProvider(transactionData: TransactionData, walletType: ExternalWalletType) {\n    let signedTransaction: SignatureProviderSignResult\n    const { chainNetwork, chainAccount } = transactionData\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Transit)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    // connect to wallet\n    const { transitWallet } = await this.connectToTransitProvider({\n      walletType,\n      chainNetwork,\n      chainAccount,\n    })\n\n    try {\n      // sign with transit wallet\n      this._oreIdContext.setIsBusy(true)\n      const { chainType } = getTransitProviderAttributes(walletType)\n      // EOS - use eosJS to sign (eosApi.transact)\n      if (chainType === ChainPlatformType.eos) {\n        signedTransaction = await this.signTransactionWithTransitAndEosSDK(transactionData, transitWallet)\n      } else if (chainType === ChainPlatformType.algorand) {\n        // Other chains - use sign function on walletProvider\n        signedTransaction = await this.signTransactionWithTransitAndAlgorandSDK(transactionData, transitWallet)\n      } else if (chainType === ChainPlatformType.ethereum) {\n        // Ethereum - use sign function on ethereum walletProvider\n        signedTransaction = await this.signTransactionWithTransitAndEthereumSDK(transactionData, transitWallet)\n      } else {\n        throw new Error(`signWithTransitProvider doesnt support chain type: ${chainType}`)\n      }\n    } catch (error) {\n      console.error(error)\n      throw error\n    } finally {\n      this._oreIdContext.setIsBusy(false)\n    }\n    // Convert serializedTransaction from UInt8Array to Buffer\n    // i.e. when stringified change from: '{\\\"0\\\":129,\\\"1\\\":163'} to {\"type\":\"Buffer\",\"data\":[129,163]}\n    if (signedTransaction.serializedTransaction) {\n      signedTransaction.serializedTransaction = Buffer.from(signedTransaction.serializedTransaction)\n    }\n    return { signedTransaction }\n  }\n\n  async signStringWithTransitProvider({ walletType, chainNetwork, string, message, metadata }: SignStringParams) {\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Transit)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    const { transitWallet } = await this.connectToTransitProvider({ walletType, chainNetwork })\n    try {\n      this._oreIdContext.setIsBusy(true)\n      const response = await transitWallet.signArbitrary(string, message, metadata)\n      return { signedString: response }\n    } catch (error) {\n      console.error(error)\n      throw error\n    } finally {\n      this._oreIdContext.setIsBusy(false)\n    }\n  }\n\n  /** sign transaction using EOS SDK .transact function */\n  private async signTransactionWithTransitAndEosSDK(\n    transactionData: TransactionData,\n    transitWallet: Wallet,\n  ): Promise<SignatureProviderSignResult> {\n    const { expireSeconds, transaction } = transactionData\n    const { broadcast } = transactionData?.signOptions || {}\n    const { signatures, serializedTransaction } = await transitWallet.eosApi.transact(\n      {\n        actions: [transaction],\n      },\n      {\n        broadcast,\n        blocksBehind: 3,\n        expireSeconds: expireSeconds || 60,\n      },\n    )\n    await this.callDiscoverAfterSign(transactionData)\n    return { signatures, serializedTransaction }\n  }\n\n  /** sign transaction using Algorand SDK */\n  private async signTransactionWithTransitAndAlgorandSDK(\n    transactionData: TransactionData,\n    transitWallet: Wallet,\n  ): Promise<SignatureProviderSignResult> {\n    const { chainNetwork, transaction } = transactionData\n    // Other chains - use sign function on walletProvider\n    const networkConfig = await this._oreIdContext.settings.getChainNetworkNextworkConfig(chainNetwork)\n    const signParams: SignatureProviderArgs = {\n      chainId: networkConfig.chainId, // Chain transaction is for\n      requiredKeys: null, // not used by Algorand signatureProvider\n      serializedTransaction: msgPackEncode(transaction), // Transaction to sign\n      abis: null, // not used by Algorand signatureProvider\n    }\n    const { signatures, serializedTransaction } = await transitWallet.provider.signatureProvider.sign(signParams)\n    await this.callDiscoverAfterSign(transactionData)\n    return { signatures, serializedTransaction }\n  }\n\n  /** sign transaction using ethereum web3 SDK */\n  private async signTransactionWithTransitAndEthereumSDK(\n    transactionData: TransactionData,\n    transitWallet: Wallet,\n  ): Promise<SignatureProviderSignResult> {\n    const { chainNetwork, transaction } = transactionData\n    // Other chains - use sign function on walletProvider\n    const networkConfig = await this._oreIdContext.settings.getChainNetworkNextworkConfig(chainNetwork)\n    const signParams: SignatureProviderArgs = {\n      chainId: networkConfig.chainId, // Chain transaction is for\n      requiredKeys: null, // not used by Ethereum signatureProvider\n      serializedTransaction: msgPackEncode(transaction), // Transaction to sign\n      abis: null, // not used by Ethereum signatureProvider\n    }\n    const { signatures, serializedTransaction } = await transitWallet.provider.signatureProvider.sign(signParams)\n    await this.callDiscoverAfterSign(transactionData)\n    return { signatures, serializedTransaction }\n  }\n\n  /** Determine the chainNetwork from the transitWallet context */\n  async getChainNetworkFromTransitWallet(transitWallet: TransitWallet) {\n    const { chainId } = transitWallet?.ctx?.network || {}\n    if (!chainId) {\n      return null\n    }\n    const networks = await this._oreIdContext.settings.getAllChainNetworkSettings()\n    return networks.find(net => net.hosts.find(host => host.chainId === chainId))?.network\n  }\n\n  /** Add the account selected in the transitWallet to the ORE account's list of account/permissions */\n  async updateOreAccountPermissionsfromTransitWalletAuth(transitWallet: TransitWallet, walletType: ExternalWalletType) {\n    if (!transitWallet?.connected || !transitWallet?.auth) {\n      return\n    }\n    const { accountName, permission, publicKey } = transitWallet.auth\n    // abort silently if account is missing some info - some chains/wallets (e.g. ethereum) dont provide the public key, so we can't add the perm here\n    if (!accountName || !permission || !publicKey) {\n      return\n    }\n    const permissions: WalletPermission[] = [{ name: permission, publicKey }] // todo: add parent permission when available\n    // Get the chainNetwork from the transitWallet - in case the wallet provider switches networks somehow\n    const transitChainNetwork = await this.getChainNetworkFromTransitWallet(transitWallet)\n    if (transitChainNetwork) {\n      await this._user?.updatePermissionsIfNecessary({\n        chainAccount: accountName,\n        chainNetwork: transitChainNetwork,\n        permissions,\n        walletType,\n      })\n    }\n  }\n\n  isTransitProvider(provider: AuthProvider | ExternalWalletType) {\n    const walletProviderType = Helpers.mapAuthProviderToWalletType(provider)\n    if (!walletProviderType) return false\n    return supportedTransitProviders.includes(walletProviderType)\n  }\n\n  /** Whether this Eos Transit provider was installed upon instantiation */\n  hasTransitProvider(walletType: ExternalWalletType): boolean {\n    return this._oreIdContext.transitProvidersInstalled.includes(walletType)\n  }\n\n  /** Throw if the provider doesnt support the specified chainNetwork */\n  async assertProviderValidForChainNetwork(walletType: ExternalWalletType, chainNetwork: ChainNetwork) {\n    const { chainType } = getTransitProviderAttributes(walletType)\n    const networks = await this._oreIdContext.settings.getAllChainNetworkSettings()\n    const isValid = !!networks.find(n => n.network === chainNetwork && n.type === chainType)\n    if (!isValid) {\n      throw Error(\n        `External Wallet Type: ${walletType} doesnt support chainNetwork ${chainNetwork}. Hint: It supports networks of type ${chainType}.`,\n      )\n    }\n  }\n\n  private async waitWhileWalletIsBusy(transitWallet: TransitWallet, walletType: ExternalWalletType) {\n    while (transitWallet.inProgress) {\n      this._oreIdContext.setIsBusy(true)\n      // todo: add timeout\n      // eslint-disable-next-line no-await-in-loop\n      await Helpers.sleep(250)\n      // this is here to help a developer debug - dont remove this - if a wallet is not open to connect to, it will hang here\n      console.log(`connecting to ${walletType} via eos-transit wallet in progress:`, transitWallet.inProgress)\n    }\n    this._oreIdContext.setIsBusy(false)\n  }\n\n  /** Discovers keys in a wallet provider.\n   *  Any new keys discovered in wallet are added to user's ORE ID record.\n   *  If the provider doesnt support a discover() function, and requiresLogoutLoginToDiscover == true, attempts a logout then login instead.\n   */\n  async discover(discoverOptions: DiscoverOptions) {\n    return this.discoverWithTransit(discoverOptions)\n  }\n\n  /** Call discover after signing so we capture and save the account\n   *  Note: This is needed for Ethereum since we dont know a public key until we sign with an account\n   */\n  async callDiscoverAfterSign(transactionData: TransactionData) {\n    const { chainNetwork, account } = transactionData\n    const { provider } = transactionData?.signOptions || {}\n    const walletProvider = Helpers.mapAuthProviderToWalletType(provider)\n    const discoverOptions: DiscoverOptions = {\n      walletType: walletProvider,\n      chainNetwork,\n      oreAccount: account,\n    }\n    await this.discover(discoverOptions)\n  }\n\n  // Supported features by provider\n\n  /** whether discovery is supported by the provider */\n  canDiscover(walletType: ExternalWalletType) {\n    if (this.hasTransitProvider(walletType)) {\n      return getTransitProviderAttributes(walletType).supportsDiscovery\n    }\n    return false\n  }\n\n  /** whether signString is supported by the provider */\n  canSignString(walletType: ExternalWalletType) {\n    if (this.hasTransitProvider(walletType)) {\n      return getTransitProviderAttributes(walletType).supportsSignArbitrary\n    }\n    return false\n  }\n\n  /** whether call to discover is required by provider before login */\n  requiresDiscoverToLogin(walletType: ExternalWalletType) {\n    if (this.hasTransitProvider(walletType)) {\n      return getTransitProviderAttributes(walletType).requiresDiscoverToLogin\n    }\n    return false\n  }\n\n  /** whether call to logout then login is required by provider before discover */\n  requiresLogoutLoginToDiscover(walletType: ExternalWalletType) {\n    if (this.hasTransitProvider(walletType)) {\n      return getTransitProviderAttributes(walletType).requiresLogoutLoginToDiscover\n    }\n    return false\n  }\n\n  /** default path index for provider (if any) */\n  defaultDiscoveryPathIndexList(walletType: ExternalWalletType): number[] {\n    if (this.hasTransitProvider(walletType)) {\n      return getTransitProviderAttributes(walletType)?.defaultDiscoveryPathIndexList\n    }\n    return null\n  }\n\n  /** help text displayed to user for provider */\n  helpTextForProvider(walletType: ExternalWalletType) {\n    if (this.hasTransitProvider(walletType)) {\n      return getTransitProviderAttributes(walletType).helpText\n    }\n\n    return null\n  }\n}\n", "import { ExternalWalletType, ChainPlatformType } from '../common/models'\nimport { UalProviderAttributes } from '../ual/models'\n\nexport const ualProviderAttributesData: UalProviderAttributes[] = [\n  {\n    providerName: ExternalWalletType.Anchor,\n    providerId: 'Anchor',\n    chainType: ChainPlatformType.eos,\n    requiresLogin: true,\n    supportsSignArbitrary: false,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    supportsDiscovery: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-generic-logo.png', // TODO: Add actual logo\n  },\n  {\n    providerName: ExternalWalletType.Ledger,\n    providerId: 'Ledger',\n    chainType: ChainPlatformType.eos,\n    requiresLogin: true,\n    supportsSignArbitrary: false,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    supportsDiscovery: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login',\n      sign: 'Connect and unlock your Ledger with your PIN code. Launch the EOS app on the device.',\n      discover: 'Connect and unlock your Ledger with your PIN code. Launch the EOS app on the device.',\n      versionsRequired:\n        'You need to have recent versions of your browser, Ledger firmware, and the Ledger EOS app. Click here for more details.',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-ledger-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Lynx,\n    providerId: 'Lynx',\n    chainType: ChainPlatformType.eos,\n    requiresLogin: false,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    supportsDiscovery: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-lynx-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Scatter,\n    providerId: 'Scatter',\n    chainType: ChainPlatformType.eos,\n    requiresLogin: true,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    supportsDiscovery: false,\n    helpText: {\n      login: 'Scatter requires logging in through the Scatter app.',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-scatter-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.TokenPocket,\n    providerId: 'Token Pocket',\n    chainType: ChainPlatformType.eos,\n    requiresLogin: false,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    supportsDiscovery: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-generic-logo.png',\n  },\n  {\n    providerName: ExternalWalletType.Wombat,\n    providerId: 'Wombat',\n    chainType: ChainPlatformType.eos,\n    requiresLogin: true,\n    supportsSignArbitrary: true,\n    requiresLogoutLoginToDiscover: false,\n    requiresDiscoverToLogin: false,\n    supportsDiscovery: false,\n    helpText: {\n      login: 'This wallet doesn’t require you to login',\n      sign: '',\n      discover: '',\n      versionsRequired: '',\n    },\n    logoUrl: 'https://storage.googleapis.com/oreid-files/partners/wallet-wombat-logo.png', // TODO: Add actual logo\n  },\n]\n\n/** Get provider-specific settings and metadata */\nexport function getUalProviderAttributes(walletType: ExternalWalletType): UalProviderAttributes {\n  return ualProviderAttributesData.find(up => up.providerName === walletType.toString().toLowerCase())\n}\n\n/** Get provider-specific settings and metadata by the UAL provider name */\nexport function getUalProviderAttributesByUalName(walletType: string): UalProviderAttributes {\n  return ualProviderAttributesData.find(up => up.providerName === walletType.toLowerCase())\n}\n\nexport const supportedUALProviders: ExternalWalletType[] = ualProviderAttributesData.map(tp => tp.providerName)\n", "import { getUalProviderAttributes, getUalProviderAttributesByUalName, supportedUALProviders } from './ualProviders'\nimport OreIdContext from '../core/IOreidContext'\nimport Helpers from '../utils/helpers'\nimport {\n  ChainAccount,\n  ChainNetwork,\n  ExternalWalletInterface,\n  ExternalWalletType,\n  LoginWithWalletOptions,\n  SignatureProviderSignResult,\n  SignStringParams,\n  TransactionData,\n} from '../models'\nimport { User } from '../user/user'\nimport {\n  ConnectToUalProviderParams,\n  ConnectToUalProviderResult,\n  UalAuthenticator,\n  UalAuthenticatorFactory,\n  UalUser,\n  UserAccountPermissions,\n} from './models'\nimport { Authenticator, SignTransactionResponse } from 'universal-authenticator-library'\n\nexport default class UalHelper {\n  constructor(args: { oreIdContext: OreIdContext; user: User }) {\n    this._oreIdContext = args.oreIdContext\n    this._user = args.user\n  }\n\n  _oreIdContext: OreIdContext\n\n  _user: User\n\n  /** Verifies that all plugins have a valid name\n   *  Stores a list of the installed providerNames for all working plugins in ualProvidersInstalled\n   */\n  async installUalProviders(ualWalletProviders: UalAuthenticatorFactory[]) {\n    // Maps installed UALProviders to array of ExternaLWalletType names\n    this._oreIdContext.ualProvidersInstalled = (ualWalletProviders || []).map(\n      ualProviderFactory => getUalProviderAttributesByUalName(ualProviderFactory?.name)?.providerName,\n    )\n  }\n\n  /** Retrieve the user and their account/permission details for the matching chainNetwork\n   *  Returns null if nothing in wallet for chainNetwork\n   */\n  async loginToUalProvider(\n    walletType: ExternalWalletType,\n    authenticator: Authenticator,\n    chainNetwork: ChainNetwork,\n    chainAccount: ChainAccount,\n  ): Promise<{ user: UalUser; userPermissions: UserAccountPermissions }> {\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Ual)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    try {\n      // we get an array of users - one for each chain being used in the wallet\n      const users: UalUser[] = await authenticator.login(chainAccount)\n      if (Helpers.isNullOrEmpty(users)) return null\n\n      // for every supported chain, populate a result with the user and user's account/permission info\n      const usersWithAccountsDetails: { user: UalUser; userPermissions: UserAccountPermissions }[] = []\n      await Helpers.asyncForEach(users, async user => {\n        const userPermissions = await this.getAccountAndPermissionsFromUalUser(user)\n        usersWithAccountsDetails.push({ user, userPermissions })\n      })\n\n      // get only the user matching the desired chainNetwork\n      const userForChain = usersWithAccountsDetails.find(uwa => uwa.userPermissions.chainNetwork === chainNetwork)\n      return userForChain\n    } catch (error) {\n      const { message = '' } = error\n      if (message.includes('unknown key (boost::tuples::tuple')) {\n        throw new Error(`The account selected by the wallet for login isn't on the ${chainNetwork} chain`)\n      } else {\n        throw error\n      }\n    }\n  }\n\n  // TODO: We should cache the wallet/user object to avoid calling login everytime we need to sign\n  async connectToUalProvider({\n    walletType,\n    chainNetwork,\n    chainAccount = null,\n  }: ConnectToUalProviderParams): Promise<ConnectToUalProviderResult> {\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Ual)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    const { options } = this._oreIdContext\n\n    const SelectedAuthenticator = options.ualAuthenticators.find(\n      ualAuthenticator => ualAuthenticator.name.toLowerCase() === walletType,\n    )\n\n    try {\n      const networkConfig = await this._oreIdContext.settings.getChainNetworkNextworkConfig(chainNetwork)\n      const ualNetworkConfig = {\n        chainId: networkConfig.chainId,\n        rpcEndpoints: [\n          {\n            ...networkConfig,\n          },\n        ],\n      }\n      // construct authenticator\n      const authenticator = new SelectedAuthenticator([ualNetworkConfig], {\n        appName: options.appName,\n      })\n\n      this._oreIdContext.setIsBusy(true) // busy is cleared by waitWhileWalletIsBusy when done\n      await authenticator.init()\n      await this.waitWhileWalletIsBusy(authenticator, walletType)\n\n      // TODO: consider if we should wait while .isLoading()\n\n      if (authenticator.isErrored()) {\n        const ualError = authenticator.getError()\n        console.log(`Error connecting to UAL wallet type: ${ualError.name}`, ualError.cause)\n        throw ualError.cause // re-throw error\n      }\n\n      // // TODO: consider if this code is relevant\n      // if (authenticator.shouldAutoLogin() !== true) return null\n\n      const userForChain = await this.loginToUalProvider(walletType, authenticator, chainNetwork, chainAccount)\n\n      // No user in the wallet for the given chainNetwork\n      if (!userForChain) {\n        console.log(`User doesn't have an account for the chainNetwork: ${chainNetwork} in wallet type: ${walletType}`)\n        return null\n      }\n\n      // Update permissions in oreId - TODO: consider if we should update all the permissions in all the found chains (in usersWithAccountsDetails)\n      try {\n        await this.updateOreAccountPermissionsfromUalUser(userForChain.user, walletType)\n      } catch (error) {\n        console.log(\n          `Failed to add newly discovered chain accounts in connectToUalProvider for chainNetwork: ${chainNetwork} in wallet type: ${walletType}`,\n          error,\n        )\n      }\n\n      // const {\n      //   account,\n      //   chainNetwork: chainNetworkFromAuthenticator, // get the chainNetwork from the UALProvider since we cant tell it what network to use\n      //   permissions,\n      // } = await this.getAccountAndPermissionsFromUalUser(user)\n      // const publicKeys = await user.getKeys()\n      // const account = await user.getAccountName()\n      // const permissions = [{ name: 'active', publicKey: publicKeys[0] }]\n\n      const response = {\n        isLoggedIn: true,\n        chainAccount: userForChain.userPermissions.chainAccount,\n        chainNetwork: userForChain.userPermissions.chainNetwork,\n        permissions: userForChain.userPermissions.permissions,\n        walletType,\n        authenticator,\n        ualUser: userForChain.user,\n      }\n      return response\n    } catch (error) {\n      console.log(`Failed to connect to ${walletType} wallet:`, error)\n      throw error\n    }\n  }\n\n  /** Extract user account/permission for all publicKeys in the User's wallet */\n  async getAccountAndPermissionsFromUalUser(ualUser: UalUser): Promise<UserAccountPermissions> {\n    const chainId = await ualUser.getChainId()\n    const chainNetwork = await this._oreIdContext.settings.getChainNetworkByChainId(chainId)\n    const account = await ualUser.getAccountName()\n    const publicKeys = await this.getKeys(ualUser)\n    // for each publicKey in the user's wallet, return a WalletPermission object\n    const permissions = publicKeys.map(publicKey => ({\n      account,\n      publicKey,\n      name: 'active', // UAL doesn't return the permission so we default to active\n      // todo: add parent permission when available\n    }))\n    return { chainAccount: account, chainNetwork, permissions }\n  }\n\n  /** Login using the wallet provider */\n  async loginWithUalProvider(loginOptions: LoginWithWalletOptions) {\n    const { walletType, chainAccount, chainNetwork } = loginOptions\n    // Connect to Provider\n    const response = await this.connectToUalProvider({ walletType, chainAccount, chainNetwork })\n    const { authenticator, isLoggedIn } = response\n    // Login if needed - if not logged-in by connectToUalProvider, then call login explicitly\n    if (!isLoggedIn) {\n      const userForChain = await this.loginToUalProvider(walletType, authenticator, chainNetwork, chainAccount)\n      if (userForChain) {\n        await this.updateOreAccountPermissionsfromUalUser(userForChain.user, walletType)\n      }\n    }\n    return response\n  }\n\n  /** Throw if the required plug-in is not installed */\n  assertHasProviderInstalled(provider: ExternalWalletType, providerType: ExternalWalletInterface) {\n    if (providerType === ExternalWalletInterface.Ual) {\n      if (!this.hasUalProvider(provider)) {\n        throw Error(`UAL authenticator:\"${provider}\" not installed. Please pass it in via ualAuthenticators.`)\n      }\n    }\n  }\n\n  /** sign with a UAL wallet */\n  async signWithUalProvider(\n    transactionData: TransactionData,\n    walletType: ExternalWalletType,\n  ): Promise<{ signedTransaction: SignatureProviderSignResult }> {\n    const { chainNetwork, transaction, chainAccount, signOptions } = transactionData\n    const { provider, broadcast } = signOptions\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Ual)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    const { ualUser } = await this.connectToUalProvider({ walletType, chainNetwork, chainAccount })\n    let signedTransactionResponse: SignTransactionResponse\n    try {\n      this._oreIdContext.setIsBusy(true)\n      signedTransactionResponse = await ualUser.signTransaction(transaction, { broadcast })\n\n      // Convert serializedTransaction from UInt8Array to Buffer\n      // i.e. when stringified change from: '{\\\"0\\\":129,\\\"1\\\":163'} to {\"type\":\"Buffer\",\"data\":[129,163]}\n      const { serializedTransaction } = signedTransactionResponse.transaction\n      if (serializedTransaction) {\n        signedTransactionResponse.transaction.serializedTransaction = Buffer.from(serializedTransaction)\n      }\n      return { signedTransaction: signedTransactionResponse.transaction }\n    } catch (error) {\n      console.error(error)\n      throw error\n    } finally {\n      this._oreIdContext.setIsBusy(false)\n    }\n  }\n\n  /** Signs an arbitrary string using a specific provider */\n  async signStringWithUalProvider({ walletType, chainNetwork, string, chainAccount, message }: SignStringParams) {\n    this.assertHasProviderInstalled(walletType, ExternalWalletInterface.Ual)\n    this.assertProviderValidForChainNetwork(walletType, chainNetwork)\n    const { ualUser } = await this.connectToUalProvider({ walletType, chainNetwork, chainAccount })\n    try {\n      this._oreIdContext.setIsBusy(true)\n      const keys = await this.getKeys(ualUser)\n      const response = await ualUser.signArbitrary(keys[0], string, message)\n      return { signedString: response }\n    } catch (error) {\n      console.error(error)\n      throw error\n    } finally {\n      this._oreIdContext.setIsBusy(false)\n    }\n  }\n\n  /** Add the account selected in the UAL User to the ORE account's list of account/permissions */\n  async updateOreAccountPermissionsfromUalUser(user: UalUser, walletType: ExternalWalletType): Promise<void> {\n    if (!user) return\n\n    const { chainAccount, chainNetwork, permissions } = await this.getAccountAndPermissionsFromUalUser(user)\n    // abort silently if account is missing some info - some chains/wallets (e.g. ethereum) dont provide the public key, so we can't add the perm here\n    if (!chainAccount || !permissions || !chainNetwork) return\n\n    // save permissions to oreid service\n    await this._user?.updatePermissionsIfNecessary({\n      chainAccount,\n      chainNetwork,\n      permissions,\n      walletType,\n    })\n    return\n  }\n\n  /** Whether this UAL provider was installed upon instantiation */\n  isUalProvider(walletType: ExternalWalletType) {\n    const walletProviderType = Helpers.mapAuthProviderToWalletType(walletType)\n    if (!walletProviderType) return false\n    return supportedUALProviders.includes(walletProviderType)\n  }\n\n  /** Whether this UAL provider was installed upon instantiation */\n  hasUalProvider(walletType: ExternalWalletType): boolean {\n    return this._oreIdContext.ualProvidersInstalled.includes(walletType)\n  }\n\n  /**\n   * get user account keys\n   * some wallets don't support getKeys\n   */\n  async getKeys(ualUser: UalUser): Promise<string[]> {\n    let keys: string[]\n\n    try {\n      keys = await ualUser.getKeys()\n    } catch (error) {\n      // TODO: add logic to get permissions from eos chain for this account\n      // const account = await ualUser.getAccountName()\n      // const ualUserAccount = (ualUser as any).client && (await (ualUser as any).client.v1.chain.get_account(account))\n      // const keys = await (ualUser as any).extractAccountKeys(ualUserAccount)\n      keys = []\n    }\n\n    return keys\n  }\n\n  /** Throw if the provider doesnt support the specified chainNetwork */\n  async assertProviderValidForChainNetwork(walletType: ExternalWalletType, chainNetwork: ChainNetwork) {\n    const { chainType } = getUalProviderAttributes(walletType)\n    const networks = await this._oreIdContext.settings.getAllChainNetworkSettings()\n    const isValid = !!networks.find(n => n.network === chainNetwork && n.type === chainType)\n    if (!isValid) {\n      throw Error(\n        `External Wallet Type: ${walletType} doesnt support chainNetwork ${chainNetwork}. Hint: It supports networks of type ${chainType}.`,\n      )\n    }\n  }\n\n  /** set isBusy on oreIdContext while wallet authenticator isLoading */\n  private async waitWhileWalletIsBusy(ualAuthenticator: UalAuthenticator, walletType: ExternalWalletType) {\n    while (ualAuthenticator.isLoading()) {\n      this._oreIdContext.setIsBusy(true)\n      // todo: add timeout\n      // eslint-disable-next-line no-await-in-loop\n      await Helpers.sleep(250)\n      // this is here to help a developer debug - dont remove this - if a wallet is not open to connect to, it will hang here\n      console.log(`connecting to ${walletType} via UAL wallet in progress:`, ualAuthenticator.isLoading())\n    }\n    this._oreIdContext.setIsBusy(false)\n  }\n\n  // Supported features by provider\n\n  /** whether discovery is supported by the provider */\n  canDiscover(walletType: ExternalWalletType) {\n    if (this.hasUalProvider(walletType)) {\n      return getUalProviderAttributes(walletType).supportsDiscovery\n    }\n    return false\n  }\n\n  /** whether signString is supported by the provider */\n  canSignString(walletType: ExternalWalletType) {\n    if (this.hasUalProvider(walletType)) {\n      return getUalProviderAttributes(walletType).supportsSignArbitrary\n    }\n    return false\n  }\n\n  /** whether call to discover is required by provider before login */\n  requiresDiscoverToLogin(walletType: ExternalWalletType) {\n    if (this.hasUalProvider(walletType)) {\n      return getUalProviderAttributes(walletType).requiresDiscoverToLogin\n    }\n    return false\n  }\n\n  /** whether call to logout then login is required by provider before discover */\n  requiresLogoutLoginToDiscover(walletType: ExternalWalletType) {\n    if (this.hasUalProvider(walletType)) {\n      return getUalProviderAttributes(walletType).requiresLogoutLoginToDiscover\n    }\n    return false\n  }\n\n  /** default path index for provider (if any) */\n  defaultDiscoveryPathIndexList(walletType: ExternalWalletType): number[] {\n    if (this.hasUalProvider(walletType)) {\n      return getUalProviderAttributes(walletType)?.defaultDiscoveryPathIndexList\n    }\n    return null\n  }\n\n  /** help text displayed to user for provider */\n  helpTextForProvider(walletType: ExternalWalletType) {\n    if (this.hasUalProvider(walletType)) {\n      return getUalProviderAttributes(walletType).helpText\n    }\n\n    return null\n  }\n}\n", "export class Observable<Subscriber extends Function> {\n  private _subscribers: any[]\n\n  constructor() {\n    this._subscribers = []\n  }\n\n  public subscribe(subscriber: Subscriber) {\n    const hasThisSubscriber = this._subscribers.find(s => s === subscriber)\n    if (!subscriber || hasThisSubscriber) {\n      return\n    }\n    subscriber(this)\n    this._subscribers.push(subscriber)\n  }\n\n  public unsubscribe(subscriber: Subscriber) {\n    this._subscribers = this._subscribers.filter(f => f !== subscriber)\n  }\n\n  public callSubscribers() {\n    this._subscribers.forEach(f => f(this))\n  }\n}\n", "import OreIdContext from '../../core/IOreidContext'\nimport { ApiEndpoint, ProcessId, RequestType } from '../../models'\nimport { assertHasApiKeyOrAccessToken, assertParamsHaveRequiredValues } from '../helpers'\n\nexport type ApiUpdateDelayWalletSetupParams = {\n  account?: string\n  /** new value for wallet.delayWalletSetup property */\n  delayWalletSetup?: boolean\n}\n\nexport type ApiUpdateDelayWalletSetupBodyParams = {\n  account?: string\n  delay_wallet_setup?: boolean\n}\n\nexport type CallApiUpdateDelayWalletSetupResult = {\n  success: boolean\n  processId: ProcessId\n}\n\n/** Call the account/update-delay-wallet-setup api\n * Sets the value of the wallet's delayWalletSetup flag\n * Can only be updated if the wallet is not yet setup (wallet.requiresWalletSetup = false)\n * Returns: success: true (or throws an error)\n * */\nexport async function callApiUpdateDelayWalletSetup(\n  oreIdContext: OreIdContext,\n  params: ApiUpdateDelayWalletSetupParams,\n): Promise<CallApiUpdateDelayWalletSetupResult> {\n  const apiName = ApiEndpoint.UpdateDelayWalletSetup\n  const { account, delayWalletSetup } = params\n\n  assertHasApiKeyOrAccessToken(oreIdContext, apiName)\n  assertParamsHaveRequiredValues(params, ['account', 'delayWalletSetup'], apiName)\n\n  const body: ApiUpdateDelayWalletSetupBodyParams = {\n    account: account,\n    delay_wallet_setup: delayWalletSetup,\n  }\n\n  const results = await oreIdContext.callOreIdApi(RequestType.Post, ApiEndpoint.UpdateDelayWalletSetup, body, null)\n  return results // success: true\n}\n", "import {\n  ApiGetUserParams,\n  callApiDeleteTestUser,\n  callApiGetUser,\n  callApiPasswordLessSendCode,\n  callApiPasswordLessVerifyCode,\n} from '../api'\nimport { callApiAddPermission } from '../api/endpoints/addPermission'\nimport OreIdContext from '../core/IOreidContext'\nimport { getOreIdNewChainAccountUrl } from '../core/urlGenerators'\nimport Helpers from '../utils/helpers'\nimport { Observable } from '../utils/observable'\nimport { AuthProvider, AccountName, ChainAccount, ChainNetwork, ExternalWalletType } from '../common/models'\nimport { NewAccountOptions, NewAccountWithOreIdResult } from '../core/models'\nimport {\n  UserChainAccount,\n  UserData,\n  UserPermissionData,\n  UserPermissionForChainAccount,\n  UserSourceData,\n  WalletPermission,\n} from './models'\nimport { AccessTokenHelper } from '../auth/accessTokenHelper'\nimport { callApiUpdateDelayWalletSetup } from '../api/endpoints/updateDelayWalletSetup'\n\nconst { isNullOrEmpty } = Helpers\n\nexport type SubscriberUser = (values: User) => void\n\nexport class User extends Observable<SubscriberUser> {\n  constructor(args: { oreIdContext: OreIdContext; accessTokenHelper: AccessTokenHelper; accountName: AccountName }) {\n    super()\n    this._oreIdContext = args.oreIdContext\n    this._accessTokenHelper = args.accessTokenHelper // reference to current accessToken (via getter)\n    this._accountName = args.accountName\n    this._accessTokenHelper.subscribe(this.onUpdateAccessTokenHelper)\n  }\n\n  // pulled from the accessToken\n  private _accountName: AccountName\n\n  private _accessTokenHelper: AccessTokenHelper\n\n  private _oreIdContext: OreIdContext\n\n  /** User's basic information and blockchain accounts (aka permissions) */\n  private _userSourceData: UserSourceData\n\n  private get accessToken(): string {\n    return this._accessTokenHelper.accessToken\n  }\n\n  /** User's OreID (accountName) */\n  get accountName(): AccountName {\n    return this._accountName\n  }\n\n  /** User's personal info (e.g. name, email, picture) */\n  get data(): UserData {\n    this.assertUserHasData()\n    const { permissions, ...otherInfo } = this._userSourceData\n    return {\n      ...otherInfo,\n      chainAccounts: this.getChainAccounts(),\n    }\n  }\n\n  /** Whether user's data has been retrieved with getData() */\n  get hasData() {\n    return !isNullOrEmpty(this?._userSourceData)\n  }\n\n  private setUserSourceData(userSourceData: UserSourceData) {\n    this._userSourceData = userSourceData\n    super.callSubscribers()\n  }\n\n  /** Return Blockchain accounts associated with the user's OreId account */\n  private getChainAccounts(): UserChainAccount[] {\n    this.assertUserHasData()\n    const chainAccounts = (this._userSourceData.permissions || []).map(perm => {\n      const [defaultPermission] = this.getDefaultPermissionForChainAccount(perm.chainAccount, perm.chainNetwork)\n      return {\n        chainAccount: perm.chainAccount,\n        chainNetwork: perm.chainNetwork,\n        defaultPermission,\n        permissions: this.getPermissionForChainAccount(perm.chainAccount, perm.chainNetwork),\n      }\n    })\n    // only return unique combinations of chainAccount and chainNetwork\n    return Helpers.getUniqueValues(chainAccounts)\n  }\n\n  /** Whether we have a valid access token for the current user */\n  get isLoggedIn(): boolean {\n    return !!this.accessToken\n  }\n\n  /** runs when accessTokenHelper changes */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private onUpdateAccessTokenHelper = (newAccessTokenHelper: AccessTokenHelper) => {\n    this._accountName = newAccessTokenHelper.accountName\n    super.callSubscribers()\n  }\n\n  /** throw if user data hasn't been retrieved yet */\n  private assertUserHasData() {\n    if (!this.hasData) {\n      throw new Error('User data hasnt been retrieved. Call user.getData() first.')\n    }\n  }\n\n  /** throw if user hasn't have a valid email (i.e. user.email) */\n  private assertUserHasValidEmail() {\n    this.assertUserHasData()\n    const { email } = this?.data || {}\n    if (!Helpers.isValidEmail(email)) throw new Error('User doesnt have a valid email')\n  }\n\n  /** Get the user info from ORE ID API for a given user account and (usually) save the user into localStorage 'cache'\n   *  Must have a valid accessToken to retrieve user\n   */\n  async getData(forceRefresh?: boolean): Promise<UserData> {\n    if (this.hasData && !forceRefresh) return this.data\n    // eslint-disable-next-line prefer-destructuring\n    const accessToken = this.accessToken\n    if (!accessToken) {\n      throw new Error('AccessToken is missing or has expired')\n    }\n    // get account specified in access token\n    const account = this?._accountName\n    const params: ApiGetUserParams = { account }\n    const userSourceData = await callApiGetUser(this._oreIdContext, params)\n\n    this._accountName = account\n    this.setUserSourceData(userSourceData)\n    return this.data\n  }\n\n  /** Clears user's accessToken and user profile data */\n  logout() {\n    this._oreIdContext.logout()\n  }\n\n  /** Request OREID to create a new blockchain account in an existing user's wallet\n   *  This is an advanced feature - it most cases, blockchain accounts will be created automatically upon first login\n   */\n  // async newChainAccount(newAccountOptions: NewAccountOptions) {\n  //   // TODO - call API to create chain account (requires apiKey with createAccount right)\n  //   // for webwidget, it should just refresh user info upon callback\n  // }\n\n  /** Returns a fully formed url to redirect the user's browser to create a new chain account using ORE ID\n   *  This function calls the /new-account web endpoint\n   *  Returns: Callback returns new chainAccount name */\n  async getNewChainAccountUrl(newAccountOptions: NewAccountOptions): Promise<NewAccountWithOreIdResult> {\n    const { account, accountType, chainNetwork, accountOptions, provider, state } = newAccountOptions || {}\n    const { newAccountCallbackUrl, backgroundColor } = this._oreIdContext.options\n    const args = {\n      account,\n      accountType,\n      backgroundColor,\n      chainNetwork,\n      accountOptions,\n      provider,\n      callbackUrl: newAccountCallbackUrl,\n      state,\n    }\n    const newAccountUrl = await getOreIdNewChainAccountUrl(this._oreIdContext, args)\n    return { newAccountUrl, errors: null }\n  }\n\n  /** Delete a test user\n   * Test users are created by setting isTestUser:true on first authentication)\n   */\n  async deleteTestUser() {\n    if (!this?.accountName) throw new Error('User not authenticated. Must be logged-in (or have set an accessToken).')\n    const result = await callApiDeleteTestUser(this._oreIdContext, {\n      account: this.accountName,\n    })\n    return result\n  }\n\n  /** If the user hasn't already setup their wallet, this will prompt the setup on their next interactive authentication\n   * Used to turn-off the delayWalletSetup for a user's account\n   * delayWalletSetup is enabled by passing delayWalletSetup:true for a user's first authentication (e.g. popup.auth(delayWalletSetup:true))\n   * Delayed Wallet Setup allows a user to login without creating blockchain accounts right away\n   * Call this function (to disable delayWalletSetup) just before the user needs a blockchain account (e.g. before signing a transaction)\n   */\n  async disableDelayedWalletSetup() {\n    if (!this?.accountName) throw new Error('User not authenticated. Must be logged-in (or have set an accessToken).')\n    const result = await callApiUpdateDelayWalletSetup(this._oreIdContext, {\n      account: this.accountName,\n      delayWalletSetup: false,\n    })\n    await this.getData(true)\n    return result\n  }\n\n  /** Send a code to the user's primary email (user.email) - in order to verify the user has access to it\n   *  After sending the code, use checkVerificationCodeForEmail() to verify that the user received the code */\n  async sendVerificationCodeToEmail() {\n    this.assertUserHasValidEmail()\n    const result = await callApiPasswordLessSendCode(this._oreIdContext, {\n      email: this?.data?.email,\n      provider: AuthProvider.Email,\n    })\n    return result\n  }\n\n  /** Confirm that the code matches the last one just sent to the email by sendVerificationCodeToEmail() */\n  async checkVerificationCodeForEmail({ code }: { code: string }) {\n    this.assertUserHasValidEmail()\n    const result = await callApiPasswordLessVerifyCode(this._oreIdContext, {\n      code,\n      email: this?.data?.email,\n      provider: AuthProvider.Email,\n    })\n    return result\n  }\n\n  // TODO: rename sendVerificationCodeToEmail - passwordlessVerificationSendCode(type, email, phone)\n  // TODO: rename checkVerificationCodeForEmail - passwordlessVerificationVerifyCode(type, email, phone)\n\n  /** Map permission from server data to local UserPermission object */\n  mapUserPermission(permission: UserPermissionData): UserPermissionForChainAccount {\n    if (isNullOrEmpty(permission)) return null\n    const { chainNetwork, chainAccount, permission: permissionName, ...other } = permission\n    return {\n      ...other,\n      name: permissionName,\n    }\n  }\n\n  /** returns the UserPermissins a chainNetwork/chainAccount\n   * if defaultOnly = true, returns the single default permission for the chainAccount\n   */\n  getPermissionForChainAccount(\n    chainAccount: ChainAccount,\n    chainNetwork: ChainNetwork,\n  ): UserPermissionForChainAccount[] {\n    const accountPermissions = this._userSourceData.permissions.filter(\n      p => p.chainAccount === chainAccount && p.chainNetwork === chainNetwork,\n    )\n    return accountPermissions.map(this.mapUserPermission)\n  }\n\n  getDefaultPermissionForChainAccount(\n    chainAccount: ChainAccount,\n    chainNetwork: ChainNetwork,\n  ): UserPermissionForChainAccount[] {\n    const accountPermissions = this.getPermissionForChainAccount(chainAccount, chainNetwork)\n    let defaultPermission = accountPermissions.filter(p => p.isDefault === true)\n    // if no default is defined, and there is only one permission, use it as the default - this might be an external key\n    if (isNullOrEmpty(defaultPermission) && accountPermissions?.length === 1) {\n      defaultPermission = accountPermissions\n    }\n    return defaultPermission\n  }\n\n  /** Update permissions for user's ORE Account if any */\n  async updatePermissionsIfNecessary(args: {\n    chainAccount: ChainAccount\n    permissions: WalletPermission[]\n    chainNetwork: ChainNetwork\n    walletType: ExternalWalletType\n  }) {\n    // use logged-in account if missing oreAccount param\n    await this.addWalletPermissionsToOreIdAccount(args)\n  }\n\n  // for each permission in the wallet, add to ORE ID (if not in user's record)\n  /** for all walletPermissions not already in the user's OreID wallet, add it by calling the api (addPermission) */\n  async addWalletPermissionsToOreIdAccount(args: {\n    chainAccount: ChainAccount\n    chainNetwork: ChainNetwork\n    permissions: WalletPermission[]\n    walletType: ExternalWalletType\n  }) {\n    // get latest user info\n    await this.getData()\n\n    const { chainAccount, chainNetwork, permissions, walletType } = args\n    if (!this.accountName || isNullOrEmpty(permissions) || isNullOrEmpty(chainNetwork)) {\n      return // todo: consider if we should exit silently here - since we are called after discovery everytime, then answer is probably yes\n    }\n\n    // for each permission provided, check if it's already in the user's list, if not, add it by calling the api (addPermission)\n    await Helpers.asyncForEach(permissions, async perm => {\n      const permission = perm.name\n      let parentPermission = perm.parent\n      if (!parentPermission) {\n        // HACK: assume parent permission - its missing from the discover() results\n        parentPermission = 'active'\n\n        if (permission === 'owner') {\n          parentPermission = ''\n        } else if (permission === 'active') {\n          parentPermission = 'owner'\n        }\n      }\n      // filter out permission that the user already has in his record\n      const skipThisPermission = this._userSourceData.permissions.some(\n        up =>\n          (up.chainAccount === chainAccount && up.chainNetwork === chainNetwork && up.permission === permission) ||\n          permission === 'owner',\n      )\n\n      // don't add 'owner' permission and skip ones that are already stored in user's account\n      if (skipThisPermission !== true) {\n        // let publicKey = p.required_auth.keys[0].key; //TODO: Handle multiple keys and weights\n        const { publicKey } = perm\n        // if call is successful, nothing is returned in response (except processId)\n        await callApiAddPermission(this._oreIdContext, {\n          account: this.accountName,\n          chainAccount,\n          chainNetwork,\n          publicKey,\n          parentPermission,\n          permission,\n          provider: walletType,\n        })\n      }\n    })\n\n    // reload user to get updated permissions\n    await this.getData()\n  }\n}\n", "import Helpers from '../utils/helpers'\nimport { JWTToken } from './models'\nimport { Observable } from '../utils/observable'\n\nexport type SubscriberAccessTokenHelper = (accessTokenHelper: AccessTokenHelper) => void\n\nexport class AccessTokenHelper extends Observable<SubscriberAccessTokenHelper> {\n  constructor(accessToken?: string, ignoreIssuer = false) {\n    super()\n    this._ignoreIssuer = ignoreIssuer\n    this.setAccessToken(accessToken)\n  }\n\n  _accessToken: string\n\n  _decodedAccessToken: JWTToken\n\n  _idToken: string\n\n  _decodedIdToken: JWTToken\n\n  _ignoreIssuer: boolean\n\n  get accessToken() {\n    return this._accessToken\n  }\n\n  get decodedAccessToken() {\n    if (!this.accessToken) return null\n    return this._decodedAccessToken\n  }\n\n  get idToken() {\n    return this._idToken\n  }\n\n  get decodedIdToken() {\n    return this._decodedIdToken\n  }\n\n  get accountName() {\n    if (!this.accessToken) return null\n    AccessTokenHelper.assertIsTokenValid(this.decodedAccessToken)\n    return Helpers.getClaimFromJwtTokenBySearchString(this.decodedAccessToken, 'https://oreid.aikon.com/account')\n  }\n\n  /** clear accessToken */\n  clearAccessToken() {\n    this.setAccessToken(null)\n  }\n\n  /** clear idToken */\n  clearIdToken() {\n    this.setIdToken(null)\n  }\n\n  /** Whether current accessToken is expired (or is missing)\n   *  (optional) provide a Date() to compare expiration against - defaults to current Date()\n   *  Returns: (boolean) true if hasExpired\n   */\n  hasExpired(now?: Date): boolean {\n    if (!this._decodedAccessToken) return true\n    if (!AccessTokenHelper.isTokenDateValidNow(this._decodedAccessToken, now)) {\n      return true\n    }\n    return false\n  }\n\n  setAccessToken(value: string) {\n    if (!value) {\n      this._accessToken = null // allows clearing of value\n    } else {\n      const decodedAccessToken = Helpers.jwtDecodeSafe(value) as JWTToken\n      if (!decodedAccessToken) throw Error(`Can't set accessToken. Value provided: ${value}`)\n      AccessTokenHelper.assertIsTokenValid(decodedAccessToken, this._ignoreIssuer)\n      AccessTokenHelper.assertIdTokenMatchesAccessToken(decodedAccessToken, this.decodedIdToken)\n      this._decodedAccessToken = decodedAccessToken\n      this._accessToken = value\n      // Set a timer to clear the token when it expires (will clear if already expired)\n      Helpers.runAtTime(() => {\n        this.clearAccessToken()\n        console.log('accessToken has expired and has been cleared')\n      }, this._decodedAccessToken.exp * 1000)\n    }\n    super.callSubscribers()\n  }\n\n  setIdToken(value: string) {\n    if (!value) {\n      this._decodedIdToken = null // allows clearing of value\n    } else {\n      const decodedIdToken = Helpers.jwtDecodeSafe(value) as JWTToken\n      if (!decodedIdToken) throw Error(`Can't set IdToken. Value provided: ${value}`)\n      AccessTokenHelper.assertIsTokenValid(decodedIdToken, this._ignoreIssuer)\n      AccessTokenHelper.assertIdTokenMatchesAccessToken(this.decodedAccessToken, decodedIdToken)\n      this._decodedIdToken = decodedIdToken\n      this._idToken = value\n      // Set a timer to clear the token when it expires (will clear if already expired)\n      Helpers.runAtTime(() => {\n        this.clearIdToken()\n        console.log('idToken has expired and has been cleared')\n      }, this._decodedIdToken.exp * 1000)\n    }\n    super.callSubscribers()\n  }\n\n  /** Throws if accessToken is NOT set yet */\n  assertHasAccessToken() {\n    if (!this.accessToken) throw Error('AccessToken not set. Login first.')\n  }\n\n  /** Whether token is a valid OREID issued token and NOT expired */\n  static isTokenValid(decodedToken: Partial<JWTToken>, ignoreIssuer = false): boolean {\n    try {\n      AccessTokenHelper.assertIsTokenValid(decodedToken, ignoreIssuer)\n      return true\n    } catch (error) {\n      return false\n    }\n  }\n\n  /** Throws if decodedToken is NOT a valid OREID issued token */\n  static assertIsTokenValid(decodedToken: Partial<JWTToken>, ignoreIssuer = false) {\n    const now = new Date()\n    if (!decodedToken) throw Error('JWT (access or id) token is invalid, or expired)')\n    // check if ORE ID issued this token\n    if (!ignoreIssuer && !decodedToken.iss.includes('oreid.io')) {\n      throw Error('Access token not issued by ORE ID')\n    }\n    if (!AccessTokenHelper.isTokenDateValidNow(decodedToken, now)) {\n      throw Error('Access token has expired')\n    }\n  }\n\n  /** Throws if accessToken does not match the same user and issuer as the idToken */\n  static assertIdTokenMatchesAccessToken(decodedAccessToken: Partial<JWTToken>, decodedIdToken: Partial<JWTToken>) {\n    if (!decodedAccessToken || !decodedIdToken) return\n    // check if ORE ID issued this token\n    if (decodedAccessToken.iss !== decodedIdToken.iss) {\n      throw Error('AccessToken and IdToken mismatch - not issued by the same issuer')\n    }\n    if (decodedAccessToken.sub !== decodedIdToken.sub) {\n      throw Error('AccessToken and IdToken mismatch - not for the same user')\n    }\n  }\n\n  /** Whether a JWT token is valid for use right now - not expired and not being used before first usable date (nbf) */\n  static isTokenDateValidNow(decodedToken: Partial<JWTToken>, now?: Date): boolean {\n    const nowDate = now || new Date()\n    const nowInMs = nowDate.getTime() / 1000\n    if (typeof decodedToken.exp !== 'undefined' && decodedToken?.exp < nowInMs) {\n      return false\n    }\n    if (typeof decodedToken?.nbf !== 'undefined' && decodedToken?.nbf > nowInMs) {\n      return false\n    }\n    return true\n  }\n}\n", "import {\n  ApiConvertOauthTokensParams,\n  ApiLoginUserWithTokenParams,\n  ApiMessageResult,\n  ApiNewUserWithTokenParams,\n  callApiConvertOauthTokens,\n  callApiLoginUserWithToken,\n  callApiNewUserWithToken,\n} from '../api'\nimport OreIdContext from '../core/IOreidContext'\nimport { getOreIdAuthUrl } from '../core/urlGenerators'\nimport TransitHelper from '../transit/TransitHelper'\nimport UalHelper from '../ual/UalHelper'\nimport { User } from '../user/user'\nimport Helpers from '../utils/helpers'\nimport LocalState from '../utils/localState'\nimport { Observable } from '../utils/observable'\nimport { AccessTokenHelper } from './accessTokenHelper'\nimport { AuthResult, LoginWithOreIdResult } from '../core/models'\nimport { LoginOptions, LoginWithTokenOptions, LoginWithWalletOptions, NewUserWithTokenOptions } from './models'\n\nexport type SubscriberAuth = (auth: Auth) => void\n\nexport class Auth extends Observable<SubscriberAuth> {\n  constructor(args: { oreIdContext: OreIdContext }) {\n    super()\n    this._oreIdContext = args.oreIdContext\n    this._localState = this._oreIdContext.localState\n    this._transitHelper = new TransitHelper({ oreIdContext: this._oreIdContext, user: this._user })\n    this._ualHelper = new UalHelper({ oreIdContext: this._oreIdContext, user: this._user })\n    this.initAccessTokenHelper()\n  }\n\n  private _accessTokenHelper: AccessTokenHelper\n\n  private _localState: LocalState\n\n  private _oreIdContext: OreIdContext\n\n  private _transitHelper: TransitHelper\n\n  private _ualHelper: UalHelper\n\n  private _user: User\n\n  /** User's OreID (accountName) */\n  get accessTokenHelper(): AccessTokenHelper {\n    return this._accessTokenHelper\n  }\n\n  private initAccessTokenHelper() {\n    this._accessTokenHelper = new AccessTokenHelper()\n    const savedToken = this._localState?.accessToken\n    this.accessToken = savedToken\n    this.saveAccessTokenAndNotifySubscribers(savedToken) // if savedToken is expired, it will be not set here\n    // listen for future changes to accessTokenHelper\n    this._accessTokenHelper.subscribe(this.onUpdateAccessTokenHelper)\n  }\n\n  /** User's OreID (accountName) */\n  get accountName(): string {\n    return this._accessTokenHelper?.accessToken ? this._accessTokenHelper?.accountName : null\n  }\n\n  get idToken() {\n    return this._accessTokenHelper?.idToken\n  }\n\n  /** retrieve accessToken saved in local storage - is automatically deleted when token expires */\n  get accessToken() {\n    return this._accessTokenHelper?.accessToken\n  }\n\n  /** Sets the access token in local storage (and in accessTokenHelper)\n   * this token will be used to call ORE ID APIs (on behalf of the user)\n   * This token is user-specific - call logout to clear it upon user log-out\n   * When the accessToken token expires, it will be deleted from local storage and user will be cleared\n   */\n  set accessToken(accessToken: string) {\n    try {\n      // decodes and validates accessToken is a valid token\n      // if incoming token has expired, _accessTokenHelper will throw (and token wont be saved)\n      this._accessTokenHelper.setAccessToken(accessToken)\n      // NOTE: We dont save the access token to local storage here as that will happen when onUpdateAccessTokenHelper is called\n    } catch (error) {\n      console.log('Cant set accessToken.', error.message)\n    }\n  }\n\n  /** set private variable and save to localState\n   * NOTE: This is called every time this._accessTokenHelper.accessToken changes (or expires)\n   */\n  private saveAccessTokenAndNotifySubscribers(accessToken: string) {\n    if (this._localState?.accessToken !== accessToken) {\n      this._localState.saveAccessToken(accessToken)\n      this._user = null\n    }\n    super.callSubscribers()\n  }\n\n  /** Returns user object matching current accessToken\n   *  A newly created object object won't have user.info populated, call user.getData() to retrieve\n   */\n  get user() {\n    if (!this._user) {\n      this._user = new User({\n        oreIdContext: this._oreIdContext,\n        accessTokenHelper: this._accessTokenHelper, // accessToken helper\n        accountName: this.accountName, // accountName\n      })\n    }\n    return this._user\n  }\n\n  /** We have a valid access token for the current user */\n  get isLoggedIn(): boolean {\n    return !!this.accessToken\n  }\n\n  /** runs when accessTokenHelper changes */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private onUpdateAccessTokenHelper = (newAccessTokenHelper: AccessTokenHelper) => {\n    // save new access token\n    this.saveAccessTokenAndNotifySubscribers(this._accessTokenHelper.accessToken)\n  }\n\n  private clearAccessToken() {\n    // clear accessToken and user\n    this._localState.clearAccessToken()\n    this._accessTokenHelper.clearAccessToken()\n    super.callSubscribers()\n  }\n\n  /** Calls the 'connect' function on a external wallet (e.g. Metamask)\n   *  For most, however, this function returns the chainAccount selected by the user in the wallet app\n   *  Different wallets have different behavior. Some do not support this feature. */\n  async connectWithWallet(loginOptions: LoginWithWalletOptions) {\n    const { walletType } = loginOptions\n\n    if (!this._oreIdContext.walletHelper.isAValidExternalWalletType(walletType)) {\n      throw new Error(`loginWithWallet not supported for external wallet type: ${walletType}`)\n    }\n\n    return this.connectToWalletProvider(loginOptions)\n  }\n\n  /** Connect to the wallet provider\n   *  For some wallet types, this will include an unlock and 'login' flow to select a chain account\n   *  If a chainAccount is selected, it and it's associated publicKey (if available) will be saved to the user's OreId wallet as an 'external key' */\n  private async connectToWalletProvider(loginOptions: LoginWithWalletOptions) {\n    return this._oreIdContext.walletHelper.connectToWalletProvider(loginOptions)\n  }\n\n  /** Calls the account/convert-oauth api\n   * Converts OAuth tokens from some 3rd-party source to OREID Oauth tokens\n   * The third-party (e.g. Auth0 or Google) must be registered in the AppRegistration.oauthSettings\n   * Returns: OreId issued accessToken and idToken\n   * */\n  private async convertOauthTokens(parms: ApiConvertOauthTokensParams) {\n    return callApiConvertOauthTokens(this._oreIdContext, parms)\n  }\n\n  /**\n   * Converts OAuth accessToken or idToken from some 3rd-party source (e.g. Google) to OreId OAuth accessToken\n   * The third-party (e.g. Auth0 or Google) must be registered in the App Registration's oauthSettings\n   * If a user does not curently exist that matches the info in the incoming idToken, an error is thrown\n   * Does not requires a user to be logged-in (no current accessToken) or apiKey\n   * Returns: OreId issued accessToken\n   * */\n  async loginWithToken(loginOptions: LoginWithTokenOptions): Promise<LoginWithOreIdResult> {\n    if (!loginOptions?.idToken && !loginOptions?.accessToken) {\n      throw new Error('Cant loginWithToken - missing required parameter: accessToken OR idToken')\n    }\n    const { accessToken, error, processId } = await this.loginWithAccessOrIdTokenToken(loginOptions)\n    if (!error) {\n      this.accessToken = accessToken // saves in cache and in local storage\n      await this.user.getData()\n    }\n    return { accessToken, errors: error, processId }\n  }\n\n  /** Converts OAuth idToken from some 3rd-party source to OREID Oauth accessTokens\n   * The third-party (e.g. Auth0 or Google) must be registered in the AppRegistration.oauthSettings\n   * Creates a new OreId user and account from info in the incoming idToken\n   * If a matching user already exist, and error is returned\n   * Requires a valid idToken but no current accessToken or apiKey\n   * Returns: OreId issued accessToken\n   * */\n  async newUserWithToken(userOptions: NewUserWithTokenOptions): Promise<LoginWithOreIdResult> {\n    const { accessToken, error, processId } = await this.newAccountWithIdToken(userOptions)\n    if (!error) {\n      this.accessToken = accessToken // saves in cache and in local storage\n      await this.user.getData()\n    }\n    return { accessToken, errors: error, processId }\n  }\n\n  /** Calls api account/login-user-with-token for loginWithToken() (after checking for valid token */\n  static checkJwtTokenAndReturnError(jwtTokenString: string): { error?: string; message?: string } {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const accessTokenHelper = new AccessTokenHelper(jwtTokenString, true)\n    } catch (error) {\n      return {\n        error: 'token_invalid',\n        message: 'token invalid or corrupt - must be a JWT Oauth2 token',\n      }\n    }\n\n    return null\n  }\n\n  /** Calls api account/login-user-with-token for loginWithToken() (after checking for valid token */\n  private async loginWithAccessOrIdTokenToken(\n    params: ApiLoginUserWithTokenParams,\n  ): Promise<{ accessToken: string } & ApiMessageResult> {\n    const { accessToken, idToken } = params\n    let tokenCheckError\n\n    // check valid JWT tokens (Note: accessToken can be a JWT or not)\n    if (accessToken && Helpers.jwtDecodeSafe(accessToken)) {\n      tokenCheckError = accessToken ? Auth.checkJwtTokenAndReturnError(accessToken) : null\n    } else {\n      tokenCheckError = idToken ? Auth.checkJwtTokenAndReturnError(idToken) : null\n    }\n\n    if (tokenCheckError) return { accessToken: null, ...tokenCheckError }\n\n    const response = await callApiLoginUserWithToken(this._oreIdContext, params)\n    if (!response?.errorCode) {\n      this.setAuthResult({ accessToken: response?.accessToken })\n    }\n    return {\n      accessToken: response.accessToken,\n      error: response?.errorCode,\n      message: response?.errorMessage,\n      processId: response?.processId,\n    }\n  }\n\n  /** Calls api account/new-user-with-token for newUserWithToken() (after checking for valid token */\n  private async newAccountWithIdToken(\n    params: ApiNewUserWithTokenParams,\n  ): Promise<{ accessToken: string } & ApiMessageResult> {\n    const { idToken } = params\n    // check valid ifToken\n    const idTokenCheckError = idToken ? Auth.checkJwtTokenAndReturnError(idToken) : null\n    if (idTokenCheckError) return { accessToken: null, ...idTokenCheckError }\n\n    const response = await callApiNewUserWithToken(this._oreIdContext, params)\n    if (!response?.errorCode) {\n      this.setAuthResult({ accessToken: response?.accessToken })\n    }\n    return {\n      accessToken: response.accessToken,\n      error: response?.errorCode,\n      message: response?.errorMessage,\n      processId: response?.processId,\n    }\n  }\n\n  /** clear accessToken and user */\n  logout() {\n    this.clearAccessToken()\n    this._user = null\n  }\n\n  /** Returns a fully formed url to redirect the user's browser to login using ORE ID\n   *  This function calls the /auth web endpoint\n   *  Returns: Callback returns account, and optionally accessToken and/or idToken for user */\n  async getLoginUrl(loginOptions: LoginOptions): Promise<LoginWithOreIdResult> {\n    const { code, email, idToken, phone, provider, state, linkToAccount, returnAccessToken, returnIdToken } =\n      loginOptions || {}\n    const { authCallbackUrl, backgroundColor } = this._oreIdContext.options\n    const args = {\n      code,\n      email,\n      idToken,\n      phone,\n      provider,\n      backgroundColor,\n      callbackUrl: authCallbackUrl,\n      state,\n      linkToAccount,\n      returnAccessToken: Helpers.isNullOrEmpty(returnAccessToken) ? true : returnAccessToken, // if returnAccessToken not specified, default to true\n      returnIdToken,\n    }\n    const loginUrl = await getOreIdAuthUrl(this._oreIdContext, args)\n    return { loginUrl, errors: null }\n  }\n\n  /** Extracts and returns the response parameters on the /auth callback URL string\n   *  Applies accessToken and idToken (if included on the url) to local state\n   */\n  handleAuthCallback(callbackUrlString: string): AuthResult {\n    // Parses error codes and returns an errors array\n    // (if there is an error_code param sent back - can have more than one error code - seperated by a ‘&’ delimeter\n    const {\n      access_token: accessToken,\n      account,\n      id_token: idToken,\n      errors,\n      process_id: processId,\n      state,\n    } = Helpers.extractDataFromCallbackUrl(callbackUrlString)\n    const response: AuthResult = { account }\n\n    if (errors) response.errors = errors\n    if (processId) response.processId = processId\n    if (state) response.state = state\n    if (accessToken) response.accessToken = accessToken\n    if (idToken) response.idToken = idToken\n\n    if (!errors) {\n      this.setAuthResult(response)\n    }\n\n    // clear the busy indicator now that we've finsihed the auth flow\n    this._oreIdContext.setIsBusy(false)\n    return response\n  }\n\n  /** store response from auth flow (accountName, accessToken, idToken) in localState */\n  setAuthResult(authResponse: AuthResult) {\n    const { accessToken, idToken } = authResponse\n    if (!accessToken) throw Error('Cant setAuthResult. accessToken is missing')\n    this._accessTokenHelper.setIdToken(null) // clear the existing idToken first (so set accessToken wont throw a mismatch when set)\n    this.accessToken = accessToken // saves the token to localstorage\n    if (idToken) {\n      this._accessTokenHelper.setIdToken(idToken)\n    }\n  }\n}\n", "import { ApiEndpoint } from './models'\nimport versionJson from './version.json'\n\nexport const externalWalletsNotImplemented = ['metro']\nexport const defaultOreIdServiceUrl = 'https://service.oreid.io'\nexport const { version } = versionJson\nexport const publicApiEndpoints = [ApiEndpoint.LoginUserWithToken, ApiEndpoint.NewUserWithToken] // api endpoints that dont require authorization\n", "import OreIdContext from '../core/IOreidContext'\nimport {\n  ApiKeyUsedFor,\n  CreateTransactionData,\n  ExternalWalletType,\n  SignatureProviderSignResult,\n  SignWithOreIdResult,\n  TransactionData,\n} from '../models'\nimport TransitHelper from '../transit/TransitHelper'\nimport {\n  assertHasApiKey,\n  callApiCanAutosignTransaction,\n  callApiCustodialSignTransaction,\n  callApiSignTransaction,\n} from '../api'\nimport { getOreIdSignUrl } from '../core/urlGenerators'\nimport Helpers from '../utils/helpers'\nimport UalHelper from '../ual/UalHelper'\nimport { User } from '../user/user'\n\nexport default class Transaction {\n  constructor(args: { oreIdContext: OreIdContext; user: User; data: TransactionData }) {\n    this._oreIdContext = args.oreIdContext\n    this._user = args.user\n    this.assertValidTransactionAndSetData(args.data)\n    this._transitHelper = new TransitHelper({ oreIdContext: this._oreIdContext, user: this._user })\n    this._ualHelper = new UalHelper({ oreIdContext: this._oreIdContext, user: this._user })\n  }\n\n  private _oreIdContext: OreIdContext\n\n  private _data: TransactionData\n\n  private _transitHelper: TransitHelper\n\n  private _ualHelper: UalHelper\n\n  private _user: User\n\n  get data() {\n    return this._data\n  }\n\n  /** ensure all required parameters are provided */\n  assertValidTransactionAndSetData(createTransactionData: CreateTransactionData) {\n    const { chainNetwork, transaction, signedTransaction } = createTransactionData || {}\n    const missingFields: string[] = []\n    const validationIssues: string[] = []\n\n    if (!this._user || !this._user.hasData) {\n      throw new Error('Make sure that a user has been authenticated and that youve called user.getData()')\n    }\n\n    // required fields\n    if (!chainNetwork) missingFields.push('chainNetwork')\n    if (!transaction && !signedTransaction) missingFields.push('transaction OR signedTransaction')\n    // validaton rules\n    if (!this._user.accountName)\n      validationIssues.push('Transaction Data error - Expecting a user.accountName - is the user logged-in in?')\n    if (transaction && signedTransaction) validationIssues.push('Only provide one: transaction OR signedTransaction')\n\n    // TODO: call this.validate()\n\n    // transaction OR signedTransaction - check for valid JSON object\n\n    if (!Helpers.isNullOrEmpty(missingFields)) {\n      throw new Error(`Transaction parameter(s) missing: ${missingFields.join(', ')}`)\n    }\n    if (!Helpers.isNullOrEmpty(validationIssues)) {\n      throw new Error(`Transaction parameter error: ${validationIssues.join(', ')}`)\n    }\n\n    this.setTransactionData(createTransactionData)\n  }\n\n  private setTransactionData(createTransactionData: CreateTransactionData) {\n    // account param is set to logged-in user\n    this._data = {\n      account: this._user.accountName,\n      ...createTransactionData,\n    }\n    // set encoded transaction properties\n    if (createTransactionData?.transaction)\n      this._data.encodedTransaction = Helpers.base64Encode(JSON.stringify(createTransactionData.transaction))\n    if (createTransactionData?.signedTransaction)\n      this._data.encodedSignedTransaction = Helpers.base64Encode(\n        JSON.stringify(createTransactionData.signedTransaction),\n      )\n  }\n\n  // TODO: Consider providing property to explain that account/permission is in external wallet so developer can easily check\n  // TODO: Consider web-widget automatically handling pop-up of wallet when sign is called\n\n  /** ensure that the chainNetwork and chainAccount for the transaction are in the user's wallet\n   *  NOTE: This check is not required for a user signing with a wallet app - Since the account may be in the wallet and not yet added to OreId\n   */\n  assertTransactionAccountValidForUser() {\n    const { chainAccount, chainNetwork } = this._data\n    const { accountName } = this._user\n\n    const chainAccountsInWallet = this._user?.data?.chainAccounts?.find(\n      perm => perm.chainNetwork === chainNetwork && perm.chainAccount === chainAccount,\n    )\n\n    const allPermissionsExternal = chainAccountsInWallet?.permissions?.every(p => p.privateKeyStoredExterally === true)\n    const externalWalletType = chainAccountsInWallet?.permissions?.find(\n      p => p.privateKeyStoredExterally === true,\n    )?.externalWalletType\n\n    if (!chainAccountsInWallet) {\n      throw new Error(\n        `Can't find a chainAccount: ${chainAccount} for chainNetwork: ${chainNetwork} in user's oreId account: ${accountName}`,\n      )\n    }\n\n    if (allPermissionsExternal) {\n      throw new Error(\n        `ChainAccount: ${chainAccount} for chainNetwork: ${chainNetwork} appears to be in a wallet app (type: ${externalWalletType}) - use signWithWallet() to sign`,\n      )\n    }\n  }\n\n  // TODO: check user.chainAccounts that\n\n  /** validates that transaction is well-formed for the blockcahin\n   * Returns array of errors\n   */\n  async validate(): Promise<string[]> {\n    // TODO: call API validateTransaction on OREID Service - transaction/validate api endpoint\n    throw new Error('Not Implemented')\n  }\n\n  // TODO: add depricated\n  /**\n   * Returns a url to redirect the user's browser to - to sign transaction using OREID web interface\n   */\n  async getSignUrl(): Promise<SignWithOreIdResult> {\n    this.assertTransactionAccountValidForUser()\n    const transactionData = this.data\n    const { signCallbackUrl } = this._oreIdContext.options\n    // eslint-disable-next-line no-param-reassign\n    if (!transactionData?.signOptions) transactionData.signOptions = {}\n    // eslint-disable-next-line no-param-reassign\n    transactionData.signOptions.callbackUrl = signCallbackUrl\n    const signUrl = await getOreIdSignUrl(this._oreIdContext, transactionData)\n    return { signUrl, errors: null }\n  }\n\n  /**\n   * Whether the provided transaction (or signedTransaction) can be autoSigned via api (without user interaction)\n   * Requires an apiKey with the autoSign right\n   * Returns: true if transaction can be signed using tansaction.sign()\n   * */\n  async checkCanAutoSign() {\n    let autoSignCredentialsExist: boolean\n    try {\n      assertHasApiKey(this._oreIdContext, ApiKeyUsedFor.AutoSigning, '')\n      // this will throw if we don't have an api key with the right rights\n      ;({ autoSignCredentialsExist } = await callApiCanAutosignTransaction(this._oreIdContext, this._data))\n    } catch (error) {\n      return false // can't auto-sign\n    }\n    return autoSignCredentialsExist\n  }\n\n  /** Attempt to sign a transaction without user interaction\n   *  Expects user to have previously approved autoSign for transaction type and it hasn't expired\n   *  Call callApiCanAutosignTransaction() first to confirm that this transaction can be autoSigned before attempting this call\n   */\n  async autoSign() {\n    this.assertTransactionAccountValidForUser()\n    const transactionData = this.data\n    const { processId, signedTransaction, transactionId, errorCode, errorMessage } = await callApiSignTransaction(\n      this._oreIdContext,\n      { transactionData, autoSign: true },\n    )\n\n    if (errorCode || errorMessage) throw new Error(errorMessage)\n    return { processId, signedTransaction, transactionId }\n  }\n\n  /** Sign a transaction without user interaction\n   *  Requires a user's wallet password or encrypted password (a 'custodial' account managed by you)\n   *  Requires an apiKey with the proxySign right\n   */\n  async signWithPassword(userPassword?: string, userPasswordEncrypted?: string) {\n    this.assertTransactionAccountValidForUser()\n    const transactionData = this.data\n    if (!transactionData?.signOptions) transactionData.signOptions = {}\n    if (userPassword) transactionData.signOptions.userPassword = userPassword\n    if (userPasswordEncrypted) transactionData.signOptions.userPasswordEncrypted = userPasswordEncrypted\n\n    if (transactionData.signOptions.userPassword && transactionData.signOptions.userPasswordEncrypted) {\n      throw new Error('Provide either a userPassword OR userPasswordEncrypted param. Both were provided.')\n    }\n\n    const { processId, signedTransaction, transactionId, errorCode, errorMessage } =\n      await callApiCustodialSignTransaction(this._oreIdContext, { transactionData, autoSign: false })\n    if (errorCode || errorMessage) throw new Error(errorMessage)\n    return { processId, signedTransaction, transactionId }\n  }\n\n  /** Sign with a supported blockchain wallet via Transit provider */\n  async signWithWallet(walletType: ExternalWalletType): Promise<{\n    signedTransaction: SignatureProviderSignResult\n  }> {\n    const transactionData = this.data\n    const signResult = await this._oreIdContext.walletHelper.signWithWallet(walletType, transactionData)\n    return signResult\n  }\n}\n", "import HmacSHA256 from 'crypto-js/hmac-sha256'\nimport Axios from 'axios'\nimport Helpers from './helpers'\n\nexport function generateHmac(secret: string, data: string) {\n  const hmac = HmacSHA256(data, secret)\n  return hmac.toString()\n}\n\n/** Generate HMAC for data string\n *  data param can be stringified object\n *  If apiKey is not provided, expects useProxyServer:true and a proxy server to be available to generate the hmac\n *  Expects proxyserver /oreid/hmac to host an endpoint to sign with the apiKey and return the hmac\n */\nexport async function generateHmacWithApiKeyOrProxyServer(useProxyServer: boolean, apiKey: string, data: string) {\n  if (!useProxyServer && Helpers.isNullOrEmpty(apiKey)) {\n    throw new Error('Cant generate hmac. apiKey missing or empty - its required if not using a proxy server')\n  }\n\n  let hmac: string\n  if (useProxyServer) {\n    try {\n      // get an hmac from the proxy server endpoint (since it has the secret apiKey)\n      const response = await Axios.post('/oreid/hmac', JSON.stringify({ data }), {\n        headers: { 'Content-Type': 'application/json' },\n      })\n      hmac = response?.data?.hmac\n    } catch (networkError) {\n      const error = this.getErrorFromAxiosError(networkError)\n      throw error\n    }\n  } else {\n    hmac = generateHmac(apiKey, data)\n  }\n  return hmac\n}\n\n/** Generate HMAC for url string and append it to end or url e.g. http:/nnnnnn&hmac=xxx */\nexport async function appendHmacToUrl(useProxyServer: boolean, apiKey: string, url: string) {\n  if (Helpers.isNullOrEmpty(url)) {\n    throw new Error('Cant generate hmac. url missing or empty')\n  }\n\n  const hmac = await generateHmacWithApiKeyOrProxyServer(useProxyServer, apiKey, url)\n\n  const urlEncodedHmac = encodeURIComponent(hmac)\n  // correct hmac already in place\n  if (url.includes(`&hmac=${urlEncodedHmac}`)) {\n    return url\n  }\n  return `${url}&hmac=${urlEncodedHmac}`\n}\n", "import { UserSourceData } from '../user/models'\nimport IStorage from '../core/IStorage'\n\nexport default class LocalState {\n  constructor(appId: string, storage: IStorage) {\n    this.appId = appId\n    this.cachedaccessToken = null\n    this.cachedUser = null\n    this.storage = storage\n  }\n\n  appId: string\n\n  cachedaccessToken: string\n\n  cachedUser: UserSourceData\n\n  storage: IStorage\n\n  accessTokenKey() {\n    return `oreid.${this.appId}.accessToken`\n  }\n\n  get accessToken(): string {\n    if (!this.cachedaccessToken) this.loadAccessToken()\n    return this.cachedaccessToken\n  }\n\n  loadAccessToken() {\n    this.cachedaccessToken = this.storage.getItem(this.accessTokenKey())\n  }\n\n  saveAccessToken(accessToken: string) {\n    if (accessToken) {\n      this.cachedaccessToken = accessToken\n      this.storage.setItem(this.accessTokenKey(), accessToken)\n    } else {\n      this.clearAccessToken()\n    }\n  }\n\n  clearAccessToken() {\n    this.cachedaccessToken = null\n    this.storage.removeItem(this.accessTokenKey())\n  }\n\n  clear() {\n    this.clearAccessToken()\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-classes-per-file */\n/*\n\nHandles storage to local storage, or cookies, whatever is available to the client\n\nMostly copied originally copied from Auth0.js but modifed to use a class\nhttps://github.com/auth0/auth0.js/tree/master/src/helper/storage\n\n*/\n\nimport * as Cookie from 'js-cookie'\nimport { JSONObject } from '../models'\nimport IStorage from '../core/IStorage'\nimport Helpers from './helpers'\n\nclass CookieStorage implements IStorage {\n  getItem(key: string): string {\n    return Cookie.get(key)\n  }\n\n  removeItem(key: string) {\n    Cookie.remove(key)\n  }\n\n  setItem(key: string, value: string | object, options?: Cookie.CookieAttributes): string {\n    const params = {\n      expires: 1, // 1 day\n      ...options,\n    }\n    return Cookie.set(key, value, params)\n  }\n}\n\nclass LocalStorage implements IStorage {\n  constructor() {\n    if (window) {\n      // some browsers throw an error when trying to access localStorage\n      // when localStorage is disabled.\n      this.storage = window.localStorage\n    } else {\n      Helpers.log('Not running in Browser. Using CookieStorage instead.')\n    }\n  }\n\n  storage: Storage\n\n  getItem(key: string): string {\n    if (this.storage) {\n      return this.storage.getItem(key)\n    }\n    return null\n  }\n\n  removeItem(key: string) {\n    if (this.storage) {\n      this.storage.removeItem(key)\n    }\n  }\n\n  setItem(key: string, value: string, options?: any) {\n    if (this.storage) {\n      this.storage.setItem(key, value)\n    }\n  }\n}\n\n/** does not store or retrieve any values - allows 'disabling' of storage */\nexport class DummyStorage implements IStorage {\n  getItem(key: any): any {\n    return null\n  }\n\n  removeItem(key: any) {\n    // empty\n  }\n\n  setItem(key: any, value: any, options?: any) {\n    // empty\n  }\n}\n\n/** stores items in memory - does not persist across instances */\nexport class MemoryStorage implements IStorage {\n  memoryCache: JSONObject = {}\n\n  getItem(key: any): any {\n    if (key in this.memoryCache) return this.memoryCache[key]\n    return null\n  }\n\n  removeItem(key: any): void {\n    if (!this.getItem(key)) return\n    delete this.memoryCache[key]\n  }\n\n  setItem(key: any, value: any, options?: any) {\n    this.memoryCache[key] = value\n  }\n}\n\nclass StorageHandler implements IStorage {\n  constructor(options = { tryLocalStorageFirst: true }) {\n    this.triedLocalStorage = false\n    this.triedCookieStorage = false\n\n    if (options.tryLocalStorageFirst === true) {\n      this.triedLocalStorage = true\n\n      try {\n        // designed to work on browser or server, so window might not exist\n        const localStorage = new LocalStorage()\n\n        if (localStorage && localStorage.storage) {\n          this.storage = localStorage\n        }\n      } catch (e) {\n        Helpers.log('Cant use localStorage. Using CookieStorage instead.', options)\n      }\n    }\n\n    if (!this.storage) {\n      this.storage = new CookieStorage()\n      this.triedCookieStorage = true\n    }\n  }\n\n  storage: LocalStorage | CookieStorage | DummyStorage | IStorage\n\n  triedLocalStorage: boolean\n\n  triedCookieStorage: boolean\n\n  failover() {\n    if (this.storage instanceof DummyStorage) {\n      return\n    }\n\n    let didSet = false\n\n    if (this.storage instanceof LocalStorage) {\n      if (!this.triedCookieStorage) {\n        this.storage = new CookieStorage()\n        this.triedCookieStorage = true\n        didSet = true\n      }\n    } else if (this.storage instanceof CookieStorage) {\n      if (!this.triedLocalStorage) {\n        this.storage = new LocalStorage()\n        this.triedLocalStorage = true\n        didSet = true\n      }\n    }\n\n    if (!didSet) {\n      this.storage = new DummyStorage()\n    }\n  }\n\n  getItem(key: string): any {\n    try {\n      return this.storage.getItem(key)\n    } catch (e) {\n      Helpers.log('Cant getItem in storage.', e)\n      this.failover()\n      return this.storage.getItem(key)\n    }\n  }\n\n  removeItem(key: string) {\n    try {\n      this.storage.removeItem(key)\n      return\n    } catch (e) {\n      Helpers.log('Cant removeItem in storage.', e)\n      this.failover()\n      this.storage.removeItem(key)\n    }\n  }\n\n  setItem(key: any, value: string | object, options?: any): string | void {\n    try {\n      return this.storage.setItem(key, value, options)\n    } catch (e) {\n      Helpers.log('Cant setItem in storage.', e)\n      this.failover()\n      return this.storage.setItem(key, value, options)\n    }\n  }\n}\n\nexport default StorageHandler\n", "import { callApiGetConfig } from '../api'\nimport { ChainNetwork, ChainPlatformType, ConfigType, SettingChainNetwork, SettingChainNetworkHost } from '../models'\nimport Helpers from '../utils/helpers'\nimport OreIdContext from './IOreidContext'\n\nexport default class Settings {\n  constructor(args: { oreIdContext: OreIdContext }) {\n    this._oreIdContext = args.oreIdContext\n    this._cachedChainNetworks = null\n  }\n\n  private _cachedChainNetworks: SettingChainNetwork[] = []\n\n  private _oreIdContext: OreIdContext\n\n  /** Calls getConfigFromApi() to retrieve settings for all chain networks defined by OreID service\n   * and caches the result */\n  async getAllChainNetworkSettings(): Promise<SettingChainNetwork[]> {\n    if (Helpers.isNullOrEmpty(this._cachedChainNetworks)) {\n      // load the chainNetworks list from the ORE ID API\n      const results = await this.getConfigFromApi(ConfigType.Chains)\n      this._cachedChainNetworks = results.chains // as SettingChainNetwork[]\n    }\n\n    return this._cachedChainNetworks\n  }\n\n  /** Returns Chain Network Settings for a specific chain */\n  async getChainNetworkSettings(chainNetwork: ChainNetwork) {\n    const networks = await this.getAllChainNetworkSettings()\n    return networks.find(n => n.network === chainNetwork)\n  }\n\n  /** Loads settings value from the server\n    e.g. configType='chains' returns valid chain types and addresses */\n  async getConfig(configType: ConfigType) {\n    return this.getConfigFromApi(configType)\n  }\n\n  /**\n   *  Call api services/config to get configuration values of a specific type\n   *  Returns: for configType:Config.Chains, returns array of SettingChainNetwork objects for all chains suported by the service\n   * */\n  async getConfigFromApi(configType: ConfigType.Chains) {\n    const values = await callApiGetConfig(this._oreIdContext, { configType })\n    if (Helpers.isNullOrEmpty(values)) {\n      throw new Error(`Not able to retrieve config values for ${configType}`)\n    }\n    return values\n  }\n\n  /** Returns network config (url, port, etc.) for specified chainNetwork */\n  async getChainNetworkNextworkConfig(chainNetwork: ChainNetwork): Promise<SettingChainNetworkHost> {\n    const networkSettings = await this.getChainNetworkSettings(chainNetwork)\n    if (!networkSettings) {\n      throw new Error(`Invalid chain network: ${chainNetwork}.`)\n    }\n    const { chainId, host, port, protocol } = networkSettings?.hosts[0] || {} // using first host\n    return { host, port, protocol, chainId }\n  }\n\n  /** Return ChainNetwork that matches chainId (as defined in OreId Chain Network Settings) */\n  async getChainNetworkByChainId(chainId: string) {\n    const networks = await this.getAllChainNetworkSettings()\n    const chainSettings = networks.find(n => n.hosts.find(h => h.chainId === chainId))\n\n    if (!Helpers.isNullOrEmpty(chainSettings)) {\n      return chainSettings.network\n    }\n    return null\n  }\n\n  /** Returns true if network is NOT an EOS sisterchain */\n  async isNotEosNetwork(chainNetwork: ChainNetwork) {\n    const networkSetting = await this._oreIdContext.settings.getChainNetworkSettings(chainNetwork)\n    return !(networkSetting.type === ChainPlatformType.eos || networkSetting.type === ChainPlatformType.ore)\n  }\n}\n", "import { getUalProviderAttributes, supportedUALProviders, ualProviderAttributesData } from '../ual/ualProviders'\nimport { getTransitProviderAttributes, transitProviderAttributesData } from '../transit'\nimport { externalWalletsNotImplemented } from '../constants'\nimport OreIdContext from '../core/IOreidContext'\nimport Helpers from '../utils/helpers'\nimport {\n  AuthProvider,\n  ChainNetwork,\n  ChainPlatformType,\n  ExternalWalletType,\n  LoginWithWalletOptions,\n  SignatureProviderSignResult,\n  SignStringParams,\n  SignStringResult,\n  TransactionData,\n} from '../models'\nimport TransitHelper from '../transit/TransitHelper'\nimport UalHelper from '../ual/UalHelper'\nimport { ExternalWalletInterface, WalletProviderAttributes } from './models'\n\nexport default class WalletHelper {\n  constructor(args: { oreIdContext: OreIdContext; transitHelper: TransitHelper; ualHelper: UalHelper }) {\n    this._oreIdContext = args.oreIdContext\n    this._transitHelper = args.transitHelper\n    this._ualHelper = args.ualHelper\n  }\n\n  _oreIdContext: OreIdContext\n\n  _transitHelper: TransitHelper\n\n  _ualHelper: UalHelper\n\n  /** Transit wallet plugin helper functions and connections */\n  get transitHelper() {\n    return this._transitHelper\n  }\n\n  /** Ual wallet plugin helper functions and connections */\n  get ualHelper() {\n    return this._ualHelper\n  }\n\n  //** Whether wallet type is a Transit or Ual wallet */\n  isAValidExternalWalletType(walletType: ExternalWalletType) {\n    return (\n      (this._transitHelper.isTransitProvider(walletType) || this._ualHelper.isUalProvider(walletType)) &&\n      !externalWalletsNotImplemented.includes(walletType)\n    )\n  }\n\n  /** Returns metadata about the installed external wallet type (e.g. name, logo) and which features it supports\n   *  If optional externalWalletInterface param provided, then gets Info for the specified type (Transit or UAL) instead of seeing what's installed\n   */\n  getExternalWalletInfo(\n    walletType: ExternalWalletType,\n    externalWalletInterface?: ExternalWalletInterface,\n  ): WalletProviderAttributes {\n    if (!this.isAValidExternalWalletType(walletType)) {\n      throw new Error(`Not a valid external wallet type: ${walletType}`)\n    }\n    if (\n      this._transitHelper.hasTransitProvider(walletType) ||\n      externalWalletInterface === ExternalWalletInterface.Transit\n    ) {\n      return getTransitProviderAttributes(walletType)\n    }\n    if (this._ualHelper.hasUalProvider(walletType) || externalWalletInterface === ExternalWalletInterface.Ual) {\n      return getUalProviderAttributes(walletType)\n    }\n    return null\n  }\n\n  /** Returns wallet metadata (for installed wallet providers) for a given chain */\n  getExternalWalletInfoByChain(chain: ChainPlatformType): WalletProviderAttributes[] {\n    const transitWalletsInstalledInfo = transitProviderAttributesData.filter(info =>\n      this._oreIdContext.transitProvidersInstalled.includes(info.providerName),\n    )\n    const ualWalletsInstalledInfo = ualProviderAttributesData.filter(info =>\n      this._oreIdContext.ualProvidersInstalled.includes(info.providerName),\n    )\n\n    return [...transitWalletsInstalledInfo, ...ualWalletsInstalledInfo].filter(p => p.chainType === chain)\n  }\n\n  /** Connect to the wallet provider\n   *  For some wallet types, this will include an unlock and 'login' flow to select a chain account\n   *  If a chainAccount is selected, it and it's associated publicKey (if available) will be saved to the user's OreId wallet as an 'external key' */\n  async connectToWalletProvider(loginOptions: LoginWithWalletOptions) {\n    const { walletType } = loginOptions\n    if (!this.isAValidExternalWalletType(walletType)) {\n      throw new Error(`Not a valid external wallet type: ${walletType}`)\n    }\n    if (this._transitHelper.hasTransitProvider(walletType)) {\n      return this._transitHelper.loginWithTransitProvider(loginOptions)\n    } else if (this._ualHelper.hasUalProvider(walletType)) {\n      return this._ualHelper.loginWithUalProvider(loginOptions)\n    }\n    throw new Error(`Wallet type ${walletType} invalid or not installed`)\n  }\n\n  /** Sign with a supported blockchain wallet via Transit provider */\n  async signWithWallet(\n    walletType: ExternalWalletType,\n    transactionData: TransactionData,\n  ): Promise<{ signedTransaction: SignatureProviderSignResult }> {\n    let signResult: { signedTransaction: SignatureProviderSignResult }\n    if (!this._oreIdContext.walletHelper.isAValidExternalWalletType(walletType)) {\n      throw new Error(`signWithWallet not supported for external wallet type: ${walletType}`)\n    }\n    const provider = Helpers.toEnumValue(AuthProvider, walletType)\n\n    if (this._transitHelper.hasTransitProvider(walletType)) {\n      // Treat as Transit interface\n      signResult = await this._transitHelper.signWithTransitProvider(transactionData, walletType)\n      // If we've signed a transaction with a key in a wallet, callDiscoverAfterSign() will add it to the user's wallet\n      const { account, chainNetwork } = transactionData\n      await this._transitHelper.callDiscoverAfterSign({ account, chainNetwork, signOptions: { provider } })\n    } else if (this._ualHelper.hasUalProvider(walletType)) {\n      // Treat as UAL interface\n      signResult = await this._ualHelper.signWithUalProvider(transactionData, walletType)\n      // await this.ualHelper.callDiscoverAfterSign({ account, chainNetwork, signOptions: { provider } })\n    }\n\n    return signResult\n  }\n\n  /** Sign an arbitrary string (instead of a transaction)\n   * This only supports Transit and Ual wallets\n   */\n  async signStringWithWallet(params: SignStringParams): Promise<SignStringResult> {\n    const { account, walletType, chainNetwork } = params\n    let signResult: SignStringResult\n    if (!this.isAValidExternalWalletType(walletType)) {\n      throw new Error(`signStringWithWallet not supported for external wallet type: ${walletType}`)\n    }\n    const provider = Helpers.toEnumValue(AuthProvider, walletType)\n\n    if (this._transitHelper.hasTransitProvider(walletType)) {\n      // Treat as Transit interface\n      if (!this._transitHelper.canSignString(walletType)) {\n        throw Error(`The walletType ${walletType} does not support signString`)\n      }\n      signResult = await this._transitHelper.signStringWithTransitProvider(params)\n      await this._transitHelper.callDiscoverAfterSign({ account, chainNetwork, signOptions: { provider } })\n    } else if (this._ualHelper.hasUalProvider(walletType)) {\n      // Treat as UAL interface\n      if (!this._ualHelper.canSignString(walletType)) {\n        throw Error(`The walletType ${walletType} does not support signString`)\n      }\n      signResult = await this._ualHelper.signStringWithUalProvider(params)\n      // await this.ualHelper.callDiscoverAfterSign({ account, chainNetwork, signOptions: { provider } })\n    }\n    return signResult\n  }\n\n  /** Throw if the provider doesnt support the specified chainNetwork */\n  async assertWalletTypeValidForChainNetwork(\n    walletType: ExternalWalletType,\n    chainNetwork: ChainNetwork,\n    externalWalletInterface?: ExternalWalletInterface,\n  ) {\n    const { chainType } = this.getExternalWalletInfo(walletType, externalWalletInterface)\n    const networks = await this._oreIdContext.settings.getAllChainNetworkSettings()\n    const isValid = !!networks.find(n => n.network === chainNetwork && n.type === chainType)\n    if (!isValid) {\n      throw Error(\n        `External Wallet Type: ${walletType} doesnt support chainNetwork ${chainNetwork}. Hint: It supports networks of type ${chainType}.`,\n      )\n    }\n  }\n\n  // Supported features by wallet provider\n\n  /** whether discovery is supported by the provider */\n  canDiscover(walletType: ExternalWalletType, externalWalletInterface?: ExternalWalletInterface) {\n    return this.getExternalWalletInfo(walletType, externalWalletInterface)?.supportsDiscovery || false\n  }\n\n  /** whether signString is supported by the provider */\n  canSignString(walletType: ExternalWalletType, externalWalletInterface?: ExternalWalletInterface) {\n    return this.getExternalWalletInfo(walletType, externalWalletInterface)?.supportsSignArbitrary || false\n  }\n\n  /** whether call to discover is required by provider before login */\n  requiresDiscoverToLogin(walletType: ExternalWalletType, externalWalletInterface?: ExternalWalletInterface) {\n    return this.getExternalWalletInfo(walletType, externalWalletInterface)?.requiresDiscoverToLogin || false\n  }\n\n  /** whether call to logout then login is required by provider before discover */\n  requiresLogoutLoginToDiscover(walletType: ExternalWalletType, externalWalletInterface?: ExternalWalletInterface) {\n    return this.getExternalWalletInfo(walletType, externalWalletInterface)?.requiresLogoutLoginToDiscover || false\n  }\n\n  /** default path index for provider (if any) */\n  defaultDiscoveryPathIndexList(\n    walletType: ExternalWalletType,\n    externalWalletInterface?: ExternalWalletInterface,\n  ): number[] {\n    return this.getExternalWalletInfo(walletType, externalWalletInterface)?.defaultDiscoveryPathIndexList || null\n  }\n\n  /** help text displayed to user for provider */\n  helpTextForProvider(walletType: ExternalWalletType, externalWalletInterface?: ExternalWalletInterface) {\n    return this.getExternalWalletInfo(walletType, externalWalletInterface)?.helpText || null\n  }\n}\n", "/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-console */\nimport axios from 'axios'\nimport {\n  ApiCustodialMigrateAccountParams,\n  ApiCustodialNewAccountParams,\n  ApiCustodialSignStringParams,\n  ApiCustodialSignStringResult,\n  ApiGetAppTokenParams,\n  callApiCustodialMigrateAccount,\n  callApiCustodialNewAccount,\n  callApiCustodialSignString,\n  callApiGetAppToken,\n} from '../api'\nimport { Auth } from '../auth/auth'\nimport { defaultOreIdServiceUrl, publicApiEndpoints, version } from '../constants'\nimport {\n  ApiEndpoint,\n  AppAccessToken,\n  AppAccessTokenMetadata,\n  ExternalWalletType,\n  NewAccountResult,\n  ProcessId,\n  RequestType,\n  SignResult,\n  SignStringParams,\n  SignStringResult,\n  TransactionData,\n  WebWidgetProps,\n} from '../models'\nimport { PopupPlugin } from '../plugins'\nimport { Plugin } from '../plugins/plugin'\nimport Transaction from '../transaction/transaction'\nimport TransitHelper from '../transit/TransitHelper'\nimport UalHelper from '../ual/UalHelper'\nimport Helpers from '../utils/helpers'\nimport { appendHmacToUrl, generateHmacWithApiKeyOrProxyServer } from '../utils/hmac'\nimport LocalState from '../utils/localState'\nimport StorageHandler from '../utils/storage'\nimport IOreidContext from './IOreidContext'\nimport { OreIdOptions } from './IOreIdOptions'\nimport Settings from './Settings'\nimport WalletHelper from '../wallets/WalletHelper'\n\nconst { isNullOrEmpty } = Helpers\n\nexport default class OreId implements IOreidContext {\n  constructor(options: OreIdOptions) {\n    this._options = null\n    this.validateAndSetOptions(options)\n    const storageHandler = this.options?.storageHandler || new StorageHandler()\n    this._localState = new LocalState(this.options?.appId, storageHandler)\n    this._settings = new Settings({ oreIdContext: this })\n    this._auth = new Auth({ oreIdContext: this })\n    this._transitHelper = new TransitHelper({ oreIdContext: this, user: this._auth.user })\n    this._transitHelper.installTransitProviders(this.options?.eosTransitWalletProviders)\n    this._ualHelper = new UalHelper({ oreIdContext: this, user: this._auth.user })\n    this._ualHelper.installUalProviders(this.options?.ualAuthenticators)\n    this._walletHelper = new WalletHelper({\n      oreIdContext: this,\n      transitHelper: this._transitHelper,\n      ualHelper: this._ualHelper,\n    })\n    this._initializerPlugins = options.plugins || {}\n    this._isInitialized = false\n  }\n\n  private _auth: Auth\n\n  private _initializerPlugins: { popup?: Plugin<PopupPlugin> }\n\n  private _isInitialized: boolean\n\n  private _localState: LocalState\n\n  private _options: OreIdOptions\n\n  private _popup?: PopupPlugin\n\n  private _settings: Settings\n\n  private _transitHelper: TransitHelper\n\n  private _ualHelper: UalHelper\n\n  private _walletHelper: WalletHelper\n\n  isBusy: boolean\n\n  /** Names of all Transit providers installed (provided to this constructor) */\n  transitProvidersInstalled: ExternalWalletType[] = []\n\n  /** Names of all Ual wallet providers installed (provided to this constructor) */\n  ualProvidersInstalled: ExternalWalletType[] = []\n\n  /** accessToken (stored in localState) */\n  get accessToken() {\n    return this.auth.accessToken\n  }\n\n  /** accessToken helper functions and current state */\n  get accessTokenHelper() {\n    return this.auth.accessTokenHelper\n  }\n\n  /** authentication flows and login state */\n  get auth() {\n    return this._auth\n  }\n\n  /** whether the current appId is a demo app */\n  get isDemoApp() {\n    return this.options?.appId?.toLowerCase().startsWith('demo') || false\n  }\n\n  /** whether init() has been called */\n  get isInitialized() {\n    return this._isInitialized\n  }\n\n  /** helper to persist data (e.g. accessToken) */\n  get localState() {\n    return this._localState\n  }\n\n  /** oreid options used in constructor */\n  get options() {\n    return this._options\n  }\n\n  /** installed popup plugin */\n  get popup() {\n    this.assertIsInitialized()\n    return this._popup\n  }\n\n  /** If we're running in the browser, we must use a proxy server to talk to OREID api\n  Unless, we are running the demo app, in which case CORS is disabled by OREID server */\n  get requiresProxyServer() {\n    // if we aren't using an apiKey, we dont ever need a proxy server\n    if (this?.options?.isUsingProxyServer) return true\n    if (!this?.options?.apiKey) return false\n    return Helpers.isInBrowser && !this.isDemoApp\n  }\n\n  /** oreid settings helper */\n  get settings() {\n    return this._settings\n  }\n\n  /** External wallet helper functions and connections */\n  get walletHelper() {\n    return this._walletHelper\n  }\n\n  /** perform asynchronous setup tasks */\n  async init() {\n    if (this.isInitialized) return\n\n    if (this._initializerPlugins?.popup) {\n      this._popup = await this._initializerPlugins?.popup?.init(this)\n    }\n\n    this._isInitialized = true\n  }\n\n  /** throw and error if oreId is not initialized yet */\n  private assertIsInitialized() {\n    if (!this.isInitialized) {\n      throw new Error('OreId is not initialized - call init() first')\n    }\n  }\n\n  /** Clears user's accessToken and user profile data */\n  logout() {\n    this.auth.logout()\n  }\n\n  /** Sign an arbitrary string (instead of a transaction)\n   * This only supports Transit and Ual wallets\n   */\n  async signStringWithWallet(params: SignStringParams): Promise<SignStringResult> {\n    return this.walletHelper.signStringWithWallet(params)\n  }\n\n  /** Sign an arbitrary string (instead of a transaction) using ORE ID\n   */\n  async custodialSignString(params: ApiCustodialSignStringParams): Promise<ApiCustodialSignStringResult> {\n    const response = await callApiCustodialSignString(this, params)\n    if (response?.errorCode || response?.errorMessage) throw new Error(response.errorMessage)\n    return response\n  }\n\n  /** Create a new user account that is managed by your app\n   * Requires a wallet password (userPassword) on behalf of the user\n   * Requires an apiKey with the createUser right\n   * Returns: accountName of newly created account\n   *       OR errorCode, errorMessage, and message if any problems */\n  async custodialNewAccount(accountOptions: ApiCustodialNewAccountParams) {\n    const response = await callApiCustodialNewAccount(this, accountOptions)\n    if (response?.errorCode || response?.errorMessage) throw new Error(response.errorMessage)\n    return response\n  }\n\n  /** Call the custodial/migrate-user api\n   * Converts a user account to a new account type\n   * Usually used to convert a virtal account to a native account (on-chain)\n   * .. and expects the account to be a managed (custodial) account\n   * Requires a wallet password (userPassword) on behalf of the user\n   * Requires an apiKey with the accountMigration right\n   * Returns: account name of migrated account\n   *       OR errorCode, errorMessage, and message if any problems */\n  async custodialMigrateAccount(migrateOptions: ApiCustodialMigrateAccountParams) {\n    const response = await callApiCustodialMigrateAccount(this, migrateOptions)\n    if (response?.errorCode || response?.errorMessage) throw new Error(response.errorMessage)\n    return response\n  }\n\n  /** Returns metadata about the installed external wallet type (e.g. name, logo) and which features it supports\n   *  Returns different data depending on the wallet interface type (Transit or Ual)\n   */\n  getExternalWalletInfo(walletType: ExternalWalletType) {\n    return this.walletHelper.getExternalWalletInfo(walletType)\n  }\n\n  /** Create a new Transaction object - used for composing and signing transactions */\n  async createTransaction(data: TransactionData) {\n    if (!this._auth.user.hasData) {\n      await this._auth.user.getData()\n    }\n    return new Transaction({ oreIdContext: this, user: this.auth.user, data })\n  }\n\n  /** Call the setBusyCallback() callback provided in optiont\n   *  Use true or false to set the current busy state\n   */\n  setIsBusy(value: boolean) {\n    if (this.isBusy !== value) {\n      this.isBusy = value\n      if (this.options.setBusyCallback) {\n        this.options.setBusyCallback(value)\n      }\n    }\n  }\n\n  // TODO add validation of newer options\n  /**  Validates startup options */\n  validateAndSetOptions(options: OreIdOptions) {\n    const { appId, apiKey, oreIdUrl } = options || {}\n    let errorMessage = ''\n    // set options now since this.requiresProxyServer needs it set\n    this._options = options\n\n    // Apply default options\n    if (options) this.options.oreIdUrl = oreIdUrl || defaultOreIdServiceUrl\n\n    if (!appId) {\n      errorMessage +=\n        '\\n --> Missing required parameter - appId. You can get an appId when you register your app with ORE ID.'\n    }\n\n    // api-key and service-key not allowed if this is being instantiated in the browser\n    if (this.requiresProxyServer && apiKey) {\n      errorMessage +=\n        '\\n --> You cant include the apiKey when creating an instance of OreId that runs in the browser. This is to prevent your key from being visible in the browser. If this app runs solely in the browser (like a Create React App), you need to set-up a proxy server to protect your keys. Refer to https://github.com/TeamAikon/ore-id-docs. Note: You wont get this error when using the appId and apiKey for a demo app (appId starts with demo_).'\n    }\n    if (errorMessage !== '') {\n      throw new Error(`Options are missing or invalid. ${errorMessage}`)\n    }\n  }\n\n  /** Gets a single-use token to access the service */\n  async getAppAccessToken(params?: ApiGetAppTokenParams) {\n    return callApiGetAppToken(this, params)\n  }\n\n  /** Extracts the response parameters on the /new-account callback URL string */\n  handleNewAccountResponse(callbackUrlString: string): NewAccountResult {\n    const {\n      chain_account: chainAccount,\n      process_id: processId,\n      state,\n      errors,\n    } = Helpers.extractDataFromCallbackUrl(callbackUrlString)\n    this.setIsBusy(false)\n    return { chainAccount, processId, state, errors }\n  }\n\n  /** Extracts and returns the response parameters from the /sign callback URL string */\n  handleSignCallback(callbackUrlString: string): SignResult {\n    let signedTransaction\n    const {\n      signed_transaction: encodedTransaction,\n      process_id: processId,\n      state,\n      transaction_id: transactionId,\n      errors,\n    } = Helpers.extractDataFromCallbackUrl(callbackUrlString)\n\n    if (!errors) {\n      // Decode base64 parameters\n      signedTransaction = Helpers.base64DecodeSafe(encodedTransaction)\n    }\n    this.setIsBusy(false)\n    return { signedTransaction, processId, state, transactionId, errors }\n  }\n\n  /** Updates and returns a WebWidgetProps object to include two new fields: timestamp, signature\n   *  timestamp: current server time\n   *  signature: HMAC signature of the object including the timestamp - calculated using the apiKey\n   *  IF incoming props already has a value for timestamp - it is kept\n   *  If both incoming and timestamp and signature are already present, this returns incoming data unmodified\n   *  If an apiKey is not provided in options, this function expects a proxy server endpoint at /oreid/hmac to generate the siganture with the secured apiKey\n   *  Returns the updated object that includes the timestamp and the signature fields\n   */\n  async appendTimestampAndSignatureToWidgetProps(data: WebWidgetProps) {\n    // if we already have timestamp and signature, just return data as is\n    if (data?.timestamp && data?.signature) return data\n    const signedProps: Partial<WebWidgetProps> = { ...data }\n    // keep existing timestamp if there is one\n    const nowTimestamp = data?.timestamp || new Date().getTime()\n    signedProps.origin = data?.origin || window?.location.origin\n    signedProps.timestamp = nowTimestamp\n    // if we have an apiKey, add a signature\n    try {\n      signedProps.signature = await generateHmacWithApiKeyOrProxyServer(\n        this.requiresProxyServer,\n        this.options.apiKey,\n        JSON.stringify(Helpers.sortJson(data)), // props including timestamp - sortJson ensures json members are always in the same order\n      )\n    } catch (error) {\n      // do nothing, we just can't add a signature since apiKey and proxyServer are missing\n    }\n    return signedProps as WebWidgetProps\n  }\n\n  /** Helper function to call api endpoint and inject api-key\n    here params can be query params in case of a GET request or body params in case of POST request\n    processId (optional) - can be used to associate multiple calls together into a single process flow\n  */\n  async callOreIdApi(\n    requestMethod: RequestType,\n    endpoint: ApiEndpoint,\n    params: { [key: string]: any } = {},\n    /** Required if apiKey is not provider (optional otherwise) */\n    overrideAccessToken?: string,\n    processId: ProcessId = null,\n  ) {\n    let urlString\n    let response\n    const headers: { [key: string]: any } = {}\n    const { apiKey, oreIdUrl } = this.options\n    // if running in browser, we dont call the api directly, we use a proxy server (unless we're running a demo app)\n    // calls to the proxy server must start with '/' (not an host like http://server) and we'll prepend 'oreid' to it e.g. /oreid/api/xxx to make it easier to do proxy server routing\n    const oreIdUrlBase = this.requiresProxyServer ? '/oreid' : oreIdUrl\n    const url = `${oreIdUrlBase}/api/${endpoint}`\n    const accessToken = overrideAccessToken || this.accessToken\n\n    if (!apiKey && !accessToken && !publicApiEndpoints.includes(endpoint)) {\n      throw new Error('OreId API request requires either apiKey or accessToken')\n    }\n\n    // apiKey is optional (accessToken is required if apiKey not provided)\n    if (apiKey) {\n      headers['api-key'] = apiKey\n    }\n\n    if (accessToken) {\n      headers.Authorization = `Bearer ${accessToken}`\n    }\n\n    if (!isNullOrEmpty(processId)) {\n      headers['process-id'] = processId\n    }\n    // add sdk version to request header\n    headers['sdk-version'] = `oreidjs/${version}`\n\n    try {\n      // GET\n      if (requestMethod === RequestType.Get) {\n        if (!isNullOrEmpty(params)) {\n          urlString = Object.keys(params)\n            .map(key => `${key}=${params[key]}`)\n            .join('&')\n        }\n\n        const urlWithParams = urlString ? `${url}?${urlString}` : url\n        response = await axios.get(urlWithParams, { headers })\n      }\n      // POST\n      if (requestMethod === RequestType.Post) {\n        const body = !isNullOrEmpty(params) ? JSON.stringify(params) : null\n        response = await axios.post(url, body, {\n          headers: { 'Content-Type': 'application/json', ...headers },\n        })\n      }\n    } catch (networkError) {\n      const error = Helpers.getErrorFromAxiosError(networkError)\n      throw error\n    }\n    const data = response?.data\n    return data\n  }\n\n  /** Add an app access token and hmac signature to the url\n   *  If running in browser, calls proxy server at /oreid/prepare-url to do both (since they require teh apiKey secret) */\n  async addAccessTokenAndHmacToUrl(\n    urlString: string,\n    appAccessTokenMetadata: AppAccessTokenMetadata,\n    overrideAppAccessToken?: AppAccessToken,\n  ): Promise<string> {\n    const { appId } = this.options\n    // running in browser\n    if (this.requiresProxyServer) {\n      // retrieve and append an app-access-token and a matching hmac signature to the end of the url\n      // calling the proxy server is required to protect the secrets needed to get the access token and to generate the hmac\n      const response = await axios.post('/oreid/prepare-url', { appAccessTokenMetadata, urlString })\n      return response?.data?.urlString\n    }\n    let completeUrl = `${urlString}&app_id=${appId}`\n\n    // if we need app token metadata, then we generate and add an appAccessToken\n    if (!isNullOrEmpty(appAccessTokenMetadata)) {\n      const appAccessToken = overrideAppAccessToken || (await this.getAppAccessToken({ appAccessTokenMetadata }))\n      completeUrl = `${completeUrl}&app_access_token=${appAccessToken}`\n    }\n\n    // An hmac is no longer always required - however, if we have an apiKey, we can generate one\n    if (this.options?.apiKey) {\n      completeUrl = await appendHmacToUrl(false, this.options?.apiKey, completeUrl)\n    }\n\n    return completeUrl\n  }\n}\n", "export * from './popupPlugin/models'\n\nexport enum PluginType {\n  Popup = 'popup',\n}\n"],
  "mappings": "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",
  "names": ["generateUUID", "URL", "atob", "global", "encode", "decode", "RIPEMD160", "divmod", "f", "i", "j", "__values", "KeyType", "SerializerState", "SerialBuffer", "_a", "_b", "c", "__values", "_c", "type", "Api", "_a", "__awaiter", "_b", "__values", "_c", "__extends", "RpcError", "__values", "JsonRpc", "f", "_a", "_b", "_c", "getRandomValues", "rnds8", "byteToHex", "bytesToUuid", "i", "rng", "bytesToUuid", "v4", "_a", "__awaiter", "keyData", "_this", "account", "_i", "_a", "_b", "_c", "ExtData", "DecodeError", "_a", "ExtensionCodec", "_a", "encode", "decode", "Encoder", "CachedKeyDecoder", "Decoder", "_a", "_b", "__await", "_a", "_b", "encode", "require_axios", "Math", "undefined", "crypto", "Math", "n", "H", "f", "decode", "RequestType", "ApiEndpoint", "ChainPlatformType", "ChainNetwork", "AccountType", "LoginProvider", "ExternalWalletType", "AuthProvider", "ApiKeyUsedFor", "ExternalWalletInterface", "ConfigType", "RecoverAccountAction", "WebWidgetAction", "SignStringMethod", "replaceAll", "inString", "search", "replacement", "replace", "RegExp", "Helpers", "isNullOrEmpty", "obj", "Array", "isArray", "length", "Object", "keys", "constructor", "log", "message", "data", "jwtDecodeSafe", "token", "decoded", "this", "jwtDecode", "error", "parseUrlParams", "fullPath", "searchString", "urlParamsObject", "urlObject", "URL", "hash", "slice", "URLSearchParams", "forEach", "value", "key", "decodeURIComponent", "tryParseJSON", "jsonString", "unescape", "replaceQuotes", "finalJsonString", "isAString", "trim", "decodeURI", "o", "JSON", "parse", "jsonParseComplexObjectReviver", "type", "Buffer", "from", "isANumber", "values", "entries", "map", "_a", "__read", "every", "val", "Uint8Array", "base64DecodeSafe", "encodedString", "Base64", "decode", "base64Encode", "valueIn", "isAnObject", "stringify", "encode", "sleep", "ms", "Promise", "resolve", "setTimeout", "createGuid", "uuidv4", "v4", "isInEnum", "enumType", "includes", "toEnumValue", "e", "throwIfInvalid", "errMsg", "concat", "Error", "getErrorCodesFromParams", "params", "errorCodes", "errorString", "error_code", "errorCode", "errorMessage", "error_message", "split", "push", "extractDataFromCallbackUrl", "url", "errors", "__assign", "asyncForEach", "array", "callback", "index", "sent", "getClaimFromJwtTokenBySearchString", "decodedToken", "item", "getErrorFromAxiosError", "toLowerCase", "code", "isAxiosError", "response", "t", "errorCodesList", "join", "String", "isADate", "Date", "isABoolean", "Boolean", "Number", "isNaN", "assertValidProvider", "provider", "mapAuthProviderToWalletType", "isCustodial", "Custodial", "isValidEmail", "email", "test", "sortJson", "stringified", "canonicalize", "getUniqueValues", "Set", "runAtTime", "executionEoochTime", "now", "Math", "max", "objectsAreEqual", "a", "b", "keysA", "keysB", "keysA_1", "keysA_1_1", "done", "next", "toString", "n", "c", "isInBrowser", "window", "assertHasApiKeyOrAccessToken", "oreIdContext", "apiName", "accessToken", "options", "apiKey", "assertHasApiKey", "usedFor", "usedFprMsg", "assertParamsHaveRequiredValues", "paramNames", "missing", "p", "assertParamsHaveOnlyOneOfValues", "filter", "extractProcessIdFromData", "processId", "callApiAddPermission", "AddPermission", "account", "permission", "parentPermission", "optionalParams", "queryParams", "chainAccount", "chainNetwork", "publicKey", "callOreIdApi", "Get", "callApiGetAppToken", "AppToken", "appAccessTokenMetadata", "CreateUser", "Post", "appAccessToken", "callApiCanAutosignTransaction", "CanAutoSign", "signedTransaction", "transaction", "transactionChainAccount", "AutoSigning", "body", "chain_account", "chain_network", "signed_transaction", "transaction_chain_acccount", "callApiConvertOauthTokens", "ConvertOauthTokens", "idToken", "access_token", "id_token", "callApiCustodialMigrateAccount", "CustodialMigrateAccount", "toType", "userPassword", "userPasswordEncrypted", "to_type", "user_password", "user_password_encrypted", "AccountMigration", "callApiCustodialNewAccount", "CustodialNewAccount", "accountType", "delayWalletSetup", "emailVerified", "isTestUser", "name", "picture", "phone", "phoneVerified", "userName", "account_type", "delay_wallet_setup", "email_verified", "is_test_user", "phone_verified", "user_name", "callApiCustodialSignString", "CustodialSignString", "stringToSign", "signMethod", "string_to_sign", "sign_method", "ProxySigning", "callApiDeleteTestUser", "DeleteTestUser", "callApiGetConfig", "GetConfig", "configType", "callApiGetUser", "GetUser", "callApiLoginUserWithToken", "LoginUserWithToken", "callApiNewUserWithToken", "NewUserWithToken", "callApiPasswordLessSendCode", "PasswordLessSendCode", "encodeURIComponent", "callApiPasswordLessVerifyCode", "PasswordLessVerifyCode", "composeSignBodyFromTransactionData", "_b", "transactionData", "expireSeconds", "signedTransactionParam", "transactionParam", "transactionRecordId", "_c", "signOptions", "allowChainAccountSelection", "broadcast", "generateAutoSignCredential", "multiSigChainAccounts", "returnSignedTransaction", "autoSign", "allow_chain_account_selection", "auto_sign", "expire_seconds", "generate_auto_sign_credential", "multisig_chain_accounts", "return_signed_transaction", "transaction_record_id", "mapSignResultFromApi", "apiResult", "transactionId", "transaction_id", "rest", "__rest", "callApiSignTransaction", "TransactionSign", "callApiCustodialSignTransaction", "CustodialSign", "getOreIdNewChainAccountUrl", "args", "accountOptions", "callbackUrl", "backgroundColor", "state", "oreIdUrl", "paramsNewAccount", "accessTokenParam", "encodedStateParam", "addAccessTokenAndHmacToUrl", "getOreIdAuthUrl", "linkToAccount", "returnAccessToken", "returnIdToken", "linkToAccountParam", "codeParam", "emailParam", "phoneParam", "returnAccessTokenParam", "returnIdTokenParam", "getOreIdSignUrl", "encodedTransaction", "encodedSignedTransaction", "msgPackEncode", "emptyCheck", "hasOwnProperty", "containsEmpty", "firstEmptyKey", "undefined", "sortKeys", "NonEosDiscoveryKeyLookupFunc", "discoveryData", "keyToAccountMap", "transitProviderAttributesData", "providerName", "AlgoSigner", "chainType", "algorand", "providerId", "requiresLogin", "supportsDiscovery", "supportsSignArbitrary", "requiresLogoutLoginToDiscover", "requiresDiscoverToLogin", "helpText", "login", "sign", "discover", "versionsRequired", "discoveryKeyLookupFunc", "note", "accounts", "accountName", "authorization", "logoUrl", "Keycat", "eos", "Ledger", "defaultDiscoveryPathIndexList", "Lynx", "Meetone", "Metro", "Portis", "Scatter", "SimpleEos", "TokenPocket", "WalletConnect", "ethereum", "Web3", "WhaleVault", "getTransitProviderAttributes", "walletType", "find", "tp", "supportedTransitProviders", "TransitHelper", "_oreIdContext", "_user", "user", "transitAccessContexts", "prototype", "installTransitProviders", "eosTransitWalletProviders", "transitProvidersInstalled", "makeWalletProvider", "console", "walletProvider", "id", "setupTransitWallet", "assertHasProviderInstalled", "Transit", "assertProviderValidForChainNetwork", "getOrCreateTransitAccessContext", "chainContext", "transitProvider", "getWalletProviders", "wp", "transitWallet", "initWallet", "connect", "waitWhileWalletIsBusy", "appName", "settings", "getChainNetworkNextworkConfig", "networkConfig", "isNotEosNetwork", "walletContext", "initAccessContext", "network", "walletProviders", "connectToTransitProvider", "f", "_d", "authenticated", "loginToTransitProvider", "connected", "auth", "updateOreAccountPermissionsfromTransitWalletAuth", "isLoggedIn", "permissions", "hasError", "h", "error_1", "setIsBusy", "doTransitProviderLogin", "retryCount", "s", "u", "l", "discoverOptionsForProvider", "foundData", "findAccountInDiscoverData", "info", "transitAccountName", "logout", "loginWithTransitProvider", "loginOptions", "wallet", "i", "error_2", "providerType", "hasTransitProvider", "discoverWithTransit", "discoverOptions", "EosMain", "oreAccount", "discoveryPathIndexList", "result", "canDiscover", "discoverCredentialsInTransitWallet", "accountsAndPermissions", "transitWallet_1", "credentials", "credential", "__awaiter", "_this", "d", "v", "parent", "getChainNetworkFromTransitWallet", "transitChainNetwork", "_e", "addWalletPermissionsToOreIdAccount", "pathIndexListParam", "pathIndexList", "keyLookupFunc", "walletProviderType", "acct", "first", "signWithTransitProvider", "signTransactionWithTransitAndEosSDK", "signTransactionWithTransitAndAlgorandSDK", "signTransactionWithTransitAndEthereumSDK", "error_3", "serializedTransaction", "signStringWithTransitProvider", "string", "metadata", "signArbitrary", "signedString", "error_4", "eosApi", "transact", "actions", "blocksBehind", "signatures", "callDiscoverAfterSign", "signParams", "chainId", "requiredKeys", "abis", "signatureProvider", "ctx", "getAllChainNetworkSettings", "networks", "net", "hosts", "host", "updatePermissionsIfNecessary", "isTransitProvider", "inProgress", "canSignString", "helpTextForProvider", "ualProviderAttributesData", "Anchor", "Wombat", "getUalProviderAttributes", "up", "supportedUALProviders", "UalHelper", "installUalProviders", "ualWalletProviders", "ualProvidersInstalled", "ualProviderFactory", "loginToUalProvider", "authenticator", "Ual", "users", "usersWithAccountsDetails_1", "r", "getAccountAndPermissionsFromUalUser", "userPermissions", "uwa", "connectToUalProvider", "SelectedAuthenticator", "ualAuthenticators", "ualAuthenticator", "ualNetworkConfig", "rpcEndpoints", "init", "isErrored", "ualError", "getError", "cause", "userForChain", "updateOreAccountPermissionsfromUalUser", "ualUser", "getChainId", "getChainNetworkByChainId", "getAccountName", "getKeys", "publicKeys", "loginWithUalProvider", "hasUalProvider", "signWithUalProvider", "signTransaction", "signedTransactionResponse", "signStringWithUalProvider", "error_5", "isUalProvider", "isLoading", "Observable", "_subscribers", "subscribe", "subscriber", "hasThisSubscriber", "unsubscribe", "callSubscribers", "callApiUpdateDelayWalletSetup", "UpdateDelayWalletSetup", "User", "_super", "onUpdateAccessTokenHelper", "newAccessTokenHelper", "_accountName", "_accessTokenHelper", "accessTokenHelper", "__extends", "defineProperty", "get", "assertUserHasData", "_userSourceData", "otherInfo", "chainAccounts", "getChainAccounts", "setUserSourceData", "userSourceData", "perm", "defaultPermission", "getDefaultPermissionForChainAccount", "getPermissionForChainAccount", "hasData", "assertUserHasValidEmail", "getData", "forceRefresh", "getNewChainAccountUrl", "newAccountOptions", "newAccountCallbackUrl", "newAccountUrl", "deleteTestUser", "disableDelayedWalletSetup", "sendVerificationCodeToEmail", "Email", "checkVerificationCodeForEmail", "mapUserPermission", "permissionName", "other", "accountPermissions", "isDefault", "some", "AccessTokenHelper", "ignoreIssuer", "_ignoreIssuer", "setAccessToken", "_accessToken", "_decodedAccessToken", "_idToken", "_decodedIdToken", "assertIsTokenValid", "decodedAccessToken", "clearAccessToken", "clearIdToken", "setIdToken", "hasExpired", "isTokenDateValidNow", "assertIdTokenMatchesAccessToken", "decodedIdToken", "exp", "assertHasAccessToken", "isTokenValid", "iss", "sub", "nowInMs", "getTime", "nbf", "Auth", "saveAccessTokenAndNotifySubscribers", "_localState", "localState", "_transitHelper", "_ualHelper", "initAccessTokenHelper", "savedToken", "set", "saveAccessToken", "connectWithWallet", "walletHelper", "isAValidExternalWalletType", "connectToWalletProvider", "convertOauthTokens", "parms", "loginWithToken", "loginWithAccessOrIdTokenToken", "newUserWithToken", "userOptions", "newAccountWithIdToken", "checkJwtTokenAndReturnError", "jwtTokenString", "tokenCheckError", "setAuthResult", "idTokenCheckError", "getLoginUrl", "authCallbackUrl", "loginUrl", "handleAuthCallback", "callbackUrlString", "process_id", "authResponse", "externalWalletsNotImplemented", "version", "publicApiEndpoints", "Transaction", "assertValidTransactionAndSetData", "_data", "createTransactionData", "missingFields", "validationIssues", "setTransactionData", "assertTransactionAccountValidForUser", "_g", "chainAccountsInWallet", "allPermissionsExternal", "privateKeyStoredExterally", "externalWalletType", "_f", "validate", "getSignUrl", "signCallbackUrl", "signUrl", "checkCanAutoSign", "autoSignCredentialsExist", "signWithPassword", "signWithWallet", "generateHmac", "secret", "HmacSHA256", "generateHmacWithApiKeyOrProxyServer", "useProxyServer", "Axios", "post", "headers", "hmac", "networkError_1", "appendHmacToUrl", "urlEncodedHmac", "LocalState", "appId", "storage", "cachedaccessToken", "cachedUser", "accessTokenKey", "loadAccessToken", "getItem", "setItem", "removeItem", "clear", "CookieStorage", "Cookie", "remove", "expires", "LocalStorage", "localStorage", "DummyStorage", "MemoryStorage", "memoryCache", "StorageHandler", "tryLocalStorageFirst", "triedLocalStorage", "triedCookieStorage", "localStorage_1", "failover", "didSet", "Settings", "_cachedChainNetworks", "getConfigFromApi", "Chains", "results", "chains", "getChainNetworkSettings", "getConfig", "networkSettings", "port", "protocol", "chainSettings", "networkSetting", "ore", "WalletHelper", "transitHelper", "ualHelper", "getExternalWalletInfo", "externalWalletInterface", "getExternalWalletInfoByChain", "chain", "transitWalletsInstalledInfo", "ualWalletsInstalledInfo", "__spreadArray", "signResult", "signStringWithWallet", "assertWalletTypeValidForChainNetwork", "OreId", "_options", "validateAndSetOptions", "storageHandler", "_settings", "_auth", "_walletHelper", "_initializerPlugins", "plugins", "_isInitialized", "startsWith", "assertIsInitialized", "_popup", "isUsingProxyServer", "isDemoApp", "isInitialized", "popup", "custodialSignString", "custodialNewAccount", "custodialMigrateAccount", "migrateOptions", "createTransaction", "isBusy", "setBusyCallback", "requiresProxyServer", "getAppAccessToken", "handleNewAccountResponse", "handleSignCallback", "appendTimestampAndSignatureToWidgetProps", "timestamp", "signature", "signedProps", "nowTimestamp", "origin", "location", "requestMethod", "endpoint", "overrideAccessToken", "g", "y", "T", "w", "oreIdUrlBase", "Authorization", "urlString", "urlWithParams", "axios", "overrideAppAccessToken", "completeUrl", "PluginType", "exports", "WidgetVersion"]
}
