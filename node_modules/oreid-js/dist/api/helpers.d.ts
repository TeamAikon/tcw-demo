import { JSONObject, ApiKeyUsedFor } from '../models';
import OreIdContext from '../core/IOreidContext';
/** check the header of the request for each required param in paramNames */
export declare function assertHeaderhasRequiredValues(params: JSONObject, paramNames: any[], apiName: string): void;
/** Check that we have an apiKey or accessToken */
export declare function assertHasApiKeyOrAccessToken(oreIdContext: OreIdContext, apiName: string): void;
/** Check that we have an accessToken */
export declare function assertHasAccessToken(oreIdContext: OreIdContext, apiName: string): void;
/** Check that we have an apiKey */
export declare function assertHasApiKey(oreIdContext: OreIdContext, usedFor: ApiKeyUsedFor, apiName: string): void;
/** Check API params for each required param in paramNames */
export declare function assertParamsHaveRequiredValues(params: JSONObject, paramNames: any[], apiName: string): void;
/** Check API params - must include at least one of the params in the list */
export declare function assertParamsHaveAtLeastOneOfValues(params: JSONObject, paramNames: any[], apiName: string): void;
/** Check API params - must include one and only one of params in the list */
export declare function assertParamsHaveOnlyOneOfValues(params: JSONObject, paramNames: any[], apiName: string): void;
/** remove processId from data */
export declare function extractProcessIdFromData(data: any): {
    data: any;
    processId: any;
};
