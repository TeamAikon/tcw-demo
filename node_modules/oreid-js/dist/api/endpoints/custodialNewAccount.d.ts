import OreIdContext from '../../core/IOreidContext';
import { AccountName, AccountType } from '../../models';
import { ApiResultWithErrorCode } from '../models';
export declare type ApiCustodialNewAccountParams = {
    accountType: AccountType;
    /** whether we should skip creation of blockchain accounts for a new user */
    delayWalletSetup?: boolean;
    email?: string;
    emailVerified?: boolean;
    idToken?: string;
    isTestUser?: boolean;
    name?: string;
    picture?: string;
    phone?: string;
    phoneVerified?: boolean;
    userName?: string;
    userPassword?: string;
};
export declare type ApiCustodialNewAccountBodyParams = {
    account_type: AccountType;
    /** whether we should skip creation of blockchain accounts for a new user */
    delay_wallet_setup?: boolean;
    email?: string;
    email_verified?: boolean;
    id_token?: string;
    is_test_user?: boolean;
    name?: string;
    picture?: string;
    phone?: string;
    phone_verified?: boolean;
    user_name?: string;
    user_password?: string;
    user_password_encrypted?: string;
    user_password_encrypted_backup?: string;
};
export declare type ApiCustodialNewAccountResult = {
    accountName: AccountName;
} & ApiResultWithErrorCode;
/** Call the custodial/new-user api
 * Create a new user account that is managed by your app
 * Requires a wallet password (userPassword) on behalf of the user
 * Requires an apiKey with the createUser right
 * Returns: accountName of newly created account
 *       OR errorCode, errorMessage, and message if any problems */
export declare function callApiCustodialNewAccount(oreIdContext: OreIdContext, params: ApiCustodialNewAccountParams): Promise<ApiCustodialNewAccountResult>;
