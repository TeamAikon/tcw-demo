import { AccountName, AccountType, ChainAccount, ChainNetwork } from '../common/models';
export declare enum RequestType {
    Get = "get",
    Post = "put"
}
export declare enum ApiEndpoint {
    AddPermission = "account/add-permission",
    AppToken = "app-token",
    CanAutoSign = "transaction/can-auto-sign",
    ConvertOauthTokens = "account/convert-oauth",
    CustodialMigrateAccount = "custodial/migrate-account",
    CustodialNewAccount = "custodial/new-user",
    CustodialSignString = "custodial/sign-string",
    DeleteTestUser = "account/delete-test-user",
    CustodialSign = "custodial/sign",
    GetUser = "account/user",
    GetConfig = "services/config",
    LoginUserWithToken = "account/login-user-with-token",
    NewUserWithToken = "account/new-user-with-token",
    PasswordLessSendCode = "account/login-passwordless-send-code",
    PasswordLessVerifyCode = "account/login-passwordless-verify-code",
    TransactionSign = "transaction/sign",
    UpdateDelayWalletSetup = "account/update-delay-wallet-setup"
}
/** Typical API Response (when no data returned) */
export declare type ApiMessageResult = {
    message?: string;
    error?: string;
    processId?: string;
    success?: string;
};
export declare type ApiResultWithErrorCode = {
    message?: string;
    processId?: string;
    errorCode?: string;
    errorMessage?: string;
};
export declare type CustodialMigrateAccountParams = {
    account: AccountName;
    chainAccount: ChainAccount;
    chainNetwork: ChainNetwork;
    toType: AccountType;
    userPassword: string;
};
export declare type CustodialMigrateAccountApiBodyParams = {
    account: AccountName;
    chain_account: ChainAccount;
    chain_network: ChainNetwork;
    to_type: AccountType;
    user_password: string;
};
