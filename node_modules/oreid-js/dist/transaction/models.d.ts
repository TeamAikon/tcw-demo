import { AccountName, AuthProvider, ChainAccount, ChainNetwork, JSONObject } from '../common/models';
import { SignStringMethod } from '../webWidget/models';
export declare type SignStringData = {
    account?: AccountName;
    chainAccount?: ChainAccount | string;
    chainNetwork: ChainNetwork | string;
    /** optional - alternative method of signing (chain-specific) */
    signMethod?: SignStringMethod;
    string?: string;
};
export declare type TransactionData = {
    account?: AccountName;
    chainAccount?: ChainAccount;
    chainNetwork: ChainNetwork;
    expireSeconds?: number;
    signedTransaction?: JSONObject;
    transaction?: JSONObject;
    encodedSignedTransaction?: string;
    encodedTransaction?: string;
    transactionChainAccount?: string;
    transactionRecordId?: string;
    signOptions?: TransactionSignOptions;
};
export declare type TransactionSignOptions = {
    allowChainAccountSelection?: boolean;
    broadcast?: boolean;
    generateAutoSignCredential?: boolean;
    multiSigChainAccounts?: string;
    /** Prevents the use of auto sign functionality while signing the transaction */
    preventAutosign?: boolean;
    returnSignedTransaction?: boolean;
    signatureOnly?: boolean;
    userPassword?: string;
    userPasswordEncrypted?: string;
    accessToken?: string;
    callbackUrl?: string;
    provider?: AuthProvider;
    signExternalWithOreId?: boolean;
    state?: string;
};
export interface CreateTransactionData extends Omit<TransactionData, 'account' | 'encodedSignedTransaction' | 'encodedTransaction'> {
}
